2020-04-18 06:53:45,120 INFO fr.inria.astor.core.setup.ProjectConfiguration - Version of the JVM used: 1.8.0_242
2020-04-18 06:53:45,121 INFO main - Java version of the JDK used to run tests: 1.8.0_242
2020-04-18 06:53:45,123 INFO main - The compliance of the JVM is:  8
2020-04-18 06:53:45,125 INFO main - command line arguments: [-mode  jKali  -location  /apiarty/data/WICKET-5359/wicket/wicket-util/  -jvm4testexecution  /usr/lib/jvm/java-8-openjdk-amd64/bin/  -failing  org.apache.wicket.util.string.StringValueTest  -srcjavafolder  /src/main/java/  -srctestfolder  /src/test/java/  -binjavafolder  /target/classes  -bintestfolder  /target/test-classes  -maxtime  120  -stopfirst  true  -maxgen  1000000  -seed  0  -scope  local  -population  1  -dependencies  /root/.m2/repository/junit/junit/4.11/junit-4.11.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/root/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/root/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.5/jcl-over-slf4j-1.7.5.jar:/astor/lib/gzoltar/com.gzoltar-0.0.3.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.1.1.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.0.1.pom]
2020-04-18 06:53:45,128 INFO fr.inria.main.evolution.AstorMain - Running Astor on a JDK at /usr/lib/jvm/java-8-openjdk-amd64/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/apiarty/data/WICKET-5359/wicket/wicket-util/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:901) - Test retrieved from classes: 41
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.calculateSuspicious(GZoltarFaultLocalization.java:68) - -Executing Gzoltar classpath: /astor/./output_astor/AstorMain-wicket-util//bin//default from 41 classes with test cases
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:148) - Gzoltar fault localization: min susp value parameter: 0.1
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:168) - -gz-Adding classpath: [/astor/./output_astor/AstorMain-wicket-util//bin//default, /root/.m2/repository/junit/junit/4.11/junit-4.11.jar, /root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /root/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, /root/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, /root/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, /root/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar, /root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar, /root/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar, /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.5/jcl-over-slf4j-1.7.5.jar, /astor/lib/gzoltar/com.gzoltar-0.0.3.jar, /root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.1.1.jar]
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:208) - Test failt: org.apache.wicket.util.markup.xhtml.WellFormedXmlTestCase#markupFiles
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:208) - Test failt: org.apache.wicket.util.license.ApacheLicenceHeaderTest#licenseHeaders
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:220) - Gzoltar Test Result Total:171, fails: 2, GZoltar suspicious 3570, with positive susp 381
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:228) - nr test results 171
[INFO ] fr.inria.astor.core.faultlocalization.gzoltar.GZoltarFaultLocalization.searchSuspicious(GZoltarFaultLocalization.java:283) - Gzoltar found: 381 with susp > 0.1, we consider: 381
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:915) - Setting up the max to 176130 milliseconds (176 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:710) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/root/.m2/repository/junit/junit/4.11/junit-4.11.jar, /root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /root/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar, /root/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar, /root/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar, /root/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar, /root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar, /root/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar, /root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.5/jcl-over-slf4j-1.7.5.jar, /astor/lib/gzoltar/com.gzoltar-0.0.3.jar, /root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.1.1.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:780) - Number of CtTypes created: 217
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:714) - 
---- Initial suspicious size: 381
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=info(Ljava/lang/String;Ljava/lang/Object;)V, lineNumber=603, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=info(Ljava/lang/String;Ljava/lang/Object;)V, lineNumber=604, susp=0.5]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;, lineNumber=259, susp=0.35355339059327373]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getTurboFilterChainDecision_1(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;, lineNumber=260, susp=0.35355339059327373]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V, lineNumber=402, susp=0.35355339059327373]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V, lineNumber=405, susp=0.35355339059327373]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V, lineNumber=406, susp=0.35355339059327373]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=filterAndLog_1(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V, lineNumber=407, susp=0.35355339059327373]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=133, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=364, susp=0.2886751345948129]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=107, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=113, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=117, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=118, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=122, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=124, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=132, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=133, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=134, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=136, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=139, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=140, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=141, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=142, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=143, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=144, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=145, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=147, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=148, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=149, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=150, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=152, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=incSize()V, lineNumber=156, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=incSize()V, lineNumber=157, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.LoggerContext, methodName=getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;, lineNumber=45, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.selector.DefaultContextSelector, methodName=getLoggerContext()Lch/qos/logback/classic/LoggerContext;, lineNumber=30, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.selector.DefaultContextSelector, methodName=getDefaultLoggerContext()Lch/qos/logback/classic/LoggerContext;, lineNumber=34, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getName()Ljava/lang/String;, lineNumber=123, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=132, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=135, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=136, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=137, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=138, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=140, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=141, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=145, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=355, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=356, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=363, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=367, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=368, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=369, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.Logger, methodName=createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;, lineNumber=370, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.ContextSelectorStaticBinder, methodName=getContextSelector()Lch/qos/logback/classic/selector/ContextSelector;, lineNumber=104, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;, lineNumber=269, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;, lineNumber=270, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=getLogger(Ljava/lang/Class;)Lorg/slf4j/Logger;, lineNumber=281, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=getILoggerFactory()Lorg/slf4j/ILoggerFactory;, lineNumber=293, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=getILoggerFactory()Lorg/slf4j/ILoggerFactory;, lineNumber=297, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.LoggerFactory, methodName=getILoggerFactory()Lorg/slf4j/ILoggerFactory;, lineNumber=299, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=getSeparatorIndexOf(Ljava/lang/String;I)I, lineNumber=40, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=getSeparatorIndexOf(Ljava/lang/String;I)I, lineNumber=41, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=getSeparatorIndexOf(Ljava/lang/String;I)I, lineNumber=42, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=ch.qos.logback.classic.util.LoggerNameUtil, methodName=getSeparatorIndexOf(Ljava/lang/String;I)I, lineNumber=44, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=getSingleton()Lorg/slf4j/impl/StaticLoggerBinder;, lineNumber=68, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=getLoggerFactory()Lorg/slf4j/ILoggerFactory;, lineNumber=103, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=getLoggerFactory()Lorg/slf4j/ILoggerFactory;, lineNumber=107, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:223) -  Not ctClass for suspicious code Candidate [className=org.slf4j.impl.StaticLoggerBinder, methodName=getLoggerFactory()Lorg/slf4j/ILoggerFactory;, lineNumber=111, susp=0.25]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 381,  281
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 281
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 281, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:755) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /astor/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 176130
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= /src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.apache.wicket.util.string.StringValueTest
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_242
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jKali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /usr/lib/jvm/java-8-openjdk-amd64/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /root/.m2/repository/junit/junit/4.11/junit-4.11.jar:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/root/.m2/repository/org/mockito/mockito-core/1.9.5/mockito-core-1.9.5.jar:/root/.m2/repository/org/objenesis/objenesis/1.0/objenesis-1.0.jar:/root/.m2/repository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/root/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.5/jcl-over-slf4j-1.7.5.jar:/astor/lib/gzoltar/com.gzoltar-0.0.3.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.1.1.jar:/root/.m2/repository/com/gzoltar/gzoltar/0.1.1/gzoltar-0.0.1.pom
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= /src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /apiarty/data/WICKET-5359/wicket/wicket-util/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isBootstrap())  { 	return null; } ` -topatch--> `if (true)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isBootstrap())  { 	return null; } ` -topatch--> `if (false)  { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 124, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isBootstrap())  { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 126, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!isSnake()) && (prev != null))  { 	return prev.previousSnake(); } ` -topatch--> `if (true)  { 	return this.prev.previousSnake(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!isSnake()) && (prev != null))  { 	return prev.previousSnake(); } ` -topatch--> `if (false)  { 	return this.prev.previousSnake(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 128, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!isSnake()) && (prev != null))  { 	return prev.previousSnake(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.myers.PathNode line: 130, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return prev.previousSnake() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null)  { 	closeable.close(); } ` -topatch--> `if (true)  { 	closeable.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null)  { 	closeable.close(); } ` -topatch--> `if (false)  { 	closeable.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (closeable != null)  { 	closeable.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 103, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `closeable.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.io.IOUtils line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.wicket.util.io.IOUtils.close(closeable) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count <= 0)  { 	return new java.util.ArrayList<>(); } else   { 	return new java.util.ArrayList<>[...] ` -topatch--> `if (true)  { 	return new java.util.ArrayList<>(); } else   { 	return new java.util.ArrayList<>(seq.s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count <= 0)  { 	return new java.util.ArrayList<>(); } else   { 	return new java.util.ArrayList<>[...] ` -topatch--> `if (false)  { 	return new java.util.ArrayList<>(); } else   { 	return new java.util.ArrayList<>(seq.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 337, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (count <= 0)  { 	return new java.util.ArrayList<>(); } else   { 	return new java.util.ArrayList<>[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 339, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.diff.Chunk line: 343, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.util.ArrayList<>(seq.subList(pos, pos + count)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.apache.wicket.util.string.Strings.isEmpty(property))  { 	baseDirectory = new java.io.File(p[...] ` -topatch--> `if (true)  { 	this.baseDirectory = new java.io.File(property).getAbsoluteFile(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.apache.wicket.util.string.Strings.isEmpty(property))  { 	baseDirectory = new java.io.File(p[...] ` -topatch--> `if (false)  { 	this.baseDirectory = new java.io.File(property).getAbsoluteFile(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 249, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.apache.wicket.util.string.Strings.isEmpty(property))  { 	baseDirectory = new java.io.File(p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 261, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `licenseHeaderHandlers = new org.apache.wicket.util.license.ILicenseHeaderHandler[]{  new org.apache.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase line: 273, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeader[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:450) - -Found Solution, child variant #24
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 277.128
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:248) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:250) - End Repair Search: Found solution
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:251) - Solution stored at: /astor/./output_astor/AstorMain-wicket-util//src/
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:190) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 24
 
time(sec)= 274
operation: RemoveOp
location= org.apache.wicket.util.license.ApacheLicenseHeaderTestCase
line= 273
lineSuspiciousness= 0.707
lineSuspiciousness= 18
original statement= for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeaderHandlers) 
{
	visitFiles(licenseHeaderHandler.getSuffixes(), licenseHeaderHandler.getIgnoreFiles(), 
	new org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.FileVisitor() {

		@java.lang.Override
		public void visitFile(final java.io.File file) 
		{
			if (licenseHeaderHandler.checkLicenseHeader(file) == false) 
			{
				if ((addHeaders == false) || 
				(licenseHeaderHandler.addLicenseHeader(file) == false)) 
				{
					java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);

					if (files == null) 
					{
						files = new java.util.ArrayList<>();
						badFiles.put(licenseHeaderHandler, files);
					}

					files.add(file);
				}
			}
		}
	});
}
buggy kind= CtForEachImpl|CtBlockImpl
fixed statement= 
generation= 1
ingredientScope= -
validation=|true|0|171|[]|
diffpatch=--- src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java
+++ src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java
@@ -146,23 +146,6 @@
 	public void licenseHeaders() {
 		licenseHeaderHandlers = new org.apache.wicket.util.license.ILicenseHeaderHandler[]{ new org.apache.wicket.util.license.JavaLicenseHeaderHandler(javaIgnore), new org.apache.wicket.util.license.JavaScriptLicenseHeaderHandler(javaScriptIgnore), new org.apache.wicket.util.license.XmlLicenseHeaderHandler(xmlIgnore), new org.apache.wicket.util.license.PropertiesLicenseHeaderHandler(propertiesIgnore), new org.apache.wicket.util.license.HtmlLicenseHeaderHandler(htmlIgnore), new org.apache.wicket.util.license.VelocityLicenseHeaderHandler(velocityIgnore), new org.apache.wicket.util.license.XmlPrologHeaderHandler(xmlPrologIgnore), new org.apache.wicket.util.license.CssLicenseHeaderHandler(cssIgnore) };
 		final java.util.Map<org.apache.wicket.util.license.ILicenseHeaderHandler, java.util.List<java.io.File>> badFiles = new java.util.HashMap<>();
-		for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeaderHandlers) {
-			visitFiles(licenseHeaderHandler.getSuffixes(), licenseHeaderHandler.getIgnoreFiles(), new org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.FileVisitor() {
-				@java.lang.Override
-				public void visitFile(final java.io.File file) {
-					if (licenseHeaderHandler.checkLicenseHeader(file) == false) {
-						if ((addHeaders == false) || (licenseHeaderHandler.addLicenseHeader(file) == false)) {
-							java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);
-							if (files == null) {
-								files = new java.util.ArrayList<>();
-								badFiles.put(licenseHeaderHandler, files);
-							}
-							files.add(file);
-						}
-					}
-				}
-			});
-		}
 		failIncorrectLicenceHeaders(badFiles);
 	}
 


diffpatchoriginal=--- src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java
+++ src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java
@@ -270,33 +270,33 @@
 
 		final java.util.Map<org.apache.wicket.util.license.ILicenseHeaderHandler, java.util.List<java.io.File>> badFiles = new java.util.HashMap<>();
 
-		for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeaderHandlers) 
-		{
-			visitFiles(licenseHeaderHandler.getSuffixes(), licenseHeaderHandler.getIgnoreFiles(), 
-			new org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.FileVisitor() {
-
-				@java.lang.Override
-				public void visitFile(final java.io.File file) 
-				{
-					if (licenseHeaderHandler.checkLicenseHeader(file) == false) 
-					{
-						if ((addHeaders == false) || 
-						(licenseHeaderHandler.addLicenseHeader(file) == false)) 
-						{
-							java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);
-
-							if (files == null) 
-							{
-								files = new java.util.ArrayList<>();
-								badFiles.put(licenseHeaderHandler, files);
-							}
 
-							files.add(file);
-						}
-					}
-				}
-			});
-		}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 
 		failIncorrectLicenceHeaders(badFiles);
 	}



Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=277.128
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=19
NR_FAILLING_COMPILATIONS=4
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=24
TIME=274
VALIDATION=|true|0|171|[]|
GENERATION=1
FOLDER_SOLUTION_CODE=/astor/./output_astor/AstorMain-wicket-util//src//variant-24
--Patch Hunk #1
OPERATOR=RemoveOp

LOCATION=org.apache.wicket.util.license.ApacheLicenseHeaderTestCase

PATH=/apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java

MODIFIED_FILE_PATH=/astor/./output_astor/AstorMain-wicket-util//src//variant-24/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java

LINE=273

SUSPICIOUNESS=0.707

MP_RANKING=18

ORIGINAL_CODE=for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeaderHandlers) 
{
	visitFiles(licenseHeaderHandler.getSuffixes(), licenseHeaderHandler.getIgnoreFiles(), 
	new org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.FileVisitor() {

		@java.lang.Override
		public void visitFile(final java.io.File file) 
		{
			if (licenseHeaderHandler.checkLicenseHeader(file) == false) 
			{
				if ((addHeaders == false) || 
				(licenseHeaderHandler.addLicenseHeader(file) == false)) 
				{
					java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);

					if (files == null) 
					{
						files = new java.util.ArrayList<>();
						badFiles.put(licenseHeaderHandler, files);
					}

					files.add(file);
				}
			}
		}
	});
}

BUGGY_CODE_TYPE=CtForEachImpl|CtBlockImpl

PATCH_HUNK_CODE=null

PATCH_HUNK_TYPE=null

INGREDIENT_SCOPE=null

INGREDIENT_PARENT=null

PATCH_DIFF_ORIG=--- src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java
+++ src/main/java/org/apache/wicket/util/license/ApacheLicenseHeaderTestCase.java
@@ -270,33 +270,33 @@
 
 		final java.util.Map<org.apache.wicket.util.license.ILicenseHeaderHandler, java.util.List<java.io.File>> badFiles = new java.util.HashMap<>();
 
-		for (final org.apache.wicket.util.license.ILicenseHeaderHandler licenseHeaderHandler : licenseHeaderHandlers) 
-		{
-			visitFiles(licenseHeaderHandler.getSuffixes(), licenseHeaderHandler.getIgnoreFiles(), 
-			new org.apache.wicket.util.license.ApacheLicenseHeaderTestCase.FileVisitor() {
-
-				@java.lang.Override
-				public void visitFile(final java.io.File file) 
-				{
-					if (licenseHeaderHandler.checkLicenseHeader(file) == false) 
-					{
-						if ((addHeaders == false) || 
-						(licenseHeaderHandler.addLicenseHeader(file) == false)) 
-						{
-							java.util.List<java.io.File> files = badFiles.get(licenseHeaderHandler);
-
-							if (files == null) 
-							{
-								files = new java.util.ArrayList<>();
-								badFiles.put(licenseHeaderHandler, files);
-							}
 
-							files.add(file);
-						}
-					}
-				}
-			});
-		}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 
 		failIncorrectLicenceHeaders(badFiles);
 	}



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 339.303
