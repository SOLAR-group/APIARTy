11:20:28.181 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [/apiarty/data/LOG4J2-834/logging-log4j2/log4j-core/src/main/java, /apiarty/data/LOG4J2-834/logging-log4j2/log4j-core/src/test/java]
11:20:28.191 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/apiarty/data/LOG4J2-834/logging-log4j2/log4j-core/target/classes/, file:/apiarty/data/LOG4J2-834/logging-log4j2/log4j-core/target/test-classes/, file:/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.2-SNAPSHOT/log4j-api-2.2-SNAPSHOT.jar, file:/root/.m2/repository/org/osgi/org.osgi.core/4.3.1/org.osgi.core-4.3.1.jar, file:/root/.m2/repository/com/lmax/disruptor/3.3.0/disruptor-3.3.0.jar, file:/root/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.3/jackson-core-2.4.3.jar, file:/root/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.3/jackson-databind-2.4.3.jar, file:/root/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.0/jackson-annotations-2.4.0.jar, file:/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.4.3/jackson-dataformat-yaml-2.4.3.jar, file:/root/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.4.3/jackson-dataformat-xml-2.4.3.jar, file:/root/.m2/repository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.4.3/jackson-module-jaxb-annotations-2.4.3.jar, file:/root/.m2/repository/org/codehaus/woodstox/stax2-api/3.1.4/stax2-api-3.1.4.jar, file:/root/.m2/repository/org/codehaus/woodstox/woodstox-core-asl/4.3.0/woodstox-core-asl-4.3.0.jar, file:/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, file:/root/.m2/repository/org/fusesource/jansi/jansi/1.11/jansi-1.11.jar, file:/root/.m2/repository/com/sun/mail/javax.mail/1.5.2/javax.mail-1.5.2.jar, file:/root/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar, file:/root/.m2/repository/org/eclipse/persistence/javax.persistence/2.1.0/javax.persistence-2.1.0.jar, file:/root/.m2/repository/org/jboss/spec/javax/jms/jboss-jms-api_1.1_spec/1.0.1.Final/jboss-jms-api_1.1_spec-1.0.1.Final.jar, file:/root/.m2/repository/org/apache/logging/log4j/log4j-api/2.2-SNAPSHOT/log4j-api-2.2-SNAPSHOT-tests.jar, file:/root/.m2/repository/javax/jmdns/jmdns/3.4.1/jmdns-3.4.1.jar, file:/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/root/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, file:/root/.m2/repository/org/slf4j/slf4j-ext/1.7.7/slf4j-ext-1.7.7.jar, file:/root/.m2/repository/ch/qos/cal10n/cal10n-api/0.8.1/cal10n-api-0.8.1.jar, file:/root/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/root/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar, file:/root/.m2/repository/org/easymock/easymock/3.2/easymock-3.2.jar, file:/root/.m2/repository/cglib/cglib-nodep/2.2.2/cglib-nodep-2.2.2.jar, file:/root/.m2/repository/org/objenesis/objenesis/1.3/objenesis-1.3.jar, file:/root/.m2/repository/org/hsqldb/hsqldb/2.3.2/hsqldb-2.3.2.jar, file:/root/.m2/repository/com/h2database/h2/1.3.175/h2-1.3.175.jar, file:/root/.m2/repository/org/eclipse/persistence/org.eclipse.persistence.jpa/2.5.2/org.eclipse.persistence.jpa-2.5.2.jar, file:/root/.m2/repository/org/eclipse/persistence/org.eclipse.persistence.asm/2.5.2/org.eclipse.persistence.asm-2.5.2.jar, file:/root/.m2/repository/org/eclipse/persistence/org.eclipse.persistence.antlr/2.5.2/org.eclipse.persistence.antlr-2.5.2.jar, file:/root/.m2/repository/org/eclipse/persistence/org.eclipse.persistence.jpa.jpql/2.5.2/org.eclipse.persistence.jpa.jpql-2.5.2.jar, file:/root/.m2/repository/org/eclipse/persistence/org.eclipse.persistence.core/2.5.2/org.eclipse.persistence.core-2.5.2.jar, file:/root/.m2/repository/org/mockejb/mockejb/0.6-beta2/mockejb-0.6-beta2.jar, file:/root/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar, file:/root/.m2/repository/cglib/cglib-full/2.0.2/cglib-full-2.0.2.jar, file:/root/.m2/repository/org/apache/activemq/activemq-broker/5.10.0/activemq-broker-5.10.0.jar, file:/root/.m2/repository/org/apache/activemq/activemq-client/5.10.0/activemq-client-5.10.0.jar, file:/root/.m2/repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1.1/geronimo-jms_1.1_spec-1.1.1.jar, file:/root/.m2/repository/org/fusesource/hawtbuf/hawtbuf/1.10/hawtbuf-1.10.jar, file:/root/.m2/repository/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1/geronimo-j2ee-management_1.1_spec-1.0.1.jar, file:/root/.m2/repository/org/apache/activemq/activemq-openwire-legacy/5.10.0/activemq-openwire-legacy-5.10.0.jar, file:/root/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar, file:/root/.m2/repository/ch/qos/logback/logback-core/1.1.2/logback-core-1.1.2.jar, file:/root/.m2/repository/ch/qos/logback/logback-classic/1.1.2/logback-classic-1.1.2.jar, file:/root/.m2/repository/org/eclipse/osgi/org.eclipse.osgi/3.7.1/org.eclipse.osgi-3.7.1.jar, file:/root/.m2/repository/org/apache/felix/org.apache.felix.framework/4.4.1/org.apache.felix.framework-4.4.1.jar, file:/root/.m2/repository/net/javacrumbs/json-unit/json-unit/1.1.6/json-unit-1.1.6.jar, file:/root/.m2/repository/net/javacrumbs/json-unit/json-unit-core/1.1.6/json-unit-core-1.1.6.jar, file:/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/root/.m2/repository/commons-codec/commons-codec/1.9/commons-codec-1.9.jar, file:/root/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar]
11:20:28.192 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
11:20:28.193 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.logging.log4j.core.impl.ThrowableProxyTest]
11:20:28.198 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/nopol/nopol/lib/z3/z3_for_linux', projectSources=[/apiarty/data/LOG4J2-834/logging-log4j2/log4j-core/src/main/java, /apiarty/data/LOG4J2-834/logging-log4j2/log4j-core/src/test/java], projectClasspath='[Ljava.net.URL;@3c5a99da', projectTests=[org.apache.logging.log4j.core.impl.ThrowableProxyTest], complianceLevel=7, outputFolder=., json=false}
11:20:28.199 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 2
11:20:28.214 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 49 MB
11:20:28.215 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
11:20:28.216 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 59 MB
11:20:28.216 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_242
11:20:28.220 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
11:20:28.220 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /apiarty/apiarty.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
11:21:32.209 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
11:21:32.211 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.util.LoaderUtil:117 which is executed by 2 tests
11:21:32.212 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.logging.log4j.util.LoaderUtil:117
11:21:32.213 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
11:21:32.214 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.util.LoaderUtil:116 which is executed by 2 tests
11:21:32.215 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.logging.log4j.util.LoaderUtil:116
11:21:32.215 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
11:21:32.216 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:452 which is executed by 3 tests
-2136861393
11:21:41.493 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:21:43.294 [pool-3-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:127) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:26) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:21:43.298 [pool-3-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:21:55.814 [pool-2-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
error: error reading /root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar; error in opening zip file
error: error reading /root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar; error in opening zip file
ThrowableProxy.java:309: error: variable clazz might not have been initialized
        return clazz;
               ^
Note: ThrowableProxy.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
11:21:55.830 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
11:21:55.831 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.util.Loader:238 which is executed by 3 tests
-2013651916
11:22:05.181 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
11:22:05.182 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:565 which is executed by 4 tests
-2136861393
11:22:14.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
11:22:14.034 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:564 which is executed by 4 tests
-2136861393
11:22:22.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
11:22:22.812 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:557 which is executed by 4 tests
-2136861393
11:22:31.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:22:33.508 [pool-7-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:127) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:26) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:22:33.515 [pool-7-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:22:44.007 [pool-6-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
error: error reading /root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar; error in opening zip file
error: error reading /root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar; error in opening zip file
ThrowableProxy.java:388: error: variable extClassInfo might not have been initialized
            extStackTrace[i] = new org.apache.logging.log4j.core.impl.ExtendedStackTraceElement(stackTraceElement, extClassInfo);
                                                                                                                   ^
Note: ThrowableProxy.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
11:22:44.019 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:22:45.703 [pool-11-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:127) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:26) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:22:45.711 [pool-11-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:22:57.228 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
11:22:57.229 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:550 which is executed by 4 tests
-2136861393
11:23:05.919 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:23:07.380 [pool-17-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:127) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:26) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:23:07.386 [pool-17-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:23:17.639 [pool-16-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
error: error reading /root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar; error in opening zip file
error: error reading /root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar; error in opening zip file
ThrowableProxy.java:388: error: variable extClassInfo might not have been initialized
            extStackTrace[i] = new org.apache.logging.log4j.core.impl.ExtendedStackTraceElement(stackTraceElement, extClassInfo);
                                                                                                                   ^
Note: ThrowableProxy.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
11:23:17.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:23:19.054 [pool-21-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:127) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:26) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:23:19.058 [pool-21-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:23:29.320 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
11:23:29.321 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:545 which is executed by 4 tests
-2136861393
11:23:37.491 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
11:23:37.492 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:544 which is executed by 4 tests
-2136861393
11:23:45.902 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
11:23:45.903 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.logging.log4j.core.impl.ThrowableProxy:543 which is executed by 4 tests
-2136861393
11:23:54.239 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:23:56.029 [pool-27-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:127) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.Suite.runChild(Suite.java:26) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:23:56.042 [pool-27-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
07:24:08.092 [pool-34-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError.<clinit>(ThrowableProxyTest.java:51) ~[test-classes/:?]
	at org.apache.logging.log4j.core.impl.ThrowableProxyTest.testLogStackTraceWithClassThatCannotInitialize(ThrowableProxyTest.java:96) [test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_242]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_242]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_242]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_242]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:27) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:10) [nopol-0.2-SNAPSHOT-jar-with-dependencies.jar:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_242]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_242]
07:24:08.096 [pool-34-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:24:08.126 [pool-26-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.logging.log4j.core.impl.ThrowableProxyTest#testSerialization
11:24:08.128 [pool-26-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.logging.log4j.core.impl.ThrowableProxyTest#testStack
07:24:08.131 [pool-40-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - Could not initialize class org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError
java.lang.NoClassDefFoundError: Could not initialize class org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
07:24:08.133 [pool-40-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.NoClassDefFoundError: Could not initialize class org.apache.logging.log4j.core.impl.ThrowableProxyTest$AlwaysThrowsError
11:24:08.134 [pool-26-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Ignore the test org.apache.logging.log4j.core.impl.ThrowableProxyTest#testLogStackTraceWithClassThatCannotInitialize
11:24:08.167 [pool-26-thread-1] DEBUG f.i.l.r.n.s.d.DynamothSynthesizer - Collected 0 potential patches
11:24:08.169 [pool-26-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Applying patch: org.apache.logging.log4j.core.impl.ThrowableProxy:543: PRECONDITION false
11:24:17.969 [pool-26-thread-1] INFO  f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "false" is working
07:24:19.435 [pool-43-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - I always throw an Error when initialized
java.lang.Error: I always throw an Error when initialized
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
	at null
07:24:19.440 [pool-43-thread-1] ERROR org.apache.logging.log4j.core.impl.ThrowableProxyTest - java.lang.Error: I always throw an Error when initialized
11:24:19.442 [pool-26-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Skipped -9 patches for sake of performance
11:24:19.443 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
11:24:19.717 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 654
11:24:19.720 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 2831
11:24:19.720 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 6
11:24:19.721 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
11:24:19.721 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 231267ms
11:24:19.722 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
11:24:19.722 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
11:24:19.723 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - false
11:24:19.726 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 4
11:24:19.733 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - org.apache.logging.log4j.core.impl.ThrowableProxy:543: PRECONDITION
11:24:19.787 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - --- a/src/main/java/org/apache/logging/log4j/core/impl/ThrowableProxy.java
+++ b/src/main/java/org/apache/logging/log4j/core/impl/ThrowableProxy.java
@@ -542,33 +542,35 @@
         ClassLoader lastLoader = null;
-        for (int i = stackLength - 1; i >= 0; --i) {
-            final StackTraceElement stackTraceElement = stackTrace[i];
-            final String className = stackTraceElement.getClassName();
-            // The stack returned from getCurrentStack may be missing entries for java.lang.reflect.Method.invoke()
-            // and its implementation. The Throwable might also contain stack entries that are no longer
-            // present as those methods have returned.
-            ExtendedClassInfo extClassInfo;
-            if (clazz != null && className.equals(clazz.getName())) {
-                final CacheEntry entry = this.toCacheEntry(stackTraceElement, clazz, true);
-                extClassInfo = entry.element;
-                lastLoader = entry.loader;
-                stack.pop();
-                clazz = stack.isEmpty() ? null : stack.peek();
-            } else {
-                if (map.containsKey(className)) {
-                    final CacheEntry entry = map.get(className);
+        if (false) {
+            for (int i = stackLength - 1; i >= 0; --i) {
+                final StackTraceElement stackTraceElement = stackTrace[i];
+                final String className = stackTraceElement.getClassName();
+                // The stack returned from getCurrentStack may be missing entries for java.lang.reflect.Method.invoke()
+                // and its implementation. The Throwable might also contain stack entries that are no longer
+                // present as those methods have returned.
+                ExtendedClassInfo extClassInfo;
+                if (clazz != null && className.equals(clazz.getName())) {
+                    final CacheEntry entry = this.toCacheEntry(stackTraceElement, clazz, true);
                     extClassInfo = entry.element;
-                    if (entry.loader != null) {
-                        lastLoader = entry.loader;
-                    }
+                    lastLoader = entry.loader;
+                    stack.pop();
+                    clazz = stack.isEmpty() ? null : stack.peek();
                 } else {
-                    final CacheEntry entry = this.toCacheEntry(stackTraceElement,
-                            this.loadClass(lastLoader, className), false);
-                    extClassInfo = entry.element;
-                    map.put(stackTraceElement.toString(), entry);
-                    if (entry.loader != null) {
-                        lastLoader = entry.loader;
+                    if (map.containsKey(className)) {
+                        final CacheEntry entry = map.get(className);
+                        extClassInfo = entry.element;
+                        if (entry.loader != null) {
+                            lastLoader = entry.loader;
+                        }
+                    } else {
+                        final CacheEntry entry = this.toCacheEntry(stackTraceElement,
+                        this.loadClass(lastLoader, className), false);
+                        extClassInfo = entry.element;
+                        map.put(stackTraceElement.toString(), entry);
+                        if (entry.loader != null) {
+                            lastLoader = entry.loader;
+                        }
                     }
                 }
+                extStackTrace[i] = new ExtendedStackTraceElement(stackTraceElement, extClassInfo);
             }
-            extStackTrace[i] = new ExtendedStackTraceElement(stackTraceElement, extClassInfo);
         }

PATCH
