09:02:57.877 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [/workspaces/APIARTy/data/FLINK-3760/flink/flink-core/src/main/java, /workspaces/APIARTy/data/FLINK-3760/flink/flink-core/src/test/java]
09:02:57.887 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/workspaces/APIARTy/data/FLINK-3760/flink/flink-core/target/classes/, file:/workspaces/APIARTy/data/FLINK-3760/flink/flink-core/target/test-classes/, file:/root/.m2/repository/org/apache/flink/flink-annotations/1.1-SNAPSHOT/flink-annotations-1.1-SNAPSHOT.jar, file:/root/.m2/repository/com/esotericsoftware/kryo/kryo/2.24.0/kryo-2.24.0.jar, file:/root/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar, file:/root/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar, file:/root/.m2/repository/org/apache/avro/avro/1.7.6/avro-1.7.6.jar, file:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, file:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, file:/root/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar, file:/root/.m2/repository/org/apache/flink/flink-shaded-hadoop2/1.1-SNAPSHOT/flink-shaded-hadoop2-1.1-SNAPSHOT.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-common/2.3.0/hadoop-common-2.3.0.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-annotations/2.3.0/hadoop-annotations-2.3.0.jar, file:/usr/lib/jvm/java-8-openjdk-amd64/jre/../lib/tools.jar, file:/root/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar, file:/root/.m2/repository/org/apache/commons/commons-math3/3.5/commons-math3-3.5.jar, file:/root/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar, file:/root/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar, file:/root/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar, file:/root/.m2/repository/commons-net/commons-net/3.1/commons-net-3.1.jar, file:/root/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, file:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, file:/root/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar, file:/root/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar, file:/root/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar, file:/root/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar, file:/root/.m2/repository/net/java/dev/jets3t/jets3t/0.9.0/jets3t-0.9.0.jar, file:/root/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar, file:/root/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar, file:/root/.m2/repository/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar, file:/root/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, file:/root/.m2/repository/commons-configuration/commons-configuration/1.7/commons-configuration-1.7.jar, file:/root/.m2/repository/commons-digester/commons-digester/1.8.1/commons-digester-1.8.1.jar, file:/root/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-auth/2.3.0/hadoop-auth-2.3.0.jar, file:/root/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar, file:/root/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar, file:/root/.m2/repository/io/netty/netty/3.7.0.Final/netty-3.7.0.Final.jar, file:/root/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar, file:/root/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar, file:/root/.m2/repository/commons-beanutils/commons-beanutils-bean-collections/1.8.3/commons-beanutils-bean-collections-1.8.3.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.3.0/hadoop-hdfs-2.3.0.jar, file:/root/.m2/repository/commons-daemon/commons-daemon/1.0.13/commons-daemon-1.0.13.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.3.0/hadoop-mapreduce-client-core-2.3.0.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.3.0/hadoop-yarn-client-2.3.0.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.3.0/hadoop-yarn-api-2.3.0.jar, file:/root/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.3.0/hadoop-yarn-common-2.3.0.jar, file:/root/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar, file:/root/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar, file:/root/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar, file:/root/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar, file:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar, file:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, file:/root/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar, file:/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/root/.m2/repository/joda-time/joda-time/2.5/joda-time-2.5.jar, file:/root/.m2/repository/org/joda/joda-convert/1.7/joda-convert-1.7.jar, file:/root/.m2/repository/org/apache/flink/force-shading/1.1-SNAPSHOT/force-shading-1.1-SNAPSHOT.jar, file:/root/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar, file:/root/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar, file:/root/.m2/repository/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar, file:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar, file:/root/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, file:/root/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/root/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/root/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar, file:/root/.m2/repository/org/powermock/powermock-module-junit4/1.5.5/powermock-module-junit4-1.5.5.jar, file:/root/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.5/powermock-module-junit4-common-1.5.5.jar, file:/root/.m2/repository/org/powermock/powermock-core/1.5.5/powermock-core-1.5.5.jar, file:/root/.m2/repository/org/javassist/javassist/3.18.2-GA/javassist-3.18.2-GA.jar, file:/root/.m2/repository/org/powermock/powermock-reflect/1.5.5/powermock-reflect-1.5.5.jar, file:/root/.m2/repository/org/powermock/powermock-api-mockito/1.5.5/powermock-api-mockito-1.5.5.jar, file:/root/.m2/repository/org/powermock/powermock-api-support/1.5.5/powermock-api-support-1.5.5.jar, file:/root/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar]
09:02:57.889 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: CONDITIONAL
09:02:57.890 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.flink.api.common.state.ValueStateDescriptorTest]
09:02:57.896 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=CONDITIONAL, synthesis=DYNAMOTH, oracle=ANGELIC, solver=Z3, solverPath='/nopol/nopol/lib/z3/z3_for_linux', projectSources=[/workspaces/APIARTy/data/FLINK-3760/flink/flink-core/src/main/java, /workspaces/APIARTy/data/FLINK-3760/flink/flink-core/src/test/java], projectClasspath='[Ljava.net.URL;@3c5a99da', projectTests=[org.apache.flink.api.common.state.ValueStateDescriptorTest], complianceLevel=7, outputFolder=., json=false}
09:02:57.898 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 2
09:02:57.919 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 27 MB
09:02:57.920 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 910 MB
09:02:57.922 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 31 MB
09:02:57.924 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_232
09:02:57.930 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
09:02:57.931 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /root/.vscode-server/bin/26076a4de974ead31f97692a0d32f90d735645c0/bin:/apiarty/apiarty.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
09:03:17.613 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
09:03:17.616 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:291 which is executed by 1 tests
1597532865
09:03:18.643 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
09:03:18.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:154 which is executed by 2 tests
-11891339
09:03:19.647 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
09:03:19.648 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:459 which is executed by 1 tests
09:03:19.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:459
09:03:19.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
09:03:19.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:447 which is executed by 1 tests
09:03:19.665 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:447
09:03:19.671 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
09:03:19.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:446 which is executed by 1 tests
09:03:19.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:446
09:03:19.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
09:03:19.679 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:445 which is executed by 1 tests
09:03:19.681 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:445
09:03:19.684 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
09:03:19.685 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:444 which is executed by 1 tests
09:03:19.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:444
09:03:19.691 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
09:03:19.695 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:443 which is executed by 1 tests
09:03:19.705 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:443
09:03:19.706 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
09:03:19.709 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:440 which is executed by 1 tests
09:03:19.712 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:440
09:03:19.714 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
09:03:19.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:424 which is executed by 1 tests
09:03:19.717 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:424
09:03:19.718 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
09:03:19.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:423 which is executed by 1 tests
09:03:19.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:423
09:03:19.725 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
09:03:19.726 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:422 which is executed by 1 tests
09:03:19.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:422
09:03:19.729 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
09:03:19.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:421 which is executed by 1 tests
09:03:19.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:421
09:03:19.737 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
09:03:19.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:420 which is executed by 1 tests
09:03:19.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:420
09:03:19.741 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
09:03:19.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:419 which is executed by 1 tests
09:03:19.753 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:419
09:03:19.755 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
09:03:19.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:413 which is executed by 1 tests
09:03:19.757 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:413
09:03:19.758 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
09:03:19.761 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:410 which is executed by 1 tests
09:03:19.765 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:410
09:03:19.766 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
09:03:19.769 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:345 which is executed by 1 tests
09:03:19.773 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:345
09:03:19.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
09:03:19.796 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:334 which is executed by 1 tests
09:03:19.801 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:334
09:03:19.803 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
09:03:19.808 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:333 which is executed by 1 tests
09:03:19.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:333
09:03:19.812 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
09:03:19.815 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:332 which is executed by 1 tests
09:03:19.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:332
09:03:19.817 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
09:03:19.819 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:154 which is executed by 1 tests
09:03:19.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:154
09:03:19.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
09:03:19.822 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:143 which is executed by 1 tests
09:03:19.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:143
09:03:19.824 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
09:03:19.825 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:142 which is executed by 1 tests
09:03:19.826 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:142
09:03:19.827 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
09:03:19.827 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:140 which is executed by 1 tests
09:03:19.828 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:140
09:03:19.829 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
09:03:19.831 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:626 which is executed by 1 tests
-141459365
09:03:20.457 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
09:03:20.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:625 which is executed by 1 tests
-141459365
09:03:20.955 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
09:03:20.955 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:622 which is executed by 1 tests
-141459365
09:03:21.413 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:21,846 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:21,925 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:21,932 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:21,954 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:21,959 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:21,989 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:21,993 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:24,477 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:24,593 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:24,649 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:24,672 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:24.682 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
09:03:24.683 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:63 which is executed by 2 tests
09:03:24.685 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:63
09:03:24.686 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
09:03:24.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:60 which is executed by 2 tests
09:03:24.689 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:60
09:03:24.690 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
09:03:24.691 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:59 which is executed by 2 tests
09:03:24.695 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:59
09:03:24.696 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
09:03:24.697 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:58 which is executed by 2 tests
09:03:24.704 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:58
09:03:24.705 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
09:03:24.707 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:53 which is executed by 2 tests
09:03:24.709 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:53
09:03:24.710 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
09:03:24.711 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:47 which is executed by 2 tests
09:03:24.714 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:47
09:03:24.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
09:03:24.718 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:45 which is executed by 2 tests
09:03:24.720 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:45
09:03:24.721 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
09:03:24.722 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:44 which is executed by 2 tests
09:03:24.722 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:44
09:03:24.723 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
09:03:24.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:42 which is executed by 2 tests
09:03:24.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:42
09:03:24.729 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
09:03:24.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:41 which is executed by 2 tests
09:03:24.731 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:41
09:03:24.732 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
09:03:24.732 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:39 which is executed by 2 tests
09:03:24.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:39
09:03:24.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
09:03:24.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:38 which is executed by 2 tests
09:03:24.735 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:38
09:03:24.736 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
09:03:24.737 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:37 which is executed by 2 tests
09:03:24.738 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:37
09:03:24.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
09:03:24.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:290 which is executed by 2 tests
1597532865
09:03:25.350 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:25,666 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:25,735 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:25,740 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:25,765 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:25,769 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:25,799 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:25,802 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:26,827 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:26,903 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:26,923 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:26,963 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:26,972 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:26.980 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
09:03:26.982 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:288 which is executed by 2 tests
1597532865
09:03:27.497 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
09:03:27.501 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:287 which is executed by 2 tests
1597532865
09:03:28.036 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
09:03:28.037 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:286 which is executed by 2 tests
1597532865
09:03:28.546 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
09:03:28.547 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:285 which is executed by 2 tests
1597532865
09:03:29.057 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:29,311 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:29,369 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:29,373 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:29,394 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:29,398 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:29,424 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:29,429 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:30,362 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:30,432 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:30,458 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:30,464 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:30.472 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
09:03:30.475 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:284 which is executed by 2 tests
1597532865
09:03:30.913 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
09:03:30.915 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:281 which is executed by 2 tests
1597532865
09:03:31.416 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
09:03:31.417 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:277 which is executed by 2 tests
1597532865
09:03:31.852 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
09:03:31.855 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:275 which is executed by 2 tests
1597532865
09:03:32.336 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
09:03:32.343 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:274 which is executed by 2 tests
1597532865
09:03:32.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
09:03:32.788 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:272 which is executed by 2 tests
1597532865
09:03:33.271 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
09:03:33.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:268 which is executed by 2 tests
1597532865
09:03:33.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
09:03:33.721 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:267 which is executed by 2 tests
1597532865
09:03:34.194 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
09:03:34.198 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:266 which is executed by 2 tests
1597532865
09:03:34.663 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
09:03:34.664 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:264 which is executed by 2 tests
1597532865
09:03:35.152 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
09:03:35.153 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:263 which is executed by 2 tests
1597532865
09:03:35.615 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
09:03:35.616 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:261 which is executed by 2 tests
1597532865
09:03:36.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
09:03:36.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:260 which is executed by 2 tests
1597532865
09:03:36.578 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
09:03:36.580 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:257 which is executed by 2 tests
1597532865
09:03:37.018 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
09:03:37.023 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:252 which is executed by 2 tests
1597532865
09:03:37.502 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:37,793 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:37,855 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:37,862 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:37,886 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:37,891 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:37,927 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:37,929 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:38,764 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:38,841 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:38,862 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:38.876 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
09:03:38.880 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:249 which is executed by 2 tests
1597532865
09:03:39.322 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
09:03:39.327 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:246 which is executed by 2 tests
1597532865
09:03:39.800 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
09:03:39.808 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:206 which is executed by 2 tests
1597532865
09:03:40.310 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
09:03:40.314 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:198 which is executed by 2 tests
1597532865
09:03:40.792 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:41,089 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:41,154 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:41,159 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:41,178 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:41,183 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:41,214 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:41,219 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:42,122 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:42,205 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:42,226 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:42.234 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
09:03:42.236 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:150 which is executed by 2 tests
1597532865
09:03:42.706 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
09:03:42.710 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:149 which is executed by 2 tests
1597532865
09:03:43.143 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:43,646 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:43,709 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:43,713 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:43,732 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:43,737 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:43,765 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:43,768 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:44,671 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:44,741 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:44)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:44,762 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:44.777 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
09:03:44.782 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:134 which is executed by 2 tests
1597532865
09:03:45.243 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
09:03:45.250 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:133 which is executed by 2 tests
1597532865
09:03:45.689 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:45,946 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,010 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,016 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,033 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:46,039 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,069 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,075 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,871 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:50)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:46,949 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:46.971 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
09:03:46.972 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:132 which is executed by 2 tests
1597532865
09:03:47.428 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:47,690 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:47,755 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:47,760 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:47,777 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:47,782 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:47,809 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:47,811 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:48,593 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:50)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:48,670 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:48.685 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
09:03:48.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.state.StateDescriptor:125 which is executed by 2 tests
1597532865
09:03:49.100 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
09:03:49.107 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MessageConverter:23 which is executed by 2 tests
09:03:49.109 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MessageConverter:23
09:03:49.116 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
09:03:49.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MessageConverter:26 which is executed by 2 tests
09:03:49.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MessageConverter:26
09:03:49.123 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
09:03:49.124 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:161 which is executed by 2 tests
09:03:49.125 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:161
09:03:49.126 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
09:03:49.132 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:159 which is executed by 2 tests
09:03:49.135 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:159
09:03:49.135 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
09:03:49.137 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:158 which is executed by 2 tests
09:03:49.138 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:158
09:03:49.146 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
09:03:49.148 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:157 which is executed by 2 tests
09:03:49.149 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:157
09:03:49.151 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
09:03:49.152 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:156 which is executed by 2 tests
09:03:49.154 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:156
09:03:49.155 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
09:03:49.161 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:86 which is executed by 2 tests
09:03:49.162 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:86
09:03:49.162 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
09:03:49.165 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:84 which is executed by 2 tests
09:03:49.168 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:84
09:03:49.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
09:03:49.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:83 which is executed by 2 tests
09:03:49.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:83
09:03:49.172 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
09:03:49.173 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:80 which is executed by 2 tests
09:03:49.174 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:80
09:03:49.176 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
09:03:49.177 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:79 which is executed by 2 tests
09:03:49.178 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:79
09:03:49.178 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
09:03:49.179 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:74 which is executed by 2 tests
09:03:49.179 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:74
09:03:49.180 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
09:03:49.181 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:70 which is executed by 2 tests
09:03:49.182 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:70
09:03:49.184 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
09:03:49.185 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:66 which is executed by 2 tests
09:03:49.185 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:66
09:03:49.186 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
09:03:49.187 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:64 which is executed by 2 tests
09:03:49.188 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:64
09:03:49.190 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
09:03:49.191 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:63 which is executed by 2 tests
09:03:49.192 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:63
09:03:49.194 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
09:03:49.196 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:62 which is executed by 2 tests
09:03:49.198 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:62
09:03:49.199 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
09:03:49.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:61 which is executed by 2 tests
09:03:49.205 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:61
09:03:49.207 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
09:03:49.217 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:60 which is executed by 2 tests
09:03:49.220 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:60
09:03:49.221 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
09:03:49.222 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:52 which is executed by 2 tests
09:03:49.222 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:52
09:03:49.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
09:03:49.224 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:51 which is executed by 2 tests
09:03:49.224 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:51
09:03:49.225 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
09:03:49.226 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:50 which is executed by 2 tests
09:03:49.227 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:50
09:03:49.228 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
09:03:49.230 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:45 which is executed by 2 tests
09:03:49.231 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:45
09:03:49.232 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
09:03:49.233 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:41 which is executed by 2 tests
09:03:49.234 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:41
09:03:49.235 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
09:03:49.236 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:40 which is executed by 2 tests
09:03:49.237 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:40
09:03:49.238 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
09:03:49.239 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:39 which is executed by 2 tests
09:03:49.240 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:39
09:03:49.242 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
09:03:49.243 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:36 which is executed by 2 tests
09:03:49.244 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:36
09:03:49.245 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
09:03:49.246 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:35 which is executed by 2 tests
09:03:49.247 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultClassResolver:35
09:03:49.248 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
09:03:49.249 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.PatternLayout:59 which is executed by 2 tests
09:03:49.251 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.PatternLayout:59
09:03:49.251 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
09:03:49.252 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.PatternLayout:168 which is executed by 2 tests
09:03:49.254 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.PatternLayout:168
09:03:49.256 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
09:03:49.257 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.PatternLayout:165 which is executed by 2 tests
09:03:49.260 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.PatternLayout:165
09:03:49.261 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
09:03:49.264 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:152 which is executed by 2 tests
-11891339
09:03:49.761 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
09:03:49.762 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:150 which is executed by 2 tests
-11891339
09:03:50.191 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
09:03:50.192 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:148 which is executed by 2 tests
-11891339
09:03:50.620 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
09:03:50.622 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:146 which is executed by 2 tests
-11891339
09:03:51.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
09:03:51.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:145 which is executed by 2 tests
-11891339
09:03:51.427 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
09:03:51.428 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:144 which is executed by 2 tests
-11891339
09:03:51.825 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
09:03:51.826 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:143 which is executed by 2 tests
-11891339
09:03:52.279 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
09:03:52.281 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:142 which is executed by 2 tests
-11891339
09:03:52.682 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
09:03:52.683 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.core.testutils.CommonTestUtils:138 which is executed by 2 tests
-11891339
09:03:53.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:03:53,318 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:53,377 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:53,385 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:53,404 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:03:53,410 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:53,438 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:53,442 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:54,213 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:54,294 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:68)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:03:54,321 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:03:54.329 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
09:03:54.330 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:64 which is executed by 2 tests
-408882096
09:03:54.806 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
09:03:54.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:372 which is executed by 2 tests
-408882096
09:03:55.252 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
09:03:55.253 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:370 which is executed by 2 tests
-408882096
09:03:55.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
09:03:55.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:369 which is executed by 2 tests
-408882096
09:03:56.260 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
09:03:56.262 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:367 which is executed by 2 tests
-408882096
09:03:56.749 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
09:03:56.750 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:363 which is executed by 2 tests
-408882096
09:03:57.231 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
09:03:57.232 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:353 which is executed by 2 tests
-408882096
09:03:57.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
09:03:57.741 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:348 which is executed by 2 tests
-408882096
09:03:58.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
09:03:58.224 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:344 which is executed by 2 tests
-408882096
09:03:58.675 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
09:03:58.677 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:339 which is executed by 2 tests
-408882096
09:03:59.160 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
09:03:59.161 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:335 which is executed by 2 tests
-408882096
09:03:59.665 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
09:03:59.666 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:331 which is executed by 2 tests
-408882096
09:04:00.109 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
09:04:00.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:328 which is executed by 2 tests
-408882096
09:04:00.562 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
09:04:00.563 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:324 which is executed by 2 tests
-408882096
09:04:01.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
09:04:01.010 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:323 which is executed by 2 tests
-408882096
09:04:01.457 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:04:01,739 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:01,802 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:01,807 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:01,826 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:04:01,831 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:01,861 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:01,864 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:02,954 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:189)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:03,028 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:189)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:108)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:04:03.042 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
09:04:03.044 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:318 which is executed by 2 tests
-408882096
09:04:03.571 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
09:04:03.573 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:316 which is executed by 2 tests
-408882096
09:04:04.148 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
09:04:04.152 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:315 which is executed by 2 tests
-408882096
09:04:04.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
09:04:04.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:313 which is executed by 2 tests
-408882096
09:04:05.158 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
09:04:05.164 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:312 which is executed by 2 tests
-408882096
09:04:05.635 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
09:04:05.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:310 which is executed by 2 tests
-408882096
09:04:06.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
09:04:06.107 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:307 which is executed by 2 tests
-408882096
09:04:06.584 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
09:04:06.588 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:300 which is executed by 2 tests
-408882096
09:04:07.142 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
09:04:07.146 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:285 which is executed by 2 tests
-408882096
09:04:07.709 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
09:04:07.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:277 which is executed by 2 tests
-408882096
09:04:08.166 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
09:04:08.174 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:276 which is executed by 2 tests
-408882096
09:04:08.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
09:04:08.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:275 which is executed by 2 tests
-408882096
09:04:09.135 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
09:04:09.139 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:273 which is executed by 2 tests
-408882096
09:04:09.591 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
09:04:09.594 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:270 which is executed by 2 tests
-408882096
09:04:10.051 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
09:04:10.058 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:269 which is executed by 2 tests
-408882096
09:04:10.523 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:04:10,810 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:10,870 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:10,878 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:10,895 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:04:10,899 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:10,930 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:10,933 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:11,947 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:12,028 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:12,050 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:108)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:04:12.064 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
09:04:12.066 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:215 which is executed by 2 tests
-408882096
09:04:12.522 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
09:04:12.526 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:214 which is executed by 2 tests
-408882096
09:04:13.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
09:04:13.028 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:200 which is executed by 2 tests
-408882096
09:04:13.479 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
09:04:13.486 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:199 which is executed by 2 tests
-408882096
09:04:13.979 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
09:04:13.985 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:193 which is executed by 2 tests
-408882096
09:04:14.456 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:04:14,723 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:14,786 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:14,793 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:14,813 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:04:14,817 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:14,849 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:14,855 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:15,961 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:16,040 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:108)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:16,063 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:16,067 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:108)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:04:16.081 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
09:04:16.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:188 which is executed by 2 tests
-408882096
09:04:16.533 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
09:04:16.538 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:187 which is executed by 2 tests
-408882096
09:04:16.994 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
09:04:16.998 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:186 which is executed by 2 tests
-408882096
09:04:17.481 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
09:04:17.486 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:185 which is executed by 2 tests
-408882096
09:04:17.987 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:04:18,266 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:18,331 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:18,337 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:18,357 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:04:18,362 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:18,402 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:18,408 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:19,550 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:19,629 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:108)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:19,642 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:82)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:19,647 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:108)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:04:19.668 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
09:04:19.669 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:184 which is executed by 2 tests
-408882096
09:04:20.202 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
09:04:20.206 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:154 which is executed by 2 tests
-408882096
09:04:20.763 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
09:04:20.765 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:152 which is executed by 2 tests
-408882096
09:04:21.315 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
09:04:21.319 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:149 which is executed by 2 tests
-408882096
09:04:21.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:04:22,166 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:22,232 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:22,239 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:22,258 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:04:22,263 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:22,297 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:22,301 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:23,427 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:88)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:23,512 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:195)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:211)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:114)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:04:23.533 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
09:04:23.535 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer:129 which is executed by 2 tests
-408882096
09:04:24.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
09:04:24.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:318 which is executed by 2 tests
09:04:24.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:318
09:04:24.091 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
09:04:24.092 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:316 which is executed by 2 tests
09:04:24.094 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:316
09:04:24.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
09:04:24.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:315 which is executed by 2 tests
09:04:24.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:315
09:04:24.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
09:04:24.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:310 which is executed by 2 tests
09:04:24.105 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:310
09:04:24.105 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
09:04:24.107 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:309 which is executed by 2 tests
09:04:24.108 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:309
09:04:24.109 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
09:04:24.110 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:308 which is executed by 2 tests
09:04:24.112 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:308
09:04:24.114 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
09:04:24.115 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:307 which is executed by 2 tests
09:04:24.117 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:307
09:04:24.118 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
09:04:24.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:293 which is executed by 2 tests
09:04:24.121 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:293
09:04:24.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
09:04:24.123 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:292 which is executed by 2 tests
09:04:24.124 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:292
09:04:24.126 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
09:04:24.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:283 which is executed by 2 tests
09:04:24.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:283
09:04:24.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
09:04:24.132 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:282 which is executed by 2 tests
09:04:24.133 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:282
09:04:24.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
09:04:24.136 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:278 which is executed by 2 tests
09:04:24.139 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:278
09:04:24.140 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
09:04:24.142 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:232 which is executed by 2 tests
09:04:24.144 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:232
09:04:24.145 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
09:04:24.146 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:209 which is executed by 2 tests
09:04:24.148 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:209
09:04:24.149 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
09:04:24.150 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:208 which is executed by 2 tests
09:04:24.154 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:208
09:04:24.155 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
09:04:24.157 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:206 which is executed by 2 tests
09:04:24.163 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:206
09:04:24.166 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
09:04:24.167 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:205 which is executed by 2 tests
09:04:24.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:205
09:04:24.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
09:04:24.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:182 which is executed by 2 tests
09:04:24.172 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:182
09:04:24.173 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
09:04:24.175 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:163 which is executed by 2 tests
09:04:24.176 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:163
09:04:24.177 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
09:04:24.179 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:161 which is executed by 2 tests
09:04:24.181 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:161
09:04:24.182 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
09:04:24.187 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:160 which is executed by 2 tests
09:04:24.196 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:160
09:04:24.198 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
09:04:24.199 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:152 which is executed by 2 tests
09:04:24.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:152
09:04:24.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
09:04:24.204 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:148 which is executed by 2 tests
09:04:24.208 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:148
09:04:24.210 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
09:04:24.212 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1038 which is executed by 2 tests
09:04:24.214 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1038
09:04:24.215 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
09:04:24.216 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1037 which is executed by 2 tests
09:04:24.217 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1037
09:04:24.217 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
09:04:24.218 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1009 which is executed by 2 tests
09:04:24.219 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1009
09:04:24.220 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
09:04:24.222 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1008 which is executed by 2 tests
09:04:24.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1008
09:04:24.224 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
09:04:24.225 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1007 which is executed by 2 tests
09:04:24.226 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1007
09:04:24.229 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
09:04:24.230 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1006 which is executed by 2 tests
09:04:24.231 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1006
09:04:24.233 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
09:04:24.234 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:1005 which is executed by 2 tests
09:04:24.237 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:1005
09:04:24.243 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
09:04:24.248 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:997 which is executed by 2 tests
09:04:24.250 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:997
09:04:24.252 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
09:04:24.253 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:994 which is executed by 2 tests
09:04:24.254 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:994
09:04:24.254 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
09:04:24.255 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:993 which is executed by 2 tests
09:04:24.256 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:993
09:04:24.257 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
09:04:24.258 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:992 which is executed by 2 tests
09:04:24.259 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:992
09:04:24.260 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
09:04:24.261 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:977 which is executed by 2 tests
09:04:24.262 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:977
09:04:24.263 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
09:04:24.266 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:976 which is executed by 2 tests
09:04:24.268 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:976
09:04:24.270 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
09:04:24.271 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:975 which is executed by 2 tests
09:04:24.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:975
09:04:24.273 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
09:04:24.274 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:962 which is executed by 2 tests
09:04:24.276 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:962
09:04:24.276 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
09:04:24.277 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:961 which is executed by 2 tests
09:04:24.278 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:961
09:04:24.280 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
09:04:24.281 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:960 which is executed by 2 tests
09:04:24.282 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:960
09:04:24.283 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
09:04:24.284 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:954 which is executed by 2 tests
09:04:24.285 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:954
09:04:24.286 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
09:04:24.288 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:867 which is executed by 2 tests
09:04:24.289 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:867
09:04:24.290 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
09:04:24.291 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:865 which is executed by 2 tests
09:04:24.294 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:865
09:04:24.298 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
09:04:24.303 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:864 which is executed by 2 tests
09:04:24.306 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:864
09:04:24.309 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
09:04:24.310 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:863 which is executed by 2 tests
09:04:24.311 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:863
09:04:24.312 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
09:04:24.313 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:862 which is executed by 2 tests
09:04:24.313 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:862
09:04:24.314 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
09:04:24.315 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:859 which is executed by 2 tests
09:04:24.318 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:859
09:04:24.319 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
09:04:24.320 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:855 which is executed by 2 tests
09:04:24.323 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:855
09:04:24.324 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
09:04:24.325 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:854 which is executed by 2 tests
09:04:24.327 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:854
09:04:24.328 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
09:04:24.330 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:853 which is executed by 2 tests
09:04:24.330 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:853
09:04:24.334 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
09:04:24.335 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:851 which is executed by 2 tests
09:04:24.337 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:851
09:04:24.339 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
09:04:24.340 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:850 which is executed by 2 tests
09:04:24.342 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:850
09:04:24.344 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
09:04:24.345 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:849 which is executed by 2 tests
09:04:24.352 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:849
09:04:24.354 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
09:04:24.355 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:844 which is executed by 2 tests
09:04:24.356 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:844
09:04:24.358 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
09:04:24.362 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:843 which is executed by 2 tests
09:04:24.365 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:843
09:04:24.367 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
09:04:24.368 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:841 which is executed by 2 tests
09:04:24.370 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:841
09:04:24.371 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
09:04:24.372 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:840 which is executed by 2 tests
09:04:24.380 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:840
09:04:24.381 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
09:04:24.383 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:835 which is executed by 2 tests
09:04:24.384 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:835
09:04:24.385 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
09:04:24.386 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:834 which is executed by 2 tests
09:04:24.388 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:834
09:04:24.389 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
09:04:24.390 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:833 which is executed by 2 tests
09:04:24.391 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:833
09:04:24.392 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
09:04:24.393 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:832 which is executed by 2 tests
09:04:24.396 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:832
09:04:24.397 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
09:04:24.398 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:825 which is executed by 2 tests
09:04:24.399 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:825
09:04:24.399 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
09:04:24.400 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:819 which is executed by 2 tests
09:04:24.402 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:819
09:04:24.403 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
09:04:24.404 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:818 which is executed by 2 tests
09:04:24.405 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:818
09:04:24.406 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
09:04:24.407 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:817 which is executed by 2 tests
09:04:24.409 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:817
09:04:24.410 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
09:04:24.412 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:816 which is executed by 2 tests
09:04:24.413 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:816
09:04:24.414 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
09:04:24.415 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:815 which is executed by 2 tests
09:04:24.416 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:815
09:04:24.417 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
09:04:24.418 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:603 which is executed by 2 tests
09:04:24.420 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:603
09:04:24.421 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
09:04:24.423 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:601 which is executed by 2 tests
09:04:24.424 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:601
09:04:24.427 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
09:04:24.429 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:599 which is executed by 2 tests
09:04:24.430 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:599
09:04:24.431 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
09:04:24.433 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:594 which is executed by 2 tests
09:04:24.434 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:594
09:04:24.435 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
09:04:24.436 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:589 which is executed by 2 tests
09:04:24.437 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:589
09:04:24.438 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
09:04:24.439 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:587 which is executed by 2 tests
09:04:24.440 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:587
09:04:24.441 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
09:04:24.442 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:586 which is executed by 2 tests
09:04:24.445 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:586
09:04:24.446 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
09:04:24.447 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:490 which is executed by 2 tests
09:04:24.450 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:490
09:04:24.451 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
09:04:24.453 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:488 which is executed by 2 tests
09:04:24.455 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:488
09:04:24.456 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
09:04:24.458 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:486 which is executed by 2 tests
09:04:24.460 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:486
09:04:24.461 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
09:04:24.462 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:476 which is executed by 2 tests
09:04:24.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:476
09:04:24.465 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
09:04:24.466 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:464 which is executed by 2 tests
09:04:24.468 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:464
09:04:24.470 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
09:04:24.472 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:446 which is executed by 2 tests
09:04:24.473 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:446
09:04:24.474 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
09:04:24.476 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:445 which is executed by 2 tests
09:04:24.478 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:445
09:04:24.481 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
09:04:24.482 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:443 which is executed by 2 tests
09:04:24.484 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:443
09:04:24.486 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
09:04:24.488 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:433 which is executed by 2 tests
09:04:24.490 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:433
09:04:24.491 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
09:04:24.493 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:432 which is executed by 2 tests
09:04:24.494 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:432
09:04:24.495 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
09:04:24.497 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:431 which is executed by 2 tests
09:04:24.500 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:431
09:04:24.501 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
09:04:24.502 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:393 which is executed by 2 tests
09:04:24.505 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:393
09:04:24.506 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
09:04:24.507 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:389 which is executed by 2 tests
09:04:24.508 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:389
09:04:24.509 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
09:04:24.510 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:388 which is executed by 2 tests
09:04:24.510 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:388
09:04:24.511 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
09:04:24.512 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:364 which is executed by 2 tests
09:04:24.513 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:364
09:04:24.514 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
09:04:24.515 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:363 which is executed by 2 tests
09:04:24.516 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:363
09:04:24.517 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
09:04:24.518 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:324 which is executed by 2 tests
09:04:24.518 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:324
09:04:24.519 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
09:04:24.520 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:323 which is executed by 2 tests
09:04:24.521 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:323
09:04:24.521 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
09:04:24.522 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:322 which is executed by 2 tests
09:04:24.523 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:322
09:04:24.524 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
09:04:24.524 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:321 which is executed by 2 tests
09:04:24.525 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:321
09:04:24.526 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
09:04:24.530 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:320 which is executed by 2 tests
09:04:24.532 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:320
09:04:24.533 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
09:04:24.535 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:234 which is executed by 2 tests
09:04:24.536 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:234
09:04:24.538 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
09:04:24.539 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:233 which is executed by 2 tests
09:04:24.541 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:233
09:04:24.543 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
09:04:24.545 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:232 which is executed by 2 tests
09:04:24.546 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:232
09:04:24.547 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
09:04:24.549 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:231 which is executed by 2 tests
09:04:24.550 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:231
09:04:24.551 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
09:04:24.553 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo:230 which is executed by 2 tests
09:04:24.554 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo:230
09:04:24.555 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
09:04:24.556 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:184 which is executed by 2 tests
09:04:24.556 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:184
09:04:24.557 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
09:04:24.564 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:183 which is executed by 2 tests
09:04:24.565 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:183
09:04:24.566 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
09:04:24.567 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:173 which is executed by 2 tests
09:04:24.569 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:173
09:04:24.571 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
09:04:24.572 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:172 which is executed by 2 tests
09:04:24.573 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:172
09:04:24.574 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
09:04:24.575 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:169 which is executed by 2 tests
09:04:24.576 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:169
09:04:24.577 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
09:04:24.578 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:168 which is executed by 2 tests
09:04:24.579 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:168
09:04:24.580 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
09:04:24.581 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:122 which is executed by 2 tests
09:04:24.582 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:122
09:04:24.584 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
09:04:24.586 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:118 which is executed by 2 tests
09:04:24.587 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:118
09:04:24.588 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
09:04:24.589 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:115 which is executed by 2 tests
09:04:24.590 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:115
09:04:24.591 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
09:04:24.591 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:113 which is executed by 2 tests
09:04:24.592 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:113
09:04:24.593 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
09:04:24.594 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:112 which is executed by 2 tests
09:04:24.594 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:112
09:04:24.595 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
09:04:24.596 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:111 which is executed by 2 tests
09:04:24.598 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:111
09:04:24.599 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
09:04:24.601 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:110 which is executed by 2 tests
09:04:24.602 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:110
09:04:24.603 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
09:04:24.603 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:109 which is executed by 2 tests
09:04:24.604 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:109
09:04:24.605 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
09:04:24.606 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:52 which is executed by 2 tests
09:04:24.607 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:52
09:04:24.608 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
09:04:24.609 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:50 which is executed by 2 tests
09:04:24.610 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:50
09:04:24.611 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
09:04:24.612 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:49 which is executed by 2 tests
09:04:24.614 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:49
09:04:24.615 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
09:04:24.616 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:48 which is executed by 2 tests
09:04:24.616 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:48
09:04:24.617 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
09:04:24.618 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:45 which is executed by 2 tests
09:04:24.619 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxyUtil:45
09:04:24.623 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
09:04:24.625 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:23 which is executed by 2 tests
09:04:24.625 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:23
09:04:24.626 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
09:04:24.627 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:26 which is executed by 2 tests
09:04:24.636 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:26
09:04:24.637 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
09:04:24.637 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:57 which is executed by 2 tests
09:04:24.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:57
09:04:24.640 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
09:04:24.640 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:51 which is executed by 2 tests
09:04:24.641 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:51
09:04:24.643 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
09:04:24.644 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:35 which is executed by 2 tests
09:04:24.644 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:35
09:04:24.645 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
09:04:24.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:176 which is executed by 2 tests
09:04:24.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:176
09:04:24.647 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
09:04:24.648 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:172 which is executed by 2 tests
09:04:24.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:172
09:04:24.650 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
09:04:24.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:169 which is executed by 2 tests
09:04:24.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:169
09:04:24.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
09:04:24.655 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:168 which is executed by 2 tests
09:04:24.656 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:168
09:04:24.657 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
09:04:24.657 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:167 which is executed by 2 tests
09:04:24.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:167
09:04:24.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
09:04:24.659 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:166 which is executed by 2 tests
09:04:24.660 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:166
09:04:24.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
09:04:24.662 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:165 which is executed by 2 tests
09:04:24.663 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:165
09:04:24.664 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
09:04:24.665 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:164 which is executed by 2 tests
09:04:24.666 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:164
09:04:24.667 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
09:04:24.668 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:160 which is executed by 2 tests
09:04:24.669 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:160
09:04:24.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
09:04:24.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:159 which is executed by 2 tests
09:04:24.671 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:159
09:04:24.671 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
09:04:24.672 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:156 which is executed by 2 tests
09:04:24.673 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:156
09:04:24.673 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
09:04:24.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:154 which is executed by 2 tests
09:04:24.675 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:154
09:04:24.676 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
09:04:24.677 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:153 which is executed by 2 tests
09:04:24.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:153
09:04:24.679 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
09:04:24.682 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:152 which is executed by 2 tests
09:04:24.683 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:152
09:04:24.684 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
09:04:24.685 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:151 which is executed by 2 tests
09:04:24.686 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:151
09:04:24.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
09:04:24.688 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:147 which is executed by 2 tests
09:04:24.689 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:147
09:04:24.691 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
09:04:24.692 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:145 which is executed by 2 tests
09:04:24.694 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:145
09:04:24.695 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
09:04:24.696 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:144 which is executed by 2 tests
09:04:24.697 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:144
09:04:24.698 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
09:04:24.700 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:143 which is executed by 2 tests
09:04:24.701 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:143
09:04:24.703 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
09:04:24.704 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:142 which is executed by 2 tests
09:04:24.705 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:142
09:04:24.706 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
09:04:24.708 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:141 which is executed by 2 tests
09:04:24.709 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:141
09:04:24.710 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
09:04:24.711 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:137 which is executed by 2 tests
09:04:24.712 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:137
09:04:24.714 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
09:04:24.715 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:106 which is executed by 2 tests
09:04:24.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:106
09:04:24.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
09:04:24.717 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:101 which is executed by 2 tests
09:04:24.717 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:101
09:04:24.718 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
09:04:24.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:100 which is executed by 2 tests
09:04:24.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:100
09:04:24.720 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
09:04:24.722 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.LayoutBase:44 which is executed by 2 tests
09:04:24.723 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.LayoutBase:44
09:04:24.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
09:04:24.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:115 which is executed by 2 tests
09:04:24.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:115
09:04:24.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
09:04:24.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:114 which is executed by 2 tests
09:04:24.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:114
09:04:24.731 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
09:04:24.732 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:113 which is executed by 2 tests
09:04:24.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:113
09:04:24.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
09:04:24.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:110 which is executed by 2 tests
09:04:24.735 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:110
09:04:24.735 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
09:04:24.736 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:109 which is executed by 2 tests
09:04:24.736 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:109
09:04:24.737 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
09:04:24.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:107 which is executed by 2 tests
09:04:24.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:107
09:04:24.741 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
09:04:24.742 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:105 which is executed by 2 tests
09:04:24.743 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:105
09:04:24.744 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
09:04:24.745 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:104 which is executed by 2 tests
09:04:24.747 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:104
09:04:24.748 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
09:04:24.749 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:101 which is executed by 2 tests
09:04:24.751 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:101
09:04:24.753 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
09:04:24.754 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:98 which is executed by 2 tests
09:04:24.755 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:98
09:04:24.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
09:04:24.758 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:96 which is executed by 2 tests
09:04:24.758 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:96
09:04:24.759 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
09:04:24.760 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:95 which is executed by 2 tests
09:04:24.760 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:95
09:04:24.761 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
09:04:24.761 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:94 which is executed by 2 tests
09:04:24.762 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:94
09:04:24.763 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
09:04:24.763 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:93 which is executed by 2 tests
09:04:24.764 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:93
09:04:24.765 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
09:04:24.766 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:87 which is executed by 2 tests
09:04:24.766 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:87
09:04:24.767 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
09:04:24.769 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:82 which is executed by 2 tests
09:04:24.770 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:82
09:04:24.771 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
09:04:24.772 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:77 which is executed by 2 tests
09:04:24.774 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:77
09:04:24.774 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
09:04:24.775 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:76 which is executed by 2 tests
09:04:24.778 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:76
09:04:24.779 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
09:04:24.780 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:75 which is executed by 2 tests
09:04:24.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:75
09:04:24.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
09:04:24.782 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:74 which is executed by 2 tests
09:04:24.783 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:74
09:04:24.784 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
09:04:24.784 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:73 which is executed by 2 tests
09:04:24.785 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:73
09:04:24.785 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
09:04:24.786 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:69 which is executed by 2 tests
09:04:24.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:69
09:04:24.788 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
09:04:24.788 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:68 which is executed by 2 tests
09:04:24.789 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:68
09:04:24.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
09:04:24.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:64 which is executed by 2 tests
09:04:24.791 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:64
09:04:24.792 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
09:04:24.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:58 which is executed by 2 tests
09:04:24.794 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:58
09:04:24.794 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
09:04:24.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:56 which is executed by 2 tests
09:04:24.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:56
09:04:24.796 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
09:04:24.797 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:55 which is executed by 2 tests
09:04:24.798 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:55
09:04:24.799 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
09:04:24.799 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:54 which is executed by 2 tests
09:04:24.800 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:54
09:04:24.801 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
09:04:24.802 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:52 which is executed by 2 tests
09:04:24.803 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:52
09:04:24.804 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
09:04:24.804 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:48 which is executed by 2 tests
09:04:24.805 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:48
09:04:24.805 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
09:04:24.806 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:43 which is executed by 2 tests
09:04:24.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:43
09:04:24.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
09:04:24.808 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:41 which is executed by 2 tests
09:04:24.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:41
09:04:24.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
09:04:24.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:38 which is executed by 2 tests
09:04:24.812 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:38
09:04:24.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
09:04:24.814 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:34 which is executed by 2 tests
09:04:24.815 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:34
09:04:24.815 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
09:04:24.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:33 which is executed by 2 tests
09:04:24.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:33
09:04:24.817 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
09:04:24.818 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:29 which is executed by 2 tests
09:04:24.818 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:29
09:04:24.819 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
09:04:24.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:28 which is executed by 2 tests
09:04:24.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.TargetLengthBasedClassNameAbbreviator:28
09:04:24.821 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
09:04:24.822 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy:1175 which is executed by 2 tests
09:04:24.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy:1175
09:04:24.824 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
09:04:24.825 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy:1174 which is executed by 2 tests
09:04:24.825 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy:1174
09:04:24.826 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
09:04:24.827 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:781 which is executed by 2 tests
09:04:24.828 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:781
09:04:24.828 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
09:04:24.829 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:713 which is executed by 2 tests
09:04:24.830 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:713
09:04:24.830 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
09:04:24.831 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:712 which is executed by 2 tests
09:04:24.832 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:712
09:04:24.833 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
09:04:24.833 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:442 which is executed by 2 tests
09:04:24.834 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:442
09:04:24.835 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
09:04:24.836 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:441 which is executed by 2 tests
09:04:24.836 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:441
09:04:24.837 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
09:04:24.838 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:440 which is executed by 2 tests
09:04:24.838 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:440
09:04:24.841 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
09:04:24.842 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:439 which is executed by 2 tests
09:04:24.842 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:439
09:04:24.843 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
09:04:24.844 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:396 which is executed by 2 tests
09:04:24.845 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:396
09:04:24.846 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
09:04:24.847 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:395 which is executed by 2 tests
09:04:24.847 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:395
09:04:24.848 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
09:04:24.849 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:388 which is executed by 2 tests
09:04:24.849 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:388
09:04:24.850 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
09:04:24.851 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:387 which is executed by 2 tests
09:04:24.852 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:387
09:04:24.853 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
09:04:24.854 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:383 which is executed by 2 tests
09:04:24.855 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:383
09:04:24.855 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
09:04:24.856 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:274 which is executed by 2 tests
09:04:24.857 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:274
09:04:24.857 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
09:04:24.858 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:272 which is executed by 2 tests
09:04:24.859 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:272
09:04:24.860 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
09:04:24.861 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:271 which is executed by 2 tests
09:04:24.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:271
09:04:24.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
09:04:24.863 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:268 which is executed by 2 tests
09:04:24.864 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:268
09:04:24.864 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
09:04:24.865 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:265 which is executed by 2 tests
09:04:24.866 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:265
09:04:24.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
09:04:24.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:260 which is executed by 2 tests
09:04:24.868 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:260
09:04:24.871 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
09:04:24.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:259 which is executed by 2 tests
09:04:24.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:259
09:04:24.874 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
09:04:24.875 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:258 which is executed by 2 tests
09:04:24.876 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:258
09:04:24.876 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
09:04:24.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:257 which is executed by 2 tests
09:04:24.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:257
09:04:24.878 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
09:04:24.880 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:123 which is executed by 2 tests
09:04:24.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:123
09:04:24.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
09:04:24.882 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer:166 which is executed by 3 tests
09:04:24.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer:166
09:04:24.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
09:04:24.884 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer:174 which is executed by 2 tests
09:04:24.885 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer:174
09:04:24.886 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
09:04:24.887 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer:173 which is executed by 2 tests
09:04:24.887 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer:173
09:04:24.888 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
09:04:24.858 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:27 which is executed by 2 tests
09:04:24.861 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:27
09:04:24.861 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
09:04:24.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:25 which is executed by 2 tests
09:04:24.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:25
09:04:24.863 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
09:04:24.864 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:24 which is executed by 2 tests
09:04:24.864 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter:24
09:04:24.865 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
09:04:24.865 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Registration:36 which is executed by 2 tests
09:04:24.866 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Registration:36
09:04:24.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
09:04:24.868 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Registration:32 which is executed by 2 tests
09:04:24.869 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Registration:32
09:04:24.869 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
09:04:24.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Registration:26 which is executed by 2 tests
09:04:24.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Registration:26
09:04:24.871 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
09:04:24.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:59 which is executed by 2 tests
09:04:24.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:59
09:04:24.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
09:04:24.876 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:57 which is executed by 2 tests
09:04:24.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:57
09:04:24.878 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
09:04:24.879 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:56 which is executed by 2 tests
09:04:24.880 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:56
09:04:24.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
09:04:24.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:52 which is executed by 2 tests
09:04:24.882 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:52
09:04:24.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
09:04:24.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:51 which is executed by 2 tests
09:04:24.884 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:51
09:04:24.885 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
09:04:24.885 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:50 which is executed by 2 tests
09:04:24.886 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:50
09:04:24.887 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
09:04:24.888 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:49 which is executed by 2 tests
09:04:24.888 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:49
09:04:24.889 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
09:04:24.891 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:48 which is executed by 2 tests
09:04:24.892 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:48
09:04:24.892 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
09:04:24.893 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:47 which is executed by 2 tests
09:04:24.894 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:47
09:04:24.895 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
09:04:24.896 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.STEUtil:43 which is executed by 2 tests
09:04:24.896 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.STEUtil:43
09:04:24.897 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
09:04:24.898 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Level:99 which is executed by 2 tests
09:04:24.898 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Level:99
09:04:24.899 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
09:04:24.900 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:51 which is executed by 2 tests
09:04:24.901 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:51
09:04:24.901 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
09:04:24.902 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:49 which is executed by 2 tests
09:04:24.903 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:49
09:04:24.903 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
09:04:24.904 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:48 which is executed by 2 tests
09:04:24.907 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:48
09:04:24.909 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
09:04:24.909 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:47 which is executed by 2 tests
09:04:24.910 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:47
09:04:24.911 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
09:04:24.911 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:46 which is executed by 2 tests
09:04:24.912 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:46
09:04:24.913 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
09:04:24.913 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:223 which is executed by 2 tests
09:04:24.914 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:223
09:04:24.915 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
09:04:24.916 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:222 which is executed by 2 tests
09:04:24.916 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:222
09:04:24.917 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
09:04:24.918 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:221 which is executed by 2 tests
09:04:24.920 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:221
09:04:24.921 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
09:04:24.921 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:202 which is executed by 2 tests
09:04:24.922 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:202
09:04:24.922 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
09:04:24.923 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:198 which is executed by 2 tests
09:04:24.924 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:198
09:04:24.925 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
09:04:24.926 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:194 which is executed by 2 tests
09:04:24.927 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:194
09:04:24.928 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
09:04:24.928 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:188 which is executed by 2 tests
09:04:24.929 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:188
09:04:24.930 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
09:04:24.930 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:187 which is executed by 2 tests
09:04:24.931 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:187
09:04:24.932 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
09:04:24.932 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:186 which is executed by 2 tests
09:04:24.933 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:186
09:04:24.934 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
09:04:24.934 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:185 which is executed by 2 tests
09:04:24.935 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:185
09:04:24.937 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
09:04:24.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:184 which is executed by 2 tests
09:04:24.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:184
09:04:24.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
09:04:24.941 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:183 which is executed by 2 tests
09:04:24.942 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:183
09:04:24.942 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
09:04:24.943 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:179 which is executed by 2 tests
09:04:24.944 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:179
09:04:24.944 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
09:04:24.945 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:171 which is executed by 2 tests
09:04:24.945 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:171
09:04:24.946 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
09:04:24.947 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:170 which is executed by 2 tests
09:04:24.947 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:170
09:04:24.948 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
09:04:24.948 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:169 which is executed by 2 tests
09:04:24.949 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:169
09:04:24.950 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
09:04:24.950 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:167 which is executed by 2 tests
09:04:24.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:167
09:04:24.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
09:04:24.952 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:166 which is executed by 2 tests
09:04:24.952 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:166
09:04:24.953 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
09:04:24.954 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:165 which is executed by 2 tests
09:04:24.954 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:165
09:04:24.955 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
09:04:24.956 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:163 which is executed by 2 tests
09:04:24.957 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:163
09:04:24.958 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
09:04:24.959 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:154 which is executed by 2 tests
09:04:24.960 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:154
09:04:24.960 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
09:04:24.961 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:152 which is executed by 2 tests
09:04:24.961 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:152
09:04:24.962 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
09:04:24.963 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:151 which is executed by 2 tests
09:04:24.964 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:151
09:04:24.964 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
09:04:24.965 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:150 which is executed by 2 tests
09:04:24.966 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:150
09:04:24.966 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
09:04:24.967 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:149 which is executed by 2 tests
09:04:24.968 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:149
09:04:24.971 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
09:04:24.972 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:148 which is executed by 2 tests
09:04:24.973 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:148
09:04:24.974 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
09:04:24.974 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:145 which is executed by 2 tests
09:04:24.975 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:145
09:04:24.976 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
09:04:24.976 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:141 which is executed by 2 tests
09:04:24.977 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:141
09:04:24.978 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
09:04:24.978 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:140 which is executed by 2 tests
09:04:24.979 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:140
09:04:24.980 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
09:04:24.981 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:139 which is executed by 2 tests
09:04:24.982 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:139
09:04:24.983 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
09:04:24.985 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:138 which is executed by 2 tests
09:04:24.985 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:138
09:04:24.986 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #424
09:04:24.986 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:137 which is executed by 2 tests
09:04:24.987 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:137
09:04:24.988 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #425
09:04:24.989 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:136 which is executed by 2 tests
09:04:24.990 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:136
09:04:24.991 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #426
09:04:24.992 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:134 which is executed by 2 tests
09:04:24.993 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:134
09:04:24.993 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #427
09:04:24.994 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:133 which is executed by 2 tests
09:04:24.995 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:133
09:04:24.996 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #428
09:04:24.997 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:132 which is executed by 2 tests
09:04:24.997 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:132
09:04:25.000 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #429
09:04:25.003 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:131 which is executed by 2 tests
09:04:25.004 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:131
09:04:25.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #430
09:04:25.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:126 which is executed by 2 tests
09:04:25.009 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:126
09:04:25.010 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #431
09:04:25.011 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:125 which is executed by 2 tests
09:04:25.013 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:125
09:04:25.013 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #432
09:04:25.014 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:124 which is executed by 2 tests
09:04:25.015 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:124
09:04:25.016 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #433
09:04:25.016 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:123 which is executed by 2 tests
09:04:25.017 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:123
09:04:25.018 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #434
09:04:25.019 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:122 which is executed by 2 tests
09:04:25.019 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:122
09:04:25.020 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #435
09:04:25.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:120 which is executed by 2 tests
09:04:25.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:120
09:04:25.022 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #436
09:04:25.023 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:119 which is executed by 2 tests
09:04:25.025 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:119
09:04:25.025 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #437
09:04:25.026 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:118 which is executed by 2 tests
09:04:25.027 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:118
09:04:25.031 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #438
09:04:25.031 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:117 which is executed by 2 tests
09:04:25.032 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:117
09:04:25.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #439
09:04:25.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:114 which is executed by 2 tests
09:04:25.034 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:114
09:04:25.035 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #440
09:04:25.035 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:112 which is executed by 2 tests
09:04:25.036 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:112
09:04:25.036 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #441
09:04:25.037 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:111 which is executed by 2 tests
09:04:25.038 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:111
09:04:25.039 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #442
09:04:25.040 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:110 which is executed by 2 tests
09:04:25.042 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:110
09:04:25.043 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #443
09:04:25.043 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:109 which is executed by 2 tests
09:04:25.044 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:109
09:04:25.045 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #444
09:04:25.045 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:108 which is executed by 2 tests
09:04:25.046 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:108
09:04:25.047 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #445
09:04:25.048 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:104 which is executed by 2 tests
09:04:25.049 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:104
09:04:25.049 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #446
09:04:25.050 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:103 which is executed by 2 tests
09:04:25.051 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:103
09:04:25.051 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #447
09:04:25.052 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:100 which is executed by 2 tests
09:04:25.054 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:100
09:04:25.055 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #448
09:04:25.055 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:99 which is executed by 2 tests
09:04:25.056 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:99
09:04:25.057 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #449
09:04:25.058 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:98 which is executed by 2 tests
09:04:25.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:98
09:04:25.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #450
09:04:25.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:97 which is executed by 2 tests
09:04:25.061 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:97
09:04:25.061 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #451
09:04:25.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:96 which is executed by 2 tests
09:04:25.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:96
09:04:25.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #452
09:04:25.064 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:95 which is executed by 2 tests
09:04:25.067 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:95
09:04:25.068 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #453
09:04:25.069 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:93 which is executed by 2 tests
09:04:25.070 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:93
09:04:25.070 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #454
09:04:25.071 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:92 which is executed by 2 tests
09:04:25.072 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:92
09:04:25.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #455
09:04:25.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:91 which is executed by 2 tests
09:04:25.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:91
09:04:25.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #456
09:04:25.075 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:89 which is executed by 2 tests
09:04:25.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:89
09:04:25.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #457
09:04:25.077 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:87 which is executed by 2 tests
09:04:25.078 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:87
09:04:25.079 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #458
09:04:25.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:86 which is executed by 2 tests
09:04:25.081 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:86
09:04:25.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #459
09:04:25.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:83 which is executed by 2 tests
09:04:25.084 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:83
09:04:25.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #460
09:04:25.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:82 which is executed by 2 tests
09:04:25.086 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:82
09:04:25.087 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #461
09:04:25.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:81 which is executed by 2 tests
09:04:25.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:81
09:04:25.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #462
09:04:25.090 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:80 which is executed by 2 tests
09:04:25.090 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:80
09:04:25.091 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #463
09:04:25.092 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:79 which is executed by 2 tests
09:04:25.093 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:79
09:04:25.094 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #464
09:04:25.094 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:77 which is executed by 2 tests
09:04:25.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:77
09:04:25.096 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #465
09:04:25.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:76 which is executed by 2 tests
09:04:25.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:76
09:04:25.099 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #466
09:04:25.099 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:74 which is executed by 2 tests
09:04:25.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:74
09:04:25.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #467
09:04:25.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:73 which is executed by 2 tests
09:04:25.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:73
09:04:25.104 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #468
09:04:25.105 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:71 which is executed by 2 tests
09:04:25.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:71
09:04:25.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #469
09:04:25.108 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:70 which is executed by 2 tests
09:04:25.109 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:70
09:04:25.110 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #470
09:04:25.110 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:69 which is executed by 2 tests
09:04:25.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:69
09:04:25.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #471
09:04:25.112 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:64 which is executed by 2 tests
09:04:25.113 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:64
09:04:25.113 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #472
09:04:25.114 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:63 which is executed by 2 tests
09:04:25.115 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:63
09:04:25.116 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #473
09:04:25.117 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:62 which is executed by 2 tests
09:04:25.117 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:62
09:04:25.118 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #474
09:04:25.119 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:58 which is executed by 2 tests
09:04:25.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:58
09:04:25.121 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #475
09:04:25.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:57 which is executed by 2 tests
09:04:25.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:57
09:04:25.123 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #476
09:04:25.125 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:56 which is executed by 2 tests
09:04:25.125 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:56
09:04:25.126 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #477
09:04:25.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:55 which is executed by 2 tests
09:04:25.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:55
09:04:25.128 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #478
09:04:25.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:54 which is executed by 2 tests
09:04:25.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.PackagingDataCalculator:54
09:04:25.130 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #479
09:04:25.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:45 which is executed by 2 tests
09:04:25.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:45
09:04:25.132 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #480
09:04:25.132 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:44 which is executed by 2 tests
09:04:25.133 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:44
09:04:25.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #481
09:04:25.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:37 which is executed by 2 tests
09:04:25.135 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:37
09:04:25.136 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #482
09:04:25.137 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:36 which is executed by 2 tests
09:04:25.139 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.joran.spi.ConsoleTarget$1:36
09:04:25.140 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #483
09:04:25.141 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.Converter:53 which is executed by 2 tests
09:04:25.141 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.Converter:53
09:04:25.142 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #484
09:04:25.144 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.Converter:43 which is executed by 2 tests
09:04:25.146 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.Converter:43
09:04:25.147 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #485
09:04:25.148 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.Converter:42 which is executed by 2 tests
09:04:25.149 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.Converter:42
09:04:25.150 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #486
09:04:25.151 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.DataOutputViewStream:40 which is executed by 2 tests
2043044433
09:04:25.575 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #487
09:04:25.576 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.java.typeutils.runtime.DataOutputViewStream:39 which is executed by 2 tests
2043044433
09:04:25.993 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #488
09:04:25.994 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:489 which is executed by 2 tests
09:04:25.996 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:489
09:04:25.997 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #489
09:04:25.997 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:488 which is executed by 2 tests
09:04:26.000 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:488
09:04:26.001 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #490
09:04:26.002 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:484 which is executed by 2 tests
09:04:26.004 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:484
09:04:26.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #491
09:04:26.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:483 which is executed by 2 tests
09:04:26.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:483
09:04:26.009 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #492
09:04:26.010 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:386 which is executed by 2 tests
09:04:26.011 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:386
09:04:26.013 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #493
09:04:26.014 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:385 which is executed by 2 tests
09:04:26.015 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:385
09:04:26.016 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #494
09:04:26.017 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:384 which is executed by 2 tests
09:04:26.017 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:384
09:04:26.019 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #495
09:04:26.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:382 which is executed by 2 tests
09:04:26.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:382
09:04:26.022 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #496
09:04:26.024 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:381 which is executed by 2 tests
09:04:26.025 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:381
09:04:26.026 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #497
09:04:26.027 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:380 which is executed by 2 tests
09:04:26.028 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:380
09:04:26.031 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #498
09:04:26.032 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:379 which is executed by 2 tests
09:04:26.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:379
09:04:26.035 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #499
09:04:26.036 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:378 which is executed by 2 tests
09:04:26.037 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:378
09:04:26.039 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #500
09:04:26.040 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:371 which is executed by 2 tests
09:04:26.042 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:371
09:04:26.042 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #501
09:04:26.043 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:370 which is executed by 2 tests
09:04:26.044 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:370
09:04:26.045 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #502
09:04:26.046 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:369 which is executed by 2 tests
09:04:26.047 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:369
09:04:26.049 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #503
09:04:26.049 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:297 which is executed by 2 tests
09:04:26.050 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:297
09:04:26.050 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #504
09:04:26.051 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:295 which is executed by 2 tests
09:04:26.052 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:295
09:04:26.053 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #505
09:04:26.054 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:294 which is executed by 2 tests
09:04:26.055 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:294
09:04:26.056 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #506
09:04:26.057 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:274 which is executed by 2 tests
09:04:26.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:274
09:04:26.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #507
09:04:26.061 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:273 which is executed by 2 tests
09:04:26.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:273
09:04:26.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #508
09:04:26.064 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:272 which is executed by 2 tests
09:04:26.065 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:272
09:04:26.066 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #509
09:04:26.067 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:271 which is executed by 2 tests
09:04:26.069 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:271
09:04:26.071 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #510
09:04:26.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:270 which is executed by 2 tests
09:04:26.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:270
09:04:26.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #511
09:04:26.075 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:269 which is executed by 2 tests
09:04:26.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:269
09:04:26.077 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #512
09:04:26.078 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:268 which is executed by 2 tests
09:04:26.079 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:268
09:04:26.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #513
09:04:26.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:127 which is executed by 2 tests
09:04:26.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:127
09:04:26.084 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #514
09:04:26.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:126 which is executed by 2 tests
09:04:26.086 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:126
09:04:26.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #515
09:04:26.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:125 which is executed by 2 tests
09:04:26.090 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:125
09:04:26.092 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #516
09:04:26.093 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:124 which is executed by 2 tests
09:04:26.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:124
09:04:26.096 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #517
09:04:26.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:123 which is executed by 2 tests
09:04:26.099 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:123
09:04:26.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #518
09:04:26.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:114 which is executed by 2 tests
09:04:26.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:114
09:04:26.104 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #519
09:04:26.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:107 which is executed by 2 tests
09:04:26.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:107
09:04:26.108 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #520
09:04:26.109 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:106 which is executed by 2 tests
09:04:26.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:106
09:04:26.112 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #521
09:04:26.114 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:105 which is executed by 2 tests
09:04:26.115 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:105
09:04:26.116 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #522
09:04:26.117 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:99 which is executed by 2 tests
09:04:26.118 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:99
09:04:26.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #523
09:04:26.121 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:98 which is executed by 2 tests
09:04:26.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:98
09:04:26.123 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #524
09:04:26.125 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:97 which is executed by 2 tests
09:04:26.126 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:97
09:04:26.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #525
09:04:26.128 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:91 which is executed by 2 tests
09:04:26.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:91
09:04:26.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #526
09:04:26.130 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:90 which is executed by 2 tests
09:04:26.130 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:90
09:04:26.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #527
09:04:26.133 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:89 which is executed by 2 tests
09:04:26.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:89
09:04:26.135 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #528
09:04:26.137 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:88 which is executed by 2 tests
09:04:26.139 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:88
09:04:26.140 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #529
09:04:26.142 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:85 which is executed by 2 tests
09:04:26.142 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:85
09:04:26.144 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #530
09:04:26.145 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IdentityMap:84 which is executed by 2 tests
09:04:26.146 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IdentityMap:84
09:04:26.148 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #531
09:04:26.149 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:149 which is executed by 2 tests
09:04:26.150 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:149
09:04:26.151 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #532
09:04:26.152 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:147 which is executed by 2 tests
09:04:26.154 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:147
09:04:26.155 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #533
09:04:26.157 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:146 which is executed by 2 tests
09:04:26.158 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:146
09:04:26.159 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #534
09:04:26.161 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:145 which is executed by 2 tests
09:04:26.162 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:145
09:04:26.162 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #535
09:04:26.163 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:144 which is executed by 2 tests
09:04:26.164 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:144
09:04:26.165 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #536
09:04:26.166 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:141 which is executed by 2 tests
09:04:26.166 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:141
09:04:26.167 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #537
09:04:26.167 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:137 which is executed by 2 tests
09:04:26.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:137
09:04:26.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #538
09:04:26.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:135 which is executed by 2 tests
09:04:26.172 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:135
09:04:26.173 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #539
09:04:26.174 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:134 which is executed by 2 tests
09:04:26.176 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:134
09:04:26.177 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #540
09:04:26.178 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:127 which is executed by 2 tests
09:04:26.180 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:127
09:04:26.181 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #541
09:04:26.182 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:123 which is executed by 2 tests
09:04:26.183 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:123
09:04:26.185 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #542
09:04:26.186 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:114 which is executed by 2 tests
09:04:26.188 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:114
09:04:26.188 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #543
09:04:26.189 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:110 which is executed by 2 tests
09:04:26.190 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:110
09:04:26.191 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #544
09:04:26.192 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:106 which is executed by 2 tests
09:04:26.194 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:106
09:04:26.195 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #545
09:04:26.196 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:97 which is executed by 2 tests
09:04:26.197 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ThrowableProxy:97
09:04:26.198 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #546
09:04:26.199 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:347 which is executed by 2 tests
09:04:26.200 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:347
09:04:26.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #547
09:04:26.203 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:323 which is executed by 2 tests
09:04:26.205 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:323
09:04:26.206 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #548
09:04:26.208 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:313 which is executed by 2 tests
09:04:26.208 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:313
09:04:26.210 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #549
09:04:26.211 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:312 which is executed by 2 tests
09:04:26.213 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:312
09:04:26.214 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #550
09:04:26.215 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:307 which is executed by 2 tests
09:04:26.217 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:307
09:04:26.218 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #551
09:04:26.219 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:306 which is executed by 2 tests
09:04:26.220 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:306
09:04:26.222 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #552
09:04:26.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:302 which is executed by 2 tests
09:04:26.224 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:302
09:04:26.226 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #553
09:04:26.227 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:263 which is executed by 2 tests
09:04:26.228 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:263
09:04:26.229 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #554
09:04:26.230 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:262 which is executed by 2 tests
09:04:26.232 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:262
09:04:26.233 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #555
09:04:26.235 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:261 which is executed by 2 tests
09:04:26.236 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:261
09:04:26.237 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #556
09:04:26.238 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:260 which is executed by 2 tests
09:04:26.239 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:260
09:04:26.240 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #557
09:04:26.241 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:259 which is executed by 2 tests
09:04:26.242 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:259
09:04:26.245 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #558
09:04:26.246 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:169 which is executed by 2 tests
09:04:26.247 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:169
09:04:26.247 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #559
09:04:26.249 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:168 which is executed by 2 tests
09:04:26.250 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:168
09:04:26.251 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #560
09:04:26.252 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:167 which is executed by 2 tests
09:04:26.253 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:167
09:04:26.254 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #561
09:04:26.255 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:166 which is executed by 2 tests
09:04:26.256 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:166
09:04:26.257 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #562
09:04:26.258 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:163 which is executed by 2 tests
09:04:26.260 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:163
09:04:26.261 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #563
09:04:26.263 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:161 which is executed by 2 tests
09:04:26.263 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:161
09:04:26.264 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #564
09:04:26.267 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:139 which is executed by 2 tests
09:04:26.268 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:139
09:04:26.270 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #565
09:04:26.271 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.io.Output:118 which is executed by 2 tests
09:04:26.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.io.Output:118
09:04:26.273 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #566
09:04:26.274 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:540 which is executed by 2 tests
09:04:26.275 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:540
09:04:26.277 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #567
09:04:26.278 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:539 which is executed by 2 tests
09:04:26.279 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:539
09:04:26.281 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #568
09:04:26.282 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:535 which is executed by 2 tests
09:04:26.284 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:535
09:04:26.287 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #569
09:04:26.288 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:534 which is executed by 2 tests
09:04:26.289 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:534
09:04:26.290 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #570
09:04:26.291 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:330 which is executed by 2 tests
09:04:26.292 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:330
09:04:26.293 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #571
09:04:26.295 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:328 which is executed by 2 tests
09:04:26.296 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:328
09:04:26.297 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #572
09:04:26.298 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:327 which is executed by 2 tests
09:04:26.299 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:327
09:04:26.300 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #573
09:04:26.300 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:307 which is executed by 2 tests
09:04:26.301 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:307
09:04:26.302 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #574
09:04:26.304 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:304 which is executed by 2 tests
09:04:26.305 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:304
09:04:26.306 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #575
09:04:26.307 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:303 which is executed by 2 tests
09:04:26.309 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:303
09:04:26.310 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #576
09:04:26.311 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:302 which is executed by 2 tests
09:04:26.313 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:302
09:04:26.314 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #577
09:04:26.314 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:301 which is executed by 2 tests
09:04:26.315 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:301
09:04:26.317 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #578
09:04:26.318 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:300 which is executed by 2 tests
09:04:26.319 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:300
09:04:26.320 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #579
09:04:26.321 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:299 which is executed by 2 tests
09:04:26.322 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:299
09:04:26.323 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #580
09:04:26.324 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:297 which is executed by 2 tests
09:04:26.326 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:297
09:04:26.327 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #581
09:04:26.328 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:296 which is executed by 2 tests
09:04:26.331 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:296
09:04:26.331 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #582
09:04:26.333 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:295 which is executed by 2 tests
09:04:26.334 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:295
09:04:26.335 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #583
09:04:26.336 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:144 which is executed by 2 tests
09:04:26.337 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:144
09:04:26.339 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #584
09:04:26.339 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:143 which is executed by 2 tests
09:04:26.341 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:143
09:04:26.342 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #585
09:04:26.342 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:142 which is executed by 2 tests
09:04:26.343 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:142
09:04:26.345 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #586
09:04:26.346 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:141 which is executed by 2 tests
09:04:26.347 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:141
09:04:26.348 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #587
09:04:26.349 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:140 which is executed by 2 tests
09:04:26.352 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:140
09:04:26.353 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #588
09:04:26.354 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:131 which is executed by 2 tests
09:04:26.355 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:131
09:04:26.356 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #589
09:04:26.358 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:124 which is executed by 2 tests
09:04:26.359 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:124
09:04:26.359 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #590
09:04:26.361 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:123 which is executed by 2 tests
09:04:26.362 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:123
09:04:26.363 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #591
09:04:26.365 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:122 which is executed by 2 tests
09:04:26.366 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:122
09:04:26.368 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #592
09:04:26.369 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:116 which is executed by 2 tests
09:04:26.370 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:116
09:04:26.372 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #593
09:04:26.373 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:115 which is executed by 2 tests
09:04:26.375 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:115
09:04:26.376 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #594
09:04:26.376 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:114 which is executed by 2 tests
09:04:26.378 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:114
09:04:26.379 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #595
09:04:26.381 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:108 which is executed by 2 tests
09:04:26.382 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:108
09:04:26.383 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #596
09:04:26.384 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:107 which is executed by 2 tests
09:04:26.386 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:107
09:04:26.386 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #597
09:04:26.387 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:106 which is executed by 2 tests
09:04:26.388 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:106
09:04:26.389 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #598
09:04:26.390 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:103 which is executed by 2 tests
09:04:26.391 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:103
09:04:26.392 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #599
09:04:26.393 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:100 which is executed by 2 tests
09:04:26.395 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:100
09:04:26.396 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #600
09:04:26.398 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:98 which is executed by 2 tests
09:04:26.399 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:98
09:04:26.400 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #601
09:04:26.402 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:97 which is executed by 2 tests
09:04:26.402 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:97
09:04:26.403 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #602
09:04:26.405 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:96 which is executed by 2 tests
09:04:26.406 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:96
09:04:26.407 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #603
09:04:26.408 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:95 which is executed by 2 tests
09:04:26.410 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:95
09:04:26.411 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #604
09:04:26.411 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:94 which is executed by 2 tests
09:04:26.412 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:94
09:04:26.413 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #605
09:04:26.414 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.IntMap:93 which is executed by 2 tests
09:04:26.416 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.IntMap:93
09:04:26.417 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #606
09:04:26.418 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:22 which is executed by 2 tests
09:04:26.418 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:22
09:04:26.419 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #607
09:04:26.421 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:59 which is executed by 2 tests
09:04:26.422 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:59
09:04:26.423 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #608
09:04:26.424 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:56 which is executed by 2 tests
09:04:26.426 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:56
09:04:26.427 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #609
09:04:26.428 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:55 which is executed by 2 tests
09:04:26.429 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:55
09:04:26.430 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #610
09:04:26.432 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:51 which is executed by 2 tests
09:04:26.433 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:51
09:04:26.434 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #611
09:04:26.434 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:47 which is executed by 2 tests
09:04:26.435 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:47
09:04:26.436 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #612
09:04:26.436 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MDCConverter:45 which is executed by 2 tests
09:04:26.437 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MDCConverter:45
09:04:26.438 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #613
09:04:26.438 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:71 which is executed by 2 tests
09:04:26.442 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:71
09:04:26.442 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #614
09:04:26.449 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:66 which is executed by 2 tests
09:04:26.452 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:66
09:04:26.453 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #615
09:04:26.455 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:63 which is executed by 2 tests
09:04:26.456 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:63
09:04:26.457 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #616
09:04:26.458 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:62 which is executed by 2 tests
09:04:26.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:62
09:04:26.460 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #617
09:04:26.462 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:56 which is executed by 2 tests
09:04:26.463 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:56
09:04:26.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #618
09:04:26.466 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:54 which is executed by 2 tests
09:04:26.468 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:54
09:04:26.469 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #619
09:04:26.470 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:48 which is executed by 2 tests
09:04:26.472 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:48
09:04:26.473 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #620
09:04:26.474 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:45 which is executed by 2 tests
09:04:26.475 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:45
09:04:26.475 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #621
09:04:26.476 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:44 which is executed by 2 tests
09:04:26.477 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:44
09:04:26.478 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #622
09:04:26.479 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:41 which is executed by 2 tests
09:04:26.480 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:41
09:04:26.481 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #623
09:04:26.483 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:40 which is executed by 2 tests
09:04:26.484 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:40
09:04:26.486 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #624
09:04:26.492 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:39 which is executed by 2 tests
09:04:26.494 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:39
09:04:26.497 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #625
09:04:26.499 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:37 which is executed by 2 tests
09:04:26.500 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:37
09:04:26.501 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #626
09:04:26.503 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:673 which is executed by 2 tests
-141459365
09:04:26.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #627
09:04:26.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:661 which is executed by 2 tests
-141459365
09:04:27.372 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
2020-01-29 04:04:27,658 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:27,718 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:27,723 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.deserialize(KryoSerializer.java:220)
	at org.apache.flink.api.common.state.StateDescriptor.readObject(StateDescriptor.java:297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1170)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2178)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2069)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1573)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:431)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:152)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorEagerSerializer(ValueStateDescriptorTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:27,742 INFO org.apache.flink.api.java.typeutils.TypeExtractor - class org.apache.flink.core.fs.Path is not a valid POJO type
2020-01-29 04:04:27,748 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryo(KryoSerializer.java:379)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testValueStateDescriptorLazySerializer(ValueStateDescriptorTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:27,777 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:27,782 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:31)
	at xxl.java.junit.JUnitRunner.call(JUnitRunner.java:17)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:28,685 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:28,761 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:28,787 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.copy(KryoSerializer.java:152)
	at org.apache.flink.api.common.state.StateDescriptor.getDefaultValue(StateDescriptor.java:134)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-01-29 04:04:28,792 WARN org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer - Falling back to default Kryo serializer because Chill serializer couldn't be found.
java.lang.ClassNotFoundException: com.twitter.chill.ScalaKryoInstantiator
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at fr.inria.lille.repair.common.BottomTopURLClassLoader.loadClass(BottomTopURLClassLoader.java:43)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:264)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.getKryoInstance(KryoSerializer.java:300)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.checkKryoInitialized(KryoSerializer.java:324)
	at org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer.serialize(KryoSerializer.java:184)
	at org.apache.flink.api.common.state.StateDescriptor.writeObject(StateDescriptor.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.apache.flink.core.testutils.CommonTestUtils.createCopySerializable(CommonTestUtils.java:144)
	at org.apache.flink.api.common.state.ValueStateDescriptorTest.testVeryLargeDefaultValue(ValueStateDescriptorTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:23)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
09:04:28.797 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #628
09:04:28.798 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:654 which is executed by 2 tests
-141459365
09:04:29.220 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #629
09:04:29.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:647 which is executed by 2 tests
-141459365
09:04:29.726 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #630
09:04:29.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:639 which is executed by 2 tests
-141459365
09:04:30.222 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #631
09:04:30.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:632 which is executed by 2 tests
-141459365
09:04:30.898 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #632
09:04:30.902 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.flink.api.common.ExecutionConfig:425 which is executed by 2 tests
-141459365
09:04:31.350 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #633
09:04:31.354 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:189 which is executed by 2 tests
09:04:31.355 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:189
09:04:31.357 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #634
09:04:31.358 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:188 which is executed by 2 tests
09:04:31.359 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:188
09:04:31.360 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #635
09:04:31.361 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:184 which is executed by 2 tests
09:04:31.362 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:184
09:04:31.363 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #636
09:04:31.364 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:182 which is executed by 2 tests
09:04:31.365 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:182
09:04:31.366 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #637
09:04:31.367 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:157 which is executed by 2 tests
09:04:31.368 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:157
09:04:31.369 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #638
09:04:31.370 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:156 which is executed by 2 tests
09:04:31.371 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:156
09:04:31.372 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #639
09:04:31.373 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ClassPackagingData:46 which is executed by 2 tests
09:04:31.376 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ClassPackagingData:46
09:04:31.378 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #640
09:04:31.378 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ClassPackagingData:42 which is executed by 2 tests
09:04:31.379 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ClassPackagingData:42
09:04:31.380 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #641
09:04:31.381 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.ClassPackagingData:38 which is executed by 2 tests
09:04:31.382 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.ClassPackagingData:38
09:04:31.383 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #642
09:04:31.384 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:220 which is executed by 2 tests
09:04:31.385 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:220
09:04:31.386 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #643
09:04:31.387 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:219 which is executed by 2 tests
09:04:31.388 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:219
09:04:31.388 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #644
09:04:31.390 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:213 which is executed by 2 tests
09:04:31.391 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:213
09:04:31.392 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #645
09:04:31.393 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:212 which is executed by 2 tests
09:04:31.394 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:212
09:04:31.395 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #646
09:04:31.396 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:211 which is executed by 2 tests
09:04:31.399 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:211
09:04:31.400 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #647
09:04:31.401 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:206 which is executed by 2 tests
09:04:31.402 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:206
09:04:31.403 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #648
09:04:31.404 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:205 which is executed by 2 tests
09:04:31.405 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:205
09:04:31.406 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #649
09:04:31.407 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:200 which is executed by 2 tests
09:04:31.409 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:200
09:04:31.410 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #650
09:04:31.411 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:189 which is executed by 2 tests
09:04:31.412 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:189
09:04:31.413 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #651
09:04:31.414 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:188 which is executed by 2 tests
09:04:31.415 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:188
09:04:31.416 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #652
09:04:31.417 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:104 which is executed by 2 tests
09:04:31.418 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:104
09:04:31.419 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #653
09:04:31.420 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:103 which is executed by 2 tests
09:04:31.421 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:103
09:04:31.427 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #654
09:04:31.428 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:99 which is executed by 2 tests
09:04:31.429 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:99
09:04:31.431 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #655
09:04:31.432 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:137 which is executed by 2 tests
09:04:31.433 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:137
09:04:31.434 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #656
09:04:31.435 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:117 which is executed by 2 tests
09:04:31.436 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:117
09:04:31.437 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #657
09:04:31.438 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:97 which is executed by 2 tests
09:04:31.439 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:97
09:04:31.439 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #658
09:04:31.440 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:96 which is executed by 2 tests
09:04:31.441 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:96
09:04:31.442 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #659
09:04:31.443 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:95 which is executed by 2 tests
09:04:31.444 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:95
09:04:31.445 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #660
09:04:31.446 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:74 which is executed by 2 tests
09:04:31.447 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:74
09:04:31.447 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #661
09:04:31.448 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:72 which is executed by 2 tests
09:04:31.449 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:72
09:04:31.450 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #662
09:04:31.451 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:67 which is executed by 2 tests
09:04:31.452 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:67
09:04:31.456 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #663
09:04:31.457 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.MapReferenceResolver:19 which is executed by 2 tests
09:04:31.458 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.MapReferenceResolver:19
09:04:31.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #664
09:04:31.460 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.MapReferenceResolver:18 which is executed by 2 tests
09:04:31.461 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.MapReferenceResolver:18
09:04:31.462 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #665
09:04:31.463 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.MDC:215 which is executed by 2 tests
09:04:31.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.MDC:215
09:04:31.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #666
09:04:31.465 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.FormattingTuple:66 which is executed by 2 tests
09:04:31.466 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.FormattingTuple:66
09:04:31.467 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #667
09:04:31.469 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:162 which is executed by 2 tests
09:04:31.470 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:162
09:04:31.471 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #668
09:04:31.472 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:161 which is executed by 2 tests
09:04:31.473 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:161
09:04:31.474 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #669
09:04:31.475 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:88 which is executed by 2 tests
09:04:31.475 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:88
09:04:31.476 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #670
09:04:31.477 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:55 which is executed by 2 tests
09:04:31.478 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:55
09:04:31.479 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #671
09:04:31.480 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:52 which is executed by 2 tests
09:04:31.481 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:52
09:04:31.485 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #672
09:04:31.486 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:51 which is executed by 2 tests
09:04:31.487 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:51
09:04:31.488 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #673
09:04:31.489 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:48 which is executed by 2 tests
09:04:31.489 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:48
09:04:31.490 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #674
09:04:31.491 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:40 which is executed by 2 tests
09:04:31.492 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:40
09:04:31.493 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #675
09:04:31.494 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:38 which is executed by 2 tests
09:04:31.495 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:38
09:04:31.496 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #676
09:04:31.497 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:37 which is executed by 2 tests
09:04:31.498 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.StackTraceElementProxy:37
09:04:31.499 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #677
09:04:31.500 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:51 which is executed by 2 tests
09:04:31.501 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:51
09:04:31.502 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #678
09:04:31.503 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:49 which is executed by 2 tests
09:04:31.503 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:49
09:04:31.504 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #679
09:04:31.505 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:48 which is executed by 2 tests
09:04:31.506 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:48
09:04:31.507 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #680
09:04:31.508 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:47 which is executed by 2 tests
09:04:31.509 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:47
09:04:31.510 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #681
09:04:31.512 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:46 which is executed by 2 tests
09:04:31.513 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:46
09:04:31.514 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #682
09:04:31.515 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Serializer:85 which is executed by 2 tests
09:04:31.516 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Serializer:85
09:04:31.517 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #683
09:04:31.518 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Serializer:66 which is executed by 2 tests
09:04:31.519 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Serializer:66
09:04:31.520 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #684
09:04:31.522 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Serializer:65 which is executed by 2 tests
09:04:31.523 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Serializer:65
09:04:31.524 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #685
09:04:31.525 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Serializer:56 which is executed by 2 tests
09:04:31.526 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Serializer:56
09:04:31.527 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #686
09:04:31.528 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.Serializer:55 which is executed by 2 tests
09:04:31.529 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.Serializer:55
09:04:31.530 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #687
09:04:31.532 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:122 which is executed by 2 tests
09:04:31.533 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:122
09:04:31.534 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #688
09:04:31.535 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:120 which is executed by 2 tests
09:04:31.536 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:120
09:04:31.537 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #689
09:04:31.541 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:119 which is executed by 2 tests
09:04:31.542 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:119
09:04:31.543 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #690
09:04:31.544 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:118 which is executed by 2 tests
09:04:31.545 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:118
09:04:31.546 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #691
09:04:31.547 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:117 which is executed by 2 tests
09:04:31.548 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:117
09:04:31.549 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #692
09:04:31.550 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:116 which is executed by 2 tests
09:04:31.551 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:116
09:04:31.552 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #693
09:04:31.553 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.LiteralConverter:25 which is executed by 2 tests
09:04:31.554 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.LiteralConverter:25
09:04:31.555 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #694
09:04:31.556 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:250 which is executed by 2 tests
09:04:31.557 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:250
09:04:31.558 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #695
09:04:31.559 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:249 which is executed by 2 tests
09:04:31.560 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:249
09:04:31.561 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #696
09:04:31.563 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:197 which is executed by 2 tests
09:04:31.565 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:197
09:04:31.566 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #697
09:04:31.568 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:189 which is executed by 2 tests
09:04:31.570 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:189
09:04:31.571 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #698
09:04:31.571 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormatInfo:114 which is executed by 2 tests
09:04:31.572 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormatInfo:114
09:04:31.574 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #699
09:04:31.575 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormatInfo:106 which is executed by 2 tests
09:04:31.576 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormatInfo:106
09:04:31.577 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #700
09:04:31.578 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormatInfo:98 which is executed by 2 tests
09:04:31.579 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormatInfo:98
09:04:31.580 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #701
09:04:31.581 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LoggerConverter:21 which is executed by 2 tests
09:04:31.582 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LoggerConverter:21
09:04:31.583 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #702
09:04:31.584 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:37 which is executed by 2 tests
09:04:31.585 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:37
09:04:31.586 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #703
09:04:31.587 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:36 which is executed by 2 tests
09:04:31.587 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:36
09:04:31.589 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #704
09:04:31.590 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:35 which is executed by 2 tests
09:04:31.591 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:35
09:04:31.591 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #705
09:04:31.595 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:34 which is executed by 2 tests
09:04:31.596 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:34
09:04:31.597 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #706
09:04:31.598 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:33 which is executed by 2 tests
09:04:31.599 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:33
09:04:31.600 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #707
09:04:31.601 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:32 which is executed by 2 tests
09:04:31.602 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:32
09:04:31.603 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #708
09:04:31.604 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:31 which is executed by 2 tests
09:04:31.605 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:31
09:04:31.606 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #709
09:04:31.607 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:30 which is executed by 2 tests
09:04:31.608 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:30
09:04:31.609 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #710
09:04:31.610 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:29 which is executed by 2 tests
09:04:31.611 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:29
09:04:31.612 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #711
09:04:31.613 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:28 which is executed by 2 tests
09:04:31.614 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:28
09:04:31.617 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #712
09:04:31.618 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:27 which is executed by 2 tests
09:04:31.619 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:27
09:04:31.620 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #713
09:04:31.621 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:26 which is executed by 2 tests
09:04:31.623 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:26
09:04:31.624 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #714
09:04:31.625 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:25 which is executed by 2 tests
09:04:31.625 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:25
09:04:31.626 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #715
09:04:31.627 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:24 which is executed by 2 tests
09:04:31.628 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:24
09:04:31.630 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #716
09:04:31.631 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:23 which is executed by 2 tests
09:04:31.632 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:23
09:04:31.633 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #717
09:04:31.634 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:22 which is executed by 2 tests
09:04:31.634 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:22
09:04:31.635 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #718
09:04:31.636 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.Util:21 which is executed by 2 tests
09:04:31.637 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.Util:21
09:04:31.638 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #719
09:04:31.638 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.DateConverter:23 which is executed by 2 tests
09:04:31.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.DateConverter:23
09:04:31.640 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #720
09:04:31.641 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.DateConverter:63 which is executed by 2 tests
09:04:31.645 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.DateConverter:63
09:04:31.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #721
09:04:31.647 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.DateConverter:62 which is executed by 2 tests
09:04:31.648 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.DateConverter:62
09:04:31.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #722
09:04:31.650 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:138 which is executed by 2 tests
09:04:31.652 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:138
09:04:31.652 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #723
09:04:31.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:137 which is executed by 2 tests
09:04:31.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:137
09:04:31.656 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #724
09:04:31.656 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:136 which is executed by 2 tests
09:04:31.657 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:136
09:04:31.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #725
09:04:31.659 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:135 which is executed by 2 tests
09:04:31.660 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:135
09:04:31.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #726
09:04:31.662 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:134 which is executed by 2 tests
09:04:31.663 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:134
09:04:31.664 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #727
09:04:31.665 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:122 which is executed by 2 tests
09:04:31.668 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:122
09:04:31.669 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #728
09:04:31.669 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:121 which is executed by 2 tests
09:04:31.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:121
09:04:31.671 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #729
09:04:31.672 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:698 which is executed by 2 tests
09:04:31.673 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:698
09:04:31.673 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #730
09:04:31.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:697 which is executed by 2 tests
09:04:31.675 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:697
09:04:31.676 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #731
09:04:31.677 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:696 which is executed by 2 tests
09:04:31.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:696
09:04:31.679 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #732
09:04:31.680 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:695 which is executed by 2 tests
09:04:31.680 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:695
09:04:31.681 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #733
09:04:31.682 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:694 which is executed by 2 tests
09:04:31.683 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:694
09:04:31.684 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #734
09:04:31.685 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:693 which is executed by 2 tests
09:04:31.686 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:693
09:04:31.686 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #735
09:04:31.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:692 which is executed by 2 tests
09:04:31.690 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:692
09:04:31.691 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #736
09:04:31.692 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:691 which is executed by 2 tests
09:04:31.693 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:691
09:04:31.694 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #737
09:04:31.695 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:500 which is executed by 2 tests
09:04:31.695 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:500
09:04:31.696 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #738
09:04:31.697 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:499 which is executed by 2 tests
09:04:31.698 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:499
09:04:31.699 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #739
09:04:31.700 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:495 which is executed by 2 tests
09:04:31.701 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:495
09:04:31.701 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #740
09:04:31.702 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:494 which is executed by 2 tests
09:04:31.703 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:494
09:04:31.704 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #741
09:04:31.704 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:287 which is executed by 2 tests
09:04:31.705 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:287
09:04:31.706 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #742
09:04:31.706 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:285 which is executed by 2 tests
09:04:31.707 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:285
09:04:31.708 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #743
09:04:31.708 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:284 which is executed by 2 tests
09:04:31.709 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:284
09:04:31.710 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #744
09:04:31.711 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:280 which is executed by 2 tests
09:04:31.712 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:280
09:04:31.713 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #745
09:04:31.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:277 which is executed by 2 tests
09:04:31.717 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:277
09:04:31.718 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #746
09:04:31.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:276 which is executed by 2 tests
09:04:31.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:276
09:04:31.720 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #747
09:04:31.721 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:275 which is executed by 2 tests
09:04:31.722 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:275
09:04:31.723 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #748
09:04:31.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:274 which is executed by 2 tests
09:04:31.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:274
09:04:31.726 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #749
09:04:31.726 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:273 which is executed by 2 tests
09:04:31.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:273
09:04:31.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #750
09:04:31.729 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:272 which is executed by 2 tests
09:04:31.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:272
09:04:31.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #751
09:04:31.731 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:271 which is executed by 2 tests
09:04:31.732 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:271
09:04:31.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #752
09:04:31.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:131 which is executed by 2 tests
09:04:31.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:131
09:04:31.737 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #753
09:04:31.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:130 which is executed by 2 tests
09:04:31.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:130
09:04:31.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #754
09:04:31.741 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:129 which is executed by 2 tests
09:04:31.742 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:129
09:04:31.743 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #755
09:04:31.744 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:128 which is executed by 2 tests
09:04:31.745 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:128
09:04:31.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #756
09:04:31.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:127 which is executed by 2 tests
09:04:31.747 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:127
09:04:31.748 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #757
09:04:31.749 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:124 which is executed by 2 tests
09:04:31.750 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:124
09:04:31.751 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #758
09:04:31.752 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:123 which is executed by 2 tests
09:04:31.753 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:123
09:04:31.754 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #759
09:04:31.755 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:122 which is executed by 2 tests
09:04:31.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:122
09:04:31.757 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #760
09:04:31.758 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:121 which is executed by 2 tests
09:04:31.759 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:121
09:04:31.760 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #761
09:04:31.760 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:120 which is executed by 2 tests
09:04:31.761 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:120
09:04:31.762 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #762
09:04:31.763 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:111 which is executed by 2 tests
09:04:31.766 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:111
09:04:31.767 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #763
09:04:31.768 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:104 which is executed by 2 tests
09:04:31.769 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:104
09:04:31.769 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #764
09:04:31.770 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:103 which is executed by 2 tests
09:04:31.771 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:103
09:04:31.771 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #765
09:04:31.772 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:102 which is executed by 2 tests
09:04:31.773 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:102
09:04:31.773 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #766
09:04:31.774 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:96 which is executed by 2 tests
09:04:31.775 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:96
09:04:31.776 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #767
09:04:31.776 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:95 which is executed by 2 tests
09:04:31.777 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:95
09:04:31.778 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #768
09:04:31.779 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:94 which is executed by 2 tests
09:04:31.779 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:94
09:04:31.780 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #769
09:04:31.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:88 which is executed by 2 tests
09:04:31.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:88
09:04:31.782 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #770
09:04:31.783 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:87 which is executed by 2 tests
09:04:31.783 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:87
09:04:31.784 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #771
09:04:31.786 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:86 which is executed by 2 tests
09:04:31.786 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:86
09:04:31.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #772
09:04:31.788 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:85 which is executed by 2 tests
09:04:31.788 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:85
09:04:31.789 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #773
09:04:31.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:82 which is executed by 2 tests
09:04:31.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:82
09:04:31.791 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #774
09:04:31.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:78 which is executed by 2 tests
09:04:31.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:78
09:04:31.794 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #775
09:04:31.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.ObjectMap:77 which is executed by 2 tests
09:04:31.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.ObjectMap:77
09:04:31.802 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #776
09:04:31.804 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.NamedConverter:18 which is executed by 2 tests
09:04:31.804 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.NamedConverter:18
09:04:31.805 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #777
09:04:31.806 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.NamedConverter:53 which is executed by 2 tests
09:04:31.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.NamedConverter:53
09:04:31.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #778
09:04:31.808 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.NamedConverter:50 which is executed by 2 tests
09:04:31.809 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.NamedConverter:50
09:04:31.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #779
09:04:31.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.NamedConverter:48 which is executed by 2 tests
09:04:31.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.NamedConverter:48
09:04:31.812 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #780
09:04:31.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:19 which is executed by 2 tests
09:04:31.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:19
09:04:31.814 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #781
09:04:31.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:22 which is executed by 2 tests
09:04:31.817 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:22
09:04:31.817 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #782
09:04:31.818 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LevelConverter:23 which is executed by 2 tests
09:04:31.819 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LevelConverter:23
09:04:31.819 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #783
09:04:31.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LevelConverter:26 which is executed by 2 tests
09:04:31.821 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LevelConverter:26
09:04:31.822 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #784
09:04:31.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation com.esotericsoftware.kryo.util.DefaultStreamFactory:86 which is executed by 2 tests
09:04:31.824 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation com.esotericsoftware.kryo.util.DefaultStreamFactory:86
09:04:31.825 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
09:04:32.056 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 667
09:04:32.057 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 4051
09:04:32.058 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 15
09:04:32.061 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
09:04:32.063 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 93954ms
09:04:32.064 [pool-1-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE
