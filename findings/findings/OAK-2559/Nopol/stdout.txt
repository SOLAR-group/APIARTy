21:41:31.449 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [/apiarty/data/OAK-2559/jackrabbit-oak/oak-lucene/src/main/java, /apiarty/data/OAK-2559/jackrabbit-oak/oak-lucene/src/test/java]
21:41:31.459 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/apiarty/data/OAK-2559/jackrabbit-oak/oak-lucene/target/classes/, file:/apiarty/data/OAK-2559/jackrabbit-oak/oak-lucene/target/test-classes/, file:/root/.m2/repository/org/osgi/org.osgi.core/4.2.0/org.osgi.core-4.2.0.jar, file:/root/.m2/repository/org/osgi/org.osgi.compendium/4.2.0/org.osgi.compendium-4.2.0.jar, file:/root/.m2/repository/biz/aQute/bnd/bndlib/2.2.0/bndlib-2.2.0.jar, file:/root/.m2/repository/org/apache/felix/org.apache.felix.scr.annotations/1.9.6/org.apache.felix.scr.annotations-1.9.6.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-core/1.1-SNAPSHOT/oak-core-1.1-SNAPSHOT.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-mk-api/1.1-SNAPSHOT/oak-mk-api-1.1-SNAPSHOT.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-commons/1.1-SNAPSHOT/oak-commons-1.1-SNAPSHOT.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-blob/1.1-SNAPSHOT/oak-blob-1.1-SNAPSHOT.jar, file:/root/.m2/repository/com/google/guava/guava/15.0/guava-15.0.jar, file:/root/.m2/repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar, file:/root/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar, file:/root/.m2/repository/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar, file:/root/.m2/repository/javax/jcr/jcr/2.0/jcr-2.0.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-api/2.9.0/jackrabbit-api-2.9.0.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/2.9.0/jackrabbit-jcr-commons-2.9.0.jar, file:/root/.m2/repository/commons-dbcp/commons-dbcp/1.4/commons-dbcp-1.4.jar, file:/root/.m2/repository/commons-pool/commons-pool/1.5.4/commons-pool-1.5.4.jar, file:/root/.m2/repository/org/apache/tika/tika-core/1.5/tika-core-1.5.jar, file:/root/.m2/repository/org/apache/lucene/lucene-core/4.7.1/lucene-core-4.7.1.jar, file:/root/.m2/repository/org/apache/lucene/lucene-analyzers-common/4.7.1/lucene-analyzers-common-4.7.1.jar, file:/root/.m2/repository/org/apache/lucene/lucene-queryparser/4.7.1/lucene-queryparser-4.7.1.jar, file:/root/.m2/repository/org/apache/lucene/lucene-sandbox/4.7.1/lucene-sandbox-4.7.1.jar, file:/root/.m2/repository/org/apache/lucene/lucene-queries/4.7.1/lucene-queries-4.7.1.jar, file:/root/.m2/repository/org/apache/lucene/lucene-suggest/4.7.1/lucene-suggest-4.7.1.jar, file:/root/.m2/repository/org/apache/lucene/lucene-misc/4.7.1/lucene-misc-4.7.1.jar, file:/root/.m2/repository/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar, file:/root/.m2/repository/com/google/code/findbugs/jsr305/2.0.0/jsr305-2.0.0.jar, file:/root/.m2/repository/junit/junit/4.10/junit-4.10.jar, file:/root/.m2/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-core/1.1-SNAPSHOT/oak-core-1.1-SNAPSHOT-tests.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-jcr/1.1-SNAPSHOT/oak-jcr-1.1-SNAPSHOT.jar, file:/root/.m2/repository/org/apache/jackrabbit/oak-jcr/1.1-SNAPSHOT/oak-jcr-1.1-SNAPSHOT-tests.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-tests/2.9.0/jackrabbit-jcr-tests-2.9.0.jar, file:/root/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-core/2.9.0/jackrabbit-core-2.9.0-tests.jar, file:/root/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-data/2.9.0/jackrabbit-data-2.9.0.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-data/2.9.0/jackrabbit-data-2.9.0-tests.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-spi-commons/2.9.0/jackrabbit-spi-commons-2.9.0.jar, file:/root/.m2/repository/org/apache/jackrabbit/jackrabbit-spi/2.9.0/jackrabbit-spi-2.9.0.jar, file:/root/.m2/repository/org/apache/derby/derby/10.5.3.0_1/derby-10.5.3.0_1.jar, file:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.6/jcl-over-slf4j-1.7.6.jar, file:/root/.m2/repository/ch/qos/logback/logback-classic/1.1.0/logback-classic-1.1.0.jar, file:/root/.m2/repository/ch/qos/logback/logback-core/1.1.0/logback-core-1.1.0.jar, file:/root/.m2/repository/org/apache/tika/tika-parsers/1.5/tika-parsers-1.5.jar, file:/root/.m2/repository/org/gagravarr/vorbis-java-tika/0.1/vorbis-java-tika-0.1.jar, file:/root/.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1-tests.jar, file:/root/.m2/repository/edu/ucar/netcdf/4.2-min/netcdf-4.2-min.jar, file:/root/.m2/repository/org/apache/james/apache-mime4j-core/0.7.2/apache-mime4j-core-0.7.2.jar, file:/root/.m2/repository/org/apache/james/apache-mime4j-dom/0.7.2/apache-mime4j-dom-0.7.2.jar, file:/root/.m2/repository/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar, file:/root/.m2/repository/org/tukaani/xz/1.2/xz-1.2.jar, file:/root/.m2/repository/org/apache/pdfbox/pdfbox/1.8.4/pdfbox-1.8.4.jar, file:/root/.m2/repository/org/apache/pdfbox/fontbox/1.8.4/fontbox-1.8.4.jar, file:/root/.m2/repository/org/apache/pdfbox/jempbox/1.8.4/jempbox-1.8.4.jar, file:/root/.m2/repository/org/bouncycastle/bcmail-jdk15/1.45/bcmail-jdk15-1.45.jar, file:/root/.m2/repository/org/bouncycastle/bcprov-jdk15/1.45/bcprov-jdk15-1.45.jar, file:/root/.m2/repository/org/apache/poi/poi/3.10-beta2/poi-3.10-beta2.jar, file:/root/.m2/repository/org/apache/poi/poi-scratchpad/3.10-beta2/poi-scratchpad-3.10-beta2.jar, file:/root/.m2/repository/org/apache/poi/poi-ooxml/3.10-beta2/poi-ooxml-3.10-beta2.jar, file:/root/.m2/repository/org/apache/poi/poi-ooxml-schemas/3.10-beta2/poi-ooxml-schemas-3.10-beta2.jar, file:/root/.m2/repository/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar, file:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, file:/root/.m2/repository/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0.1/geronimo-stax-api_1.0_spec-1.0.1.jar, file:/root/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar, file:/root/.m2/repository/org/ow2/asm/asm-debug-all/4.1/asm-debug-all-4.1.jar, file:/root/.m2/repository/com/googlecode/mp4parser/isoparser/1.0-RC-1/isoparser-1.0-RC-1.jar, file:/root/.m2/repository/org/aspectj/aspectjrt/1.6.11/aspectjrt-1.6.11.jar, file:/root/.m2/repository/com/drewnoakes/metadata-extractor/2.6.2/metadata-extractor-2.6.2.jar, file:/root/.m2/repository/com/adobe/xmp/xmpcore/5.1.2/xmpcore-5.1.2.jar, file:/root/.m2/repository/xerces/xercesImpl/2.8.1/xercesImpl-2.8.1.jar, file:/root/.m2/repository/xml-apis/xml-apis/1.3.03/xml-apis-1.3.03.jar, file:/root/.m2/repository/de/l3s/boilerpipe/boilerpipe/1.1.0/boilerpipe-1.1.0.jar, file:/root/.m2/repository/rome/rome/0.9/rome-0.9.jar, file:/root/.m2/repository/jdom/jdom/1.0/jdom-1.0.jar, file:/root/.m2/repository/org/gagravarr/vorbis-java-core/0.1/vorbis-java-core-0.1.jar, file:/root/.m2/repository/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar, file:/root/.m2/repository/com/uwyn/jhighlight/1.0/jhighlight-1.0.jar]
21:41:31.461 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
21:41:31.462 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest]
21:41:31.468 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/nopol/nopol/lib/z3/z3_for_linux', projectSources=[/apiarty/data/OAK-2559/jackrabbit-oak/oak-lucene/src/main/java, /apiarty/data/OAK-2559/jackrabbit-oak/oak-lucene/src/test/java], projectClasspath='[Ljava.net.URL;@4ec6a292', projectTests=[org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest], complianceLevel=8, outputFolder=., json=false}
21:41:31.470 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 2
21:41:31.490 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 50 MB
21:41:31.492 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
21:41:31.493 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 59 MB
21:41:31.494 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_232
21:41:31.497 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
21:41:31.498 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /apiarty/apiarty.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
21:41:53.837 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
21:41:53.840 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.impl.StaticMDCBinder:42 which is executed by 1 tests
21:41:53.842 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.impl.StaticMDCBinder:42
21:41:53.844 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
21:41:53.845 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1230 which is executed by 2 tests
-424569946
21:41:57.522 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
21:41:57.524 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1229 which is executed by 2 tests
-424569946
21:42:01.261 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
21:42:01.263 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1199 which is executed by 2 tests
-424569946
21:42:03.329 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:42:15.957 [pool-2-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:42:15.959 [pool-2-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:42:15.960 [pool-2-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1199.
21:42:15.961 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
21:42:15.962 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1104 which is executed by 2 tests
-424569946
21:42:20.240 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
21:42:20.242 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1103 which is executed by 2 tests
-424569946
21:42:23.419 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:42:33.831 [pool-8-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:42:33.834 [pool-8-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:42:33.835 [pool-8-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1103.
21:42:33.835 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
21:42:33.836 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:991 which is executed by 2 tests
-424569946
21:42:37.375 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:42:46.442 [pool-14-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:42:46.446 [pool-14-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:42:46.447 [pool-14-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:991.
21:42:46.449 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
21:42:46.451 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:321 which is executed by 2 tests
-424569946
21:42:52.404 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
21:42:52.408 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.LuceneIndexHelper:107 which is executed by 2 tests
196633343
21:42:55.878 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:43:02.196 [pool-20-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:02.199 [pool-20-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:02.200 [pool-20-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.LuceneIndexHelper:107.
21:43:02.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
21:43:02.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.LuceneIndexHelper:100 which is executed by 2 tests
196633343
21:43:05.461 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:43:12.360 [pool-26-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:12.362 [pool-26-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:12.363 [pool-26-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.LuceneIndexHelper:100.
21:43:12.364 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
21:43:12.365 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.LuceneIndexHelper:83 which is executed by 2 tests
196633343
21:43:15.621 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
21:43:15.629 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:702 which is executed by 9 tests
-424569946
21:43:19.366 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:43:28.906 [pool-32-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:28.907 [pool-32-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:28.908 [pool-32-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:702.
21:43:28.909 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
21:43:28.910 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:784 which is executed by 11 tests
-424569946
21:43:31.371 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
21:43:31.374 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1268 which is executed by 3 tests
-424569946
21:43:33.750 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
21:43:33.751 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1208 which is executed by 3 tests
-424569946
21:43:36.205 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:43:43.207 [pool-38-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:43.209 [pool-38-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:43.210 [pool-38-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1208.
21:43:43.211 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
21:43:43.214 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:926 which is executed by 3 tests
-424569946
21:43:47.871 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
21:43:47.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:924 which is executed by 3 tests
-424569946
21:43:51.462 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:43:59.113 [pool-44-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:59.116 [pool-44-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:43:59.118 [pool-44-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:924.
21:43:59.119 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
21:43:59.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:923 which is executed by 3 tests
-424569946
21:44:02.214 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:44:10.386 [pool-50-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:10.390 [pool-50-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:10.391 [pool-50-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:923.
21:44:10.393 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
21:44:10.394 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:922 which is executed by 3 tests
-424569946
21:44:13.517 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:44:21.572 [pool-56-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:21.575 [pool-56-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:21.576 [pool-56-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:922.
21:44:21.578 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
21:44:21.579 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:921 which is executed by 3 tests
-424569946
21:44:23.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:44:33.383 [pool-62-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:33.385 [pool-62-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:33.386 [pool-62-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:921.
21:44:33.387 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
21:44:33.388 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:920 which is executed by 3 tests
-424569946
21:44:37.565 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:44:46.587 [pool-68-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:46.588 [pool-68-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:46.589 [pool-68-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:920.
21:44:46.589 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
21:44:46.590 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:919 which is executed by 3 tests
-424569946
21:44:48.967 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:44:57.026 [pool-74-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:57.027 [pool-74-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:44:57.028 [pool-74-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:919.
21:44:57.029 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
21:44:57.030 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:918 which is executed by 3 tests
-424569946
21:45:00.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:45:07.590 [pool-80-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:07.592 [pool-80-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:07.593 [pool-80-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:918.
21:45:07.594 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
21:45:07.595 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:916 which is executed by 3 tests
-424569946
21:45:10.799 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:45:20.058 [pool-86-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:20.061 [pool-86-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:20.061 [pool-86-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:916.
21:45:20.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
21:45:20.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:915 which is executed by 3 tests
-424569946
21:45:22.968 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:45:32.817 [pool-92-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:32.820 [pool-92-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:32.821 [pool-92-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:915.
21:45:32.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
21:45:32.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:914 which is executed by 3 tests
-424569946
21:45:36.202 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
21:45:36.204 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:913 which is executed by 3 tests
-424569946
21:45:39.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:45:47.942 [pool-98-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:47.944 [pool-98-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:47.945 [pool-98-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:913.
21:45:47.946 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:45:55.681 [pool-104-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:55.684 [pool-104-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:45:55.685 [pool-104-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:913.
21:45:55.686 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
21:45:55.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:912 which is executed by 3 tests
-424569946
21:45:58.716 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
21:45:58.717 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:604 which is executed by 3 tests
21:45:58.718 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:604
21:45:58.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
21:45:58.719 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:603 which is executed by 3 tests
21:45:58.720 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:603
21:45:58.720 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
21:45:58.721 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:279 which is executed by 3 tests
21:45:58.722 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:279
21:45:58.722 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #32
21:45:58.723 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:318 which is executed by 13 tests
21:45:58.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:318
21:45:58.724 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #33
21:45:58.725 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:316 which is executed by 13 tests
21:45:58.725 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:316
21:45:58.726 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #34
21:45:58.726 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:315 which is executed by 13 tests
21:45:58.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:315
21:45:58.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #35
21:45:58.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:310 which is executed by 13 tests
21:45:58.729 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:310
21:45:58.729 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #36
21:45:58.730 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:309 which is executed by 13 tests
21:45:58.731 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:309
21:45:58.731 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #37
21:45:58.732 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:308 which is executed by 13 tests
21:45:58.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:308
21:45:58.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #38
21:45:58.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:307 which is executed by 13 tests
21:45:58.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:307
21:45:58.735 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #39
21:45:58.735 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:293 which is executed by 13 tests
21:45:58.736 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:293
21:45:58.736 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #40
21:45:58.737 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:292 which is executed by 13 tests
21:45:58.738 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:292
21:45:58.738 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #41
21:45:58.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:283 which is executed by 13 tests
21:45:58.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:283
21:45:58.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #42
21:45:58.740 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:282 which is executed by 13 tests
21:45:58.741 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:282
21:45:58.742 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #43
21:45:58.742 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:278 which is executed by 13 tests
21:45:58.743 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:278
21:45:58.744 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #44
21:45:58.744 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:262 which is executed by 13 tests
21:45:58.745 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:262
21:45:58.745 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #45
21:45:58.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:259 which is executed by 13 tests
21:45:58.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:259
21:45:58.747 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #46
21:45:58.748 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:258 which is executed by 13 tests
21:45:58.748 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:258
21:45:58.749 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #47
21:45:58.749 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:232 which is executed by 13 tests
21:45:58.750 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:232
21:45:58.751 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #48
21:45:58.755 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:209 which is executed by 13 tests
21:45:58.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:209
21:45:58.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #49
21:45:58.757 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:208 which is executed by 13 tests
21:45:58.758 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:208
21:45:58.758 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #50
21:45:58.759 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:206 which is executed by 13 tests
21:45:58.759 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:206
21:45:58.760 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #51
21:45:58.760 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:205 which is executed by 13 tests
21:45:58.761 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:205
21:45:58.762 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #52
21:45:58.762 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:182 which is executed by 13 tests
21:45:58.763 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:182
21:45:58.763 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #53
21:45:58.764 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:163 which is executed by 13 tests
21:45:58.764 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:163
21:45:58.765 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #54
21:45:58.765 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:161 which is executed by 13 tests
21:45:58.766 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:161
21:45:58.767 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #55
21:45:58.767 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:160 which is executed by 13 tests
21:45:58.768 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:160
21:45:58.768 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #56
21:45:58.769 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.LoggingEvent:148 which is executed by 13 tests
21:45:58.770 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.LoggingEvent:148
21:45:58.770 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #57
21:45:58.771 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:23 which is executed by 13 tests
21:45:58.771 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:23
21:45:58.772 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #58
21:45:58.772 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:26 which is executed by 13 tests
21:45:58.773 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThreadConverter:26
21:45:58.773 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #59
21:45:58.774 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:118 which is executed by 13 tests
21:45:58.775 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:118
21:45:58.776 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #60
21:45:58.776 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:114 which is executed by 13 tests
21:45:58.777 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:114
21:45:58.778 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #61
21:45:58.778 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:111 which is executed by 13 tests
21:45:58.779 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:111
21:45:58.779 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #62
21:45:58.780 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:103 which is executed by 13 tests
21:45:58.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:103
21:45:58.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #63
21:45:58.782 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:101 which is executed by 13 tests
21:45:58.782 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:101
21:45:58.783 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #64
21:45:58.783 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:99 which is executed by 13 tests
21:45:58.784 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:99
21:45:58.785 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #65
21:45:58.785 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:92 which is executed by 13 tests
21:45:58.786 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:92
21:45:58.786 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #66
21:45:58.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:90 which is executed by 13 tests
21:45:58.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:90
21:45:58.788 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #67
21:45:58.789 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:89 which is executed by 13 tests
21:45:58.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:89
21:45:58.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #68
21:45:58.791 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:88 which is executed by 13 tests
21:45:58.792 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:88
21:45:58.792 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #69
21:45:58.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:86 which is executed by 13 tests
21:45:58.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:86
21:45:58.794 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #70
21:45:58.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:85 which is executed by 13 tests
21:45:58.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:85
21:45:58.796 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #71
21:45:58.796 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:81 which is executed by 13 tests
21:45:58.797 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:81
21:45:58.799 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #72
21:45:58.799 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:75 which is executed by 13 tests
21:45:58.800 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:75
21:45:58.800 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #73
21:45:58.801 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:74 which is executed by 13 tests
21:45:58.801 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:74
21:45:58.802 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #74
21:45:58.802 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:72 which is executed by 13 tests
21:45:58.803 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:72
21:45:58.803 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #75
21:45:58.804 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:69 which is executed by 13 tests
21:45:58.805 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:69
21:45:58.805 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #76
21:45:58.806 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:68 which is executed by 13 tests
21:45:58.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:68
21:45:58.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #77
21:45:58.808 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:67 which is executed by 13 tests
21:45:58.808 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:67
21:45:58.809 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #78
21:45:58.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:64 which is executed by 13 tests
21:45:58.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:64
21:45:58.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #79
21:45:58.811 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.spi.CallerData:60 which is executed by 13 tests
21:45:58.812 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.spi.CallerData:60
21:45:58.812 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #80
21:45:58.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:35 which is executed by 13 tests
21:45:58.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:35
21:45:58.814 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #81
21:45:58.814 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:102 which is executed by 13 tests
21:45:58.815 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:102
21:45:58.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #82
21:45:58.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:101 which is executed by 13 tests
21:45:58.817 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:101
21:45:58.818 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #83
21:45:58.818 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:100 which is executed by 13 tests
21:45:58.819 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.ThrowableProxyConverter:100
21:45:58.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #84
21:45:58.820 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:781 which is executed by 13 tests
21:45:58.821 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:781
21:45:58.821 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #85
21:45:58.822 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:442 which is executed by 13 tests
21:45:58.822 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:442
21:45:58.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #86
21:45:58.823 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:441 which is executed by 13 tests
21:45:58.824 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:441
21:45:58.825 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #87
21:45:58.825 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:440 which is executed by 13 tests
21:45:58.826 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:440
21:45:58.826 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #88
21:45:58.827 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:439 which is executed by 13 tests
21:45:58.828 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:439
21:45:58.828 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #89
21:45:58.829 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:415 which is executed by 13 tests
21:45:58.829 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:415
21:45:58.830 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #90
21:45:58.830 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:413 which is executed by 13 tests
21:45:58.831 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:413
21:45:58.832 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #91
21:45:58.832 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:406 which is executed by 13 tests
21:45:58.833 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:406
21:45:58.833 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #92
21:45:58.834 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:405 which is executed by 13 tests
21:45:58.834 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:405
21:45:58.835 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #93
21:45:58.835 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:402 which is executed by 13 tests
21:45:58.836 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:402
21:45:58.836 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #94
21:45:58.837 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:274 which is executed by 13 tests
21:45:58.837 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:274
21:45:58.838 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #95
21:45:58.839 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:272 which is executed by 13 tests
21:45:58.844 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:272
21:45:58.844 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #96
21:45:58.845 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:271 which is executed by 13 tests
21:45:58.846 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:271
21:45:58.846 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #97
21:45:58.847 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:268 which is executed by 13 tests
21:45:58.848 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:268
21:45:58.848 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #98
21:45:58.849 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:265 which is executed by 13 tests
21:45:58.849 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:265
21:45:58.850 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #99
21:45:58.850 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:260 which is executed by 13 tests
21:45:58.851 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:260
21:45:58.851 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #100
21:45:58.852 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:259 which is executed by 13 tests
21:45:58.852 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:259
21:45:58.853 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #101
21:45:58.854 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:258 which is executed by 13 tests
21:45:58.854 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:258
21:45:58.855 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #102
21:45:58.855 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:257 which is executed by 13 tests
21:45:58.856 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:257
21:45:58.856 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #103
21:45:58.857 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.MDC:215 which is executed by 13 tests
21:45:58.857 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.MDC:215
21:45:58.858 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #104
21:45:58.859 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.LiteralConverter:25 which is executed by 13 tests
21:45:58.859 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.LiteralConverter:25
21:45:58.860 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #105
21:45:58.861 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormatInfo:114 which is executed by 13 tests
21:45:58.861 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormatInfo:114
21:45:58.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #106
21:45:58.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormatInfo:106 which is executed by 13 tests
21:45:58.863 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormatInfo:106
21:45:58.864 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #107
21:45:58.865 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormatInfo:98 which is executed by 13 tests
21:45:58.865 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormatInfo:98
21:45:58.866 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #108
21:45:58.866 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.IdentityCompositeConverter:20 which is executed by 13 tests
21:45:58.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.IdentityCompositeConverter:20
21:45:58.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #109
21:45:58.868 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.DateConverter:23 which is executed by 13 tests
21:45:58.869 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.DateConverter:23
21:45:58.869 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #110
21:45:58.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.DateConverter:63 which is executed by 13 tests
21:45:58.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.DateConverter:63
21:45:58.871 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #111
21:45:58.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.DateConverter:62 which is executed by 13 tests
21:45:58.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.DateConverter:62
21:45:58.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #112
21:45:58.874 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.FileAppender:208 which is executed by 13 tests
21:45:58.874 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.FileAppender:208
21:45:58.875 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #113
21:45:58.875 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.FileAppender:206 which is executed by 13 tests
21:45:58.876 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.FileAppender:206
21:45:58.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #114
21:45:58.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.FileAppender:203 which is executed by 13 tests
21:45:58.878 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.FileAppender:203
21:45:58.878 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #115
21:45:58.879 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:19 which is executed by 13 tests
21:45:58.879 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:19
21:45:58.880 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #116
21:45:58.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:22 which is executed by 13 tests
21:45:58.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineSeparatorConverter:22
21:45:58.882 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #117
21:45:58.882 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:63 which is executed by 13 tests
21:45:58.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:63
21:45:58.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #118
21:45:58.884 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:60 which is executed by 13 tests
21:45:58.884 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:60
21:45:58.885 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #119
21:45:58.889 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:59 which is executed by 13 tests
21:45:58.890 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:59
21:45:58.890 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #120
21:45:58.891 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:58 which is executed by 13 tests
21:45:58.892 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:58
21:45:58.892 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #121
21:45:58.893 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:53 which is executed by 13 tests
21:45:58.894 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:53
21:45:58.895 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #122
21:45:58.895 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:47 which is executed by 13 tests
21:45:58.896 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:47
21:45:58.897 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #123
21:45:58.897 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:45 which is executed by 13 tests
21:45:58.898 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:45
21:45:58.898 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #124
21:45:58.899 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:44 which is executed by 13 tests
21:45:58.899 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:44
21:45:58.900 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #125
21:45:58.901 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:42 which is executed by 13 tests
21:45:58.901 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:42
21:45:58.902 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #126
21:45:58.902 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:41 which is executed by 13 tests
21:45:58.903 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:41
21:45:58.903 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #127
21:45:58.904 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:39 which is executed by 13 tests
21:45:58.904 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:39
21:45:58.905 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #128
21:45:58.905 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:38 which is executed by 13 tests
21:45:58.906 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:38
21:45:58.907 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #129
21:45:58.907 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.SpacePadder:37 which is executed by 13 tests
21:45:58.907 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.SpacePadder:37
21:45:58.908 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #130
21:45:58.908 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MessageConverter:23 which is executed by 13 tests
21:45:58.909 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MessageConverter:23
21:45:58.910 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #131
21:45:58.910 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.MessageConverter:26 which is executed by 13 tests
21:45:58.911 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.MessageConverter:26
21:45:58.911 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #132
21:45:58.912 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.PatternLayout:59 which is executed by 13 tests
21:45:58.912 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.PatternLayout:59
21:45:58.913 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #133
21:45:58.914 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.PatternLayout:168 which is executed by 13 tests
21:45:58.914 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.PatternLayout:168
21:45:58.915 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #134
21:45:58.916 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.PatternLayout:165 which is executed by 13 tests
21:45:58.916 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.PatternLayout:165
21:45:58.917 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #135
21:45:58.917 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:57 which is executed by 13 tests
21:45:58.918 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:57
21:45:58.918 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #136
21:45:58.919 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:51 which is executed by 13 tests
21:45:58.919 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.FilterAttachableImpl:51
21:45:58.920 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #137
21:45:58.920 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.LayoutBase:44 which is executed by 13 tests
21:45:58.921 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.LayoutBase:44
21:45:58.921 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #138
21:45:58.922 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:98 which is executed by 13 tests
21:45:58.922 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:98
21:45:58.923 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #139
21:45:58.923 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:92 which is executed by 13 tests
21:45:58.924 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:92
21:45:58.924 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #140
21:45:58.925 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:85 which is executed by 13 tests
21:45:58.925 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:85
21:45:58.926 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #141
21:45:58.926 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:83 which is executed by 13 tests
21:45:58.927 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:83
21:45:58.927 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #142
21:45:58.928 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:80 which is executed by 13 tests
21:45:58.928 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:80
21:45:58.933 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #143
21:45:58.934 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:79 which is executed by 13 tests
21:45:58.935 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:79
21:45:58.935 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #144
21:45:58.936 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:77 which is executed by 13 tests
21:45:58.937 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:77
21:45:58.937 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #145
21:45:58.938 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:57 which is executed by 13 tests
21:45:58.938 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:57
21:45:58.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #146
21:45:58.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:56 which is executed by 13 tests
21:45:58.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:56
21:45:58.941 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #147
21:45:58.941 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:53 which is executed by 13 tests
21:45:58.942 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:53
21:45:58.942 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #148
21:45:58.943 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:52 which is executed by 13 tests
21:45:58.943 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:52
21:45:58.944 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #149
21:45:58.944 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:44 which is executed by 13 tests
21:45:58.945 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:44
21:45:58.945 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #150
21:45:58.946 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:40 which is executed by 13 tests
21:45:58.946 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.recovery.ResilientOutputStreamBase:40
21:45:58.947 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #151
21:45:58.947 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:19 which is executed by 13 tests
21:45:58.948 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:19
21:45:58.949 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #152
21:45:58.949 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:24 which is executed by 13 tests
21:45:58.950 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:24
21:45:58.950 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #153
21:45:58.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:23 which is executed by 13 tests
21:45:58.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:23
21:45:58.952 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #154
21:45:58.952 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:22 which is executed by 13 tests
21:45:58.953 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.FileOfCallerConverter:22
21:45:58.954 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #155
21:45:58.954 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:51 which is executed by 13 tests
21:45:58.955 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:51
21:45:58.956 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #156
21:45:58.956 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:49 which is executed by 13 tests
21:45:58.957 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:49
21:45:58.957 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #157
21:45:58.958 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:48 which is executed by 13 tests
21:45:58.958 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:48
21:45:58.959 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #158
21:45:58.959 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:47 which is executed by 13 tests
21:45:58.960 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:47
21:45:58.960 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #159
21:45:58.961 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.util.CachingDateFormatter:46 which is executed by 13 tests
21:45:58.961 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.util.CachingDateFormatter:46
21:45:58.962 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #160
21:45:58.962 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.Converter:43 which is executed by 13 tests
21:45:58.963 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.Converter:43
21:45:58.963 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #161
21:45:58.964 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.Converter:42 which is executed by 13 tests
21:45:58.964 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.Converter:42
21:45:58.965 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #162
21:45:58.965 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:71 which is executed by 13 tests
21:45:58.966 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:71
21:45:58.966 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #163
21:45:58.967 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:66 which is executed by 13 tests
21:45:58.968 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:66
21:45:58.968 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #164
21:45:58.969 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:63 which is executed by 13 tests
21:45:58.969 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:63
21:45:58.970 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #165
21:45:58.970 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:62 which is executed by 13 tests
21:45:58.971 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:62
21:45:58.971 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #166
21:45:58.972 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:56 which is executed by 13 tests
21:45:58.977 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:56
21:45:58.977 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #167
21:45:58.978 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:54 which is executed by 13 tests
21:45:58.979 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:54
21:45:58.979 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #168
21:45:58.980 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:48 which is executed by 13 tests
21:45:58.980 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:48
21:45:58.981 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #169
21:45:58.981 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:45 which is executed by 13 tests
21:45:58.982 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:45
21:45:58.983 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #170
21:45:58.983 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:44 which is executed by 13 tests
21:45:58.984 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:44
21:45:58.984 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #171
21:45:58.985 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:41 which is executed by 13 tests
21:45:58.985 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:41
21:45:58.986 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #172
21:45:58.986 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:40 which is executed by 13 tests
21:45:58.987 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:40
21:45:58.987 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #173
21:45:58.988 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:39 which is executed by 13 tests
21:45:58.988 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:39
21:45:58.989 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #174
21:45:58.989 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.FormattingConverter:37 which is executed by 13 tests
21:45:58.990 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.FormattingConverter:37
21:45:58.990 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #175
21:45:58.991 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:19 which is executed by 13 tests
21:45:58.992 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:19
21:45:58.992 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #176
21:45:58.993 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:24 which is executed by 13 tests
21:45:58.993 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:24
21:45:58.994 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #177
21:45:58.994 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:23 which is executed by 13 tests
21:45:58.995 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:23
21:45:58.995 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #178
21:45:58.996 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:22 which is executed by 13 tests
21:45:58.996 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LineOfCallerConverter:22
21:45:58.997 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #179
21:45:58.997 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:314 which is executed by 13 tests
21:45:58.998 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:314
21:45:58.998 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #180
21:45:58.998 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:312 which is executed by 13 tests
21:45:58.999 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:312
21:45:58.999 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #181
21:45:59.000 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:305 which is executed by 13 tests
21:45:59.000 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:305
21:45:59.001 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #182
21:45:59.001 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:304 which is executed by 13 tests
21:45:59.002 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:304
21:45:59.002 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #183
21:45:59.003 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:300 which is executed by 13 tests
21:45:59.003 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:300
21:45:59.004 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #184
21:45:59.004 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:276 which is executed by 13 tests
21:45:59.004 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:276
21:45:59.005 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #185
21:45:59.005 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:275 which is executed by 13 tests
21:45:59.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:275
21:45:59.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #186
21:45:59.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:271 which is executed by 13 tests
21:45:59.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:271
21:45:59.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #187
21:45:59.008 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:254 which is executed by 13 tests
21:45:59.008 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:254
21:45:59.009 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #188
21:45:59.009 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:251 which is executed by 13 tests
21:45:59.010 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:251
21:45:59.010 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #189
21:45:59.011 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:250 which is executed by 13 tests
21:45:59.011 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:250
21:45:59.012 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #190
21:45:59.014 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:247 which is executed by 13 tests
21:45:59.014 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:247
21:45:59.015 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #191
21:45:59.016 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:240 which is executed by 13 tests
21:45:59.016 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:240
21:45:59.017 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #192
21:45:59.017 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:237 which is executed by 13 tests
21:45:59.018 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:237
21:45:59.018 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #193
21:45:59.019 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:236 which is executed by 13 tests
21:45:59.019 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:236
21:45:59.020 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #194
21:45:59.020 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:231 which is executed by 13 tests
21:45:59.021 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:231
21:45:59.022 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #195
21:45:59.022 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:230 which is executed by 13 tests
21:45:59.023 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:230
21:45:59.023 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #196
21:45:59.024 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:229 which is executed by 13 tests
21:45:59.024 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:229
21:45:59.025 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #197
21:45:59.025 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:213 which is executed by 13 tests
21:45:59.025 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:213
21:45:59.026 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #198
21:45:59.026 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:201 which is executed by 13 tests
21:45:59.027 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:201
21:45:59.027 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #199
21:45:59.028 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:199 which is executed by 13 tests
21:45:59.028 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:199
21:45:59.029 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #200
21:45:59.029 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:197 which is executed by 13 tests
21:45:59.030 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:197
21:45:59.030 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #201
21:45:59.031 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:194 which is executed by 13 tests
21:45:59.031 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:194
21:45:59.032 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #202
21:45:59.032 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:192 which is executed by 13 tests
21:45:59.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:192
21:45:59.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #203
21:45:59.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:188 which is executed by 13 tests
21:45:59.034 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:188
21:45:59.034 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #204
21:45:59.035 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:184 which is executed by 13 tests
21:45:59.035 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:184
21:45:59.036 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #205
21:45:59.036 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:182 which is executed by 13 tests
21:45:59.037 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:182
21:45:59.037 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #206
21:45:59.037 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:164 which is executed by 13 tests
21:45:59.038 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:164
21:45:59.038 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #207
21:45:59.039 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:161 which is executed by 13 tests
21:45:59.039 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:161
21:45:59.040 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #208
21:45:59.040 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:160 which is executed by 13 tests
21:45:59.040 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:160
21:45:59.041 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #209
21:45:59.041 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.MessageFormatter:156 which is executed by 13 tests
21:45:59.042 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.MessageFormatter:156
21:45:59.042 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #210
21:45:59.043 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:220 which is executed by 13 tests
21:45:59.043 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:220
21:45:59.043 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #211
21:45:59.044 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:219 which is executed by 13 tests
21:45:59.044 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:219
21:45:59.045 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #212
21:45:59.045 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:213 which is executed by 13 tests
21:45:59.045 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:213
21:45:59.046 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #213
21:45:59.046 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:212 which is executed by 13 tests
21:45:59.047 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:212
21:45:59.052 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #214
21:45:59.052 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:211 which is executed by 13 tests
21:45:59.053 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:211
21:45:59.053 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #215
21:45:59.054 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:206 which is executed by 13 tests
21:45:59.054 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:206
21:45:59.055 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #216
21:45:59.055 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:205 which is executed by 13 tests
21:45:59.056 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:205
21:45:59.056 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #217
21:45:59.057 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:200 which is executed by 13 tests
21:45:59.057 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:200
21:45:59.058 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #218
21:45:59.058 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:189 which is executed by 13 tests
21:45:59.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:189
21:45:59.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #219
21:45:59.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:188 which is executed by 13 tests
21:45:59.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:188
21:45:59.061 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #220
21:45:59.061 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:104 which is executed by 13 tests
21:45:59.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:104
21:45:59.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #221
21:45:59.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:103 which is executed by 13 tests
21:45:59.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:103
21:45:59.064 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #222
21:45:59.064 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.OutputStreamAppender:99 which is executed by 13 tests
21:45:59.065 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.OutputStreamAppender:99
21:45:59.066 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #223
21:45:59.066 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:137 which is executed by 13 tests
21:45:59.067 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:137
21:45:59.067 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #224
21:45:59.068 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:117 which is executed by 13 tests
21:45:59.068 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:117
21:45:59.069 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #225
21:45:59.069 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:97 which is executed by 13 tests
21:45:59.070 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:97
21:45:59.071 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #226
21:45:59.071 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:96 which is executed by 13 tests
21:45:59.072 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:96
21:45:59.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #227
21:45:59.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:95 which is executed by 13 tests
21:45:59.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:95
21:45:59.075 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #228
21:45:59.075 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:74 which is executed by 13 tests
21:45:59.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:74
21:45:59.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #229
21:45:59.077 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:72 which is executed by 13 tests
21:45:59.078 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:72
21:45:59.078 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #230
21:45:59.079 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:67 which is executed by 13 tests
21:45:59.079 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.UnsynchronizedAppenderBase:67
21:45:59.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #231
21:45:59.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.FormattingTuple:74 which is executed by 13 tests
21:45:59.081 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.FormattingTuple:74
21:45:59.081 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #232
21:45:59.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.FormattingTuple:70 which is executed by 13 tests
21:45:59.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.FormattingTuple:70
21:45:59.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #233
21:45:59.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.slf4j.helpers.FormattingTuple:66 which is executed by 13 tests
21:45:59.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.slf4j.helpers.FormattingTuple:66
21:45:59.084 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #234
21:45:59.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:162 which is executed by 13 tests
21:45:59.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:162
21:45:59.086 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #235
21:45:59.086 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:161 which is executed by 13 tests
21:45:59.087 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.util.LogbackMDCAdapter:161
21:45:59.087 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #236
21:45:59.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:51 which is executed by 13 tests
21:45:59.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:51
21:45:59.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #237
21:45:59.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:49 which is executed by 13 tests
21:45:59.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:49
21:45:59.096 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #238
21:45:59.096 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:48 which is executed by 13 tests
21:45:59.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:48
21:45:59.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #239
21:45:59.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:47 which is executed by 13 tests
21:45:59.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:47
21:45:59.099 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #240
21:45:59.099 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:46 which is executed by 13 tests
21:45:59.100 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.spi.AppenderAttachableImpl:46
21:45:59.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #241
21:45:59.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:122 which is executed by 13 tests
21:45:59.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:122
21:45:59.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #242
21:45:59.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:120 which is executed by 13 tests
21:45:59.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:120
21:45:59.104 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #243
21:45:59.104 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:119 which is executed by 13 tests
21:45:59.105 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:119
21:45:59.105 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #244
21:45:59.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:118 which is executed by 13 tests
21:45:59.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:118
21:45:59.107 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #245
21:45:59.107 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:117 which is executed by 13 tests
21:45:59.108 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:117
21:45:59.108 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #246
21:45:59.109 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:116 which is executed by 13 tests
21:45:59.110 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.PatternLayoutBase:116
21:45:59.110 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #247
21:45:59.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.CompositeConverter:27 which is executed by 13 tests
21:45:59.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.CompositeConverter:27
21:45:59.112 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #248
21:45:59.113 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.CompositeConverter:26 which is executed by 13 tests
21:45:59.113 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.CompositeConverter:26
21:45:59.114 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #249
21:45:59.114 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.CompositeConverter:24 which is executed by 13 tests
21:45:59.115 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.CompositeConverter:24
21:45:59.115 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #250
21:45:59.116 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.CompositeConverter:23 which is executed by 13 tests
21:45:59.116 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.CompositeConverter:23
21:45:59.117 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #251
21:45:59.117 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.CompositeConverter:21 which is executed by 13 tests
21:45:59.118 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.CompositeConverter:21
21:45:59.118 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #252
21:45:59.119 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:365 which is executed by 13 tests
21:45:59.119 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:365
21:45:59.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #253
21:45:59.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:348 which is executed by 13 tests
21:45:59.121 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:348
21:45:59.121 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #254
21:45:59.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:260 which is executed by 13 tests
21:45:59.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:260
21:45:59.123 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #255
21:45:59.123 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:259 which is executed by 13 tests
21:45:59.124 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:259
21:45:59.124 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #256
21:45:59.125 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:189 which is executed by 13 tests
21:45:59.125 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:189
21:45:59.126 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #257
21:45:59.126 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:138 which is executed by 13 tests
21:45:59.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:138
21:45:59.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #258
21:45:59.128 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:137 which is executed by 13 tests
21:45:59.128 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:137
21:45:59.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #259
21:45:59.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:136 which is executed by 13 tests
21:45:59.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:136
21:45:59.130 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #260
21:45:59.130 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:135 which is executed by 13 tests
21:45:59.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:135
21:45:59.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #261
21:45:59.133 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:134 which is executed by 13 tests
21:45:59.133 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:134
21:45:59.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #262
21:45:59.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:122 which is executed by 13 tests
21:45:59.135 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:122
21:45:59.136 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #263
21:45:59.136 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:121 which is executed by 13 tests
21:45:59.137 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.encoder.LayoutWrappingEncoder:121
21:45:59.137 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #264
21:45:59.138 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LevelConverter:23 which is executed by 13 tests
21:45:59.138 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LevelConverter:23
21:45:59.139 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #265
21:45:59.139 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.pattern.LevelConverter:26 which is executed by 13 tests
21:45:59.140 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.pattern.LevelConverter:26
21:45:59.140 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #266
21:45:59.141 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:98 which is executed by 48 tests
-424569946
21:46:00.707 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #267
21:46:00.708 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1145 which is executed by 13 tests
-424569946
21:46:02.314 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #268
21:46:02.315 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1144 which is executed by 13 tests
-424569946
21:46:04.280 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #269
21:46:04.281 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1140 which is executed by 13 tests
-424569946
21:46:05.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #270
21:46:05.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1137 which is executed by 13 tests
-424569946
21:46:07.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #271
21:46:07.460 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:492 which is executed by 13 tests
-424569946
21:46:08.988 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:46:17.236 [pool-110-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:17.237 [pool-110-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:17.237 [pool-110-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:492.
21:46:17.238 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #272
21:46:17.241 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:491 which is executed by 13 tests
-424569946
21:46:20.357 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:46:27.835 [pool-116-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:27.836 [pool-116-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:27.837 [pool-116-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:491.
21:46:27.838 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:46:36.186 [pool-122-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:36.187 [pool-122-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:36.188 [pool-122-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:491.
21:46:36.189 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #273
21:46:36.190 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:490 which is executed by 13 tests
-424569946
21:46:38.960 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:46:46.852 [pool-128-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:46.853 [pool-128-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:46.854 [pool-128-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:490.
21:46:46.855 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #274
21:46:46.857 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:489 which is executed by 13 tests
-424569946
21:46:50.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:46:57.785 [pool-134-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:57.786 [pool-134-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:46:57.786 [pool-134-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:489.
21:46:57.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:47:04.089 [pool-140-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:04.090 [pool-140-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:04.091 [pool-140-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:489.
21:47:04.091 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #275
21:47:04.093 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:479 which is executed by 13 tests
-424569946
21:47:06.592 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:47:15.215 [pool-146-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:15.216 [pool-146-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:15.217 [pool-146-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:479.
21:47:15.218 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #276
21:47:15.219 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:476 which is executed by 13 tests
-424569946
21:47:18.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:47:25.009 [pool-152-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:25.010 [pool-152-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:25.010 [pool-152-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:476.
21:47:25.011 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #277
21:47:25.012 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:475 which is executed by 13 tests
-424569946
21:47:27.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:47:34.670 [pool-158-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:34.673 [pool-158-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:34.673 [pool-158-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:475.
21:47:34.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #278
21:47:34.675 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:474 which is executed by 13 tests
-424569946
21:47:36.839 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:47:44.598 [pool-164-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:44.600 [pool-164-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:44.601 [pool-164-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:474.
21:47:44.602 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:47:52.360 [pool-170-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:52.362 [pool-170-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:47:52.363 [pool-170-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:474.
21:47:52.364 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #279
21:47:52.365 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:473 which is executed by 13 tests
-424569946
21:47:55.129 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #280
21:47:55.130 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:472 which is executed by 13 tests
-424569946
21:47:57.936 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #281
21:47:57.937 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:108 which is executed by 13 tests
21:47:57.938 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:108
21:47:57.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #282
21:47:57.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:107 which is executed by 13 tests
21:47:57.941 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:107
21:47:57.942 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #283
21:47:57.943 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:106 which is executed by 13 tests
21:47:57.944 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:106
21:47:57.945 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #284
21:47:57.946 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:84 which is executed by 13 tests
21:47:57.947 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.util.TreeUtil:84
21:47:57.947 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #285
21:47:57.948 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:66 which is executed by 13 tests
21:47:57.949 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:66
21:47:57.950 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #286
21:47:57.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:675 which is executed by 13 tests
-424569946
21:48:00.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #287
21:48:00.128 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:670 which is executed by 13 tests
-424569946
21:48:03.374 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:48:11.636 [pool-176-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:11.638 [pool-176-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:11.639 [pool-176-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:670.
21:48:11.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:48:20.453 [pool-182-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:20.455 [pool-182-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:20.456 [pool-182-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:670.
21:48:20.457 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #288
21:48:20.458 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.StringPropertyState:57 which is executed by 13 tests
21:48:20.458 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.StringPropertyState:57
21:48:20.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #289
21:48:20.460 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:123 which is executed by 14 tests
21:48:20.460 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:123
21:48:20.461 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #290
21:48:20.462 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:100 which is executed by 14 tests
21:48:20.463 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:100
21:48:20.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #291
21:48:20.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:59 which is executed by 14 tests
21:48:20.465 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:59
21:48:20.465 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #292
21:48:20.466 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.value.Conversions:140 which is executed by 14 tests
21:48:20.467 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.value.Conversions:140
21:48:20.468 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #293
21:48:20.469 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.value.Conversions$1:143 which is executed by 14 tests
21:48:20.469 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.value.Conversions$1:143
21:48:20.470 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #294
21:48:20.471 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Level:99 which is executed by 14 tests
21:48:20.472 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Level:99
21:48:20.473 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #295
21:48:20.473 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.core.pattern.Converter:53 which is executed by 14 tests
21:48:20.474 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.core.pattern.Converter:53
21:48:20.475 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #296
21:48:20.476 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:207 which is executed by 15 tests
-515562199
21:48:22.756 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:48:30.318 [pool-188-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:30.320 [pool-188-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:30.322 [pool-188-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:207.
21:48:30.323 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #297
21:48:30.324 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:206 which is executed by 15 tests
-515562199
21:48:32.177 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:48:39.279 [pool-194-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:39.282 [pool-194-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:39.283 [pool-194-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:206.
21:48:39.284 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:48:48.210 [pool-200-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:48.213 [pool-200-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:48:48.214 [pool-200-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:206.
21:48:48.215 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #298
21:48:48.217 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:796 which is executed by 15 tests
-424569946
21:48:51.259 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:49:00.623 [pool-206-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:00.625 [pool-206-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:00.626 [pool-206-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:796.
21:49:00.627 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:49:07.935 [pool-212-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:07.937 [pool-212-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:07.938 [pool-212-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:796.
21:49:07.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #299
21:49:07.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:781 which is executed by 15 tests
-424569946
21:49:10.263 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:49:21.238 [pool-218-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:21.240 [pool-218-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:21.241 [pool-218-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:781.
21:49:21.241 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:49:30.523 [pool-224-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:30.524 [pool-224-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:30.525 [pool-224-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:781.
21:49:30.525 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #300
21:49:30.526 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:764 which is executed by 15 tests
-424569946
21:49:32.718 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:49:44.862 [pool-230-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:44.865 [pool-230-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:49:44.866 [pool-230-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:764.
21:49:44.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #301
21:49:44.868 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.StringPropertyState:31 which is executed by 83 tests
21:49:44.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.StringPropertyState:31
21:49:44.871 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #302
21:49:44.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:521 which is executed by 4 tests
21:49:44.872 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:521
21:49:44.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #303
21:49:44.874 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1264 which is executed by 4 tests
-424569946
21:49:49.785 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #304
21:49:49.790 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion:56 which is executed by 4 tests
-1103867568
21:49:53.619 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #305
21:49:53.620 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion:55 which is executed by 4 tests
-1103867568
21:49:56.580 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #306
21:49:56.581 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion:51 which is executed by 4 tests
-1103867568
21:49:58.059 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #307
21:49:58.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:48 which is executed by 17 tests
21:49:58.061 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.SinglePropertyState:48
21:49:58.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #308
21:49:58.062 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:351 which is executed by 5 tests
21:49:58.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:351
21:49:58.063 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #309
21:49:58.064 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:350 which is executed by 5 tests
21:49:58.065 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:350
21:49:58.065 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #310
21:49:58.066 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:349 which is executed by 5 tests
21:49:58.066 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:349
21:49:58.067 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #311
21:49:58.068 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:348 which is executed by 5 tests
21:49:58.068 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:348
21:49:58.069 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #312
21:49:58.070 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:181 which is executed by 5 tests
21:49:58.070 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:181
21:49:58.071 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #313
21:49:58.072 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:180 which is executed by 5 tests
21:49:58.072 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:180
21:49:58.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #314
21:49:58.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:179 which is executed by 5 tests
21:49:58.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:179
21:49:58.075 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #315
21:49:58.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:178 which is executed by 5 tests
21:49:58.076 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:178
21:49:58.077 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #316
21:49:58.077 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:177 which is executed by 5 tests
21:49:58.078 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:177
21:49:58.079 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #317
21:49:58.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:176 which is executed by 5 tests
21:49:58.080 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:176
21:49:58.081 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #318
21:49:58.081 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:90 which is executed by 5 tests
21:49:58.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:90
21:49:58.082 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #319
21:49:58.083 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:89 which is executed by 5 tests
21:49:58.084 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:89
21:49:58.084 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #320
21:49:58.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:88 which is executed by 5 tests
21:49:58.085 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:88
21:49:58.086 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #321
21:49:58.087 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:87 which is executed by 5 tests
21:49:58.087 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:87
21:49:58.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #322
21:49:58.088 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:474 which is executed by 5 tests
21:49:58.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:474
21:49:58.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #323
21:49:58.091 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:132 which is executed by 20 tests
21:49:58.092 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:132
21:49:58.092 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #324
21:49:58.093 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:129 which is executed by 20 tests
21:49:58.093 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:129
21:49:58.094 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #325
21:49:58.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder$UnconnectedHead:650 which is executed by 5 tests
21:49:58.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder$UnconnectedHead:650
21:49:58.096 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #326
21:49:58.096 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder$UnconnectedHead:649 which is executed by 5 tests
21:49:58.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder$UnconnectedHead:649
21:49:58.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #327
21:49:58.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:703 which is executed by 20 tests
-424569946
21:49:59.601 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:50:09.666 [pool-236-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:09.668 [pool-236-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:09.669 [pool-236-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:703.
21:50:09.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:50:22.492 [pool-242-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:22.495 [pool-242-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:22.496 [pool-242-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:703.
21:50:22.496 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #328
21:50:22.497 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:301 which is executed by 5 tests
21:50:22.498 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:301
21:50:22.498 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #329
21:50:22.499 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:254 which is executed by 5 tests
21:50:22.500 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:254
21:50:22.501 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #330
21:50:22.501 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:328 which is executed by 22 tests
21:50:22.504 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:328
21:50:22.505 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #331
21:50:22.506 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:327 which is executed by 22 tests
21:50:22.507 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:327
21:50:22.508 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #332
21:50:22.508 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:319 which is executed by 22 tests
21:50:22.509 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:319
21:50:22.510 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #333
21:50:22.510 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:701 which is executed by 22 tests
-424569946
21:50:25.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:50:34.216 [pool-248-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:34.217 [pool-248-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:34.218 [pool-248-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:701.
21:50:34.219 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:50:44.677 [pool-254-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:44.680 [pool-254-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:50:44.681 [pool-254-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:701.
21:50:44.682 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #334
21:50:44.683 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:700 which is executed by 22 tests
-424569946
21:50:48.524 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #335
21:50:48.525 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:797 which is executed by 6 tests
-424569946
21:50:50.961 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:51:00.372 [pool-260-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:00.373 [pool-260-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:00.374 [pool-260-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:797.
21:51:00.375 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #336
21:51:00.383 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1260 which is executed by 24 tests
-424569946
21:51:02.641 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #337
21:51:02.641 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:90 which is executed by 6 tests
21:51:02.642 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:90
21:51:02.643 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #338
21:51:02.645 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:88 which is executed by 6 tests
21:51:02.645 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:88
21:51:02.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #339
21:51:02.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:86 which is executed by 6 tests
21:51:02.647 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:86
21:51:02.648 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #340
21:51:02.648 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:85 which is executed by 6 tests
21:51:02.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:85
21:51:02.650 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #341
21:51:02.650 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:84 which is executed by 6 tests
21:51:02.652 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:84
21:51:02.652 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #342
21:51:02.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:83 which is executed by 6 tests
21:51:02.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:83
21:51:02.655 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #343
21:51:02.656 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:82 which is executed by 6 tests
21:51:02.657 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:82
21:51:02.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #344
21:51:02.659 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:80 which is executed by 6 tests
21:51:02.659 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:80
21:51:02.660 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #345
21:51:02.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:523 which is executed by 6 tests
21:51:02.662 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:523
21:51:02.662 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #346
21:51:02.663 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:520 which is executed by 6 tests
21:51:02.664 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:520
21:51:02.665 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #347
21:51:02.665 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:519 which is executed by 6 tests
21:51:02.666 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:519
21:51:02.667 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #348
21:51:02.668 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:347 which is executed by 6 tests
21:51:02.668 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:347
21:51:02.669 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #349
21:51:02.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:268 which is executed by 6 tests
21:51:02.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:268
21:51:02.671 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #350
21:51:02.672 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:178 which is executed by 6 tests
21:51:02.673 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder:178
21:51:02.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #351
21:51:02.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:200 which is executed by 6 tests
21:51:02.675 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:200
21:51:02.675 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #352
21:51:02.676 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:196 which is executed by 6 tests
21:51:02.677 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:196
21:51:02.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #353
21:51:02.679 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:194 which is executed by 6 tests
21:51:02.679 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MutableNodeState:194
21:51:02.680 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #354
21:51:02.680 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:786 which is executed by 27 tests
-424569946
21:51:04.728 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:51:12.927 [pool-266-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:12.933 [pool-266-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:12.933 [pool-266-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:786.
21:51:12.934 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #355
21:51:12.936 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:199 which is executed by 27 tests
-515562199
21:51:14.429 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #356
21:51:14.430 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:144 which is executed by 27 tests
-515562199
21:51:16.012 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #357
21:51:16.013 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:776 which is executed by 27 tests
-424569946
21:51:17.687 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #358
21:51:17.688 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:775 which is executed by 27 tests
-424569946
21:51:19.386 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #359
21:51:19.387 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:771 which is executed by 27 tests
-424569946
21:51:21.276 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:51:31.000 [pool-272-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:31.002 [pool-272-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:31.003 [pool-272-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:771.
21:51:31.003 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:51:38.510 [pool-278-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:38.511 [pool-278-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): nt:base based rule cannot have a PropertyDefinition with nullCheckEnabled, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:38.512 [pool-278-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:771.
21:51:38.512 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #360
21:51:38.513 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:767 which is executed by 27 tests
-424569946
21:51:40.514 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:51:50.472 [pool-284-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:50.476 [pool-284-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:50.477 [pool-284-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:767.
21:51:50.477 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:51:58.646 [pool-290-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:58.648 [pool-290-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:51:58.649 [pool-290-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:767.
21:51:58.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #361
21:51:58.651 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:761 which is executed by 27 tests
-424569946
21:52:01.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:52:12.001 [pool-296-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:12.003 [pool-296-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:12.005 [pool-296-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:761.
21:52:12.006 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:52:21.161 [pool-302-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:21.163 [pool-302-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:21.164 [pool-302-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:761.
21:52:21.165 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #362
21:52:21.166 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:721 which is executed by 7 tests
21:52:21.166 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:721
21:52:21.167 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #363
21:52:21.167 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:720 which is executed by 7 tests
21:52:21.168 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:720
21:52:21.168 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #364
21:52:21.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:434 which is executed by 7 tests
21:52:21.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:434
21:52:21.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #365
21:52:21.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:432 which is executed by 7 tests
21:52:21.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:432
21:52:21.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #366
21:52:21.172 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:750 which is executed by 7 tests
-424569946
21:52:22.935 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:52:31.808 [pool-308-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:31.811 [pool-308-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:31.812 [pool-308-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:750.
21:52:31.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #367
21:52:31.814 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:654 which is executed by 7 tests
-424569946
21:52:34.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #368
21:52:34.679 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:651 which is executed by 7 tests
-424569946
21:52:36.686 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:52:46.455 [pool-314-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:46.457 [pool-314-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:46.458 [pool-314-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:651.
21:52:46.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:52:57.699 [pool-320-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:57.702 [pool-320-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:52:57.703 [pool-320-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:651.
21:52:57.704 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #369
21:52:57.706 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:650 which is executed by 7 tests
-424569946
21:53:01.555 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #370
21:53:01.557 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:233 which is executed by 28 tests
-515562199
21:53:03.888 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #371
21:53:03.889 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:225 which is executed by 28 tests
-515562199
21:53:08.186 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:53:19.455 [pool-326-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:19.457 [pool-326-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:19.458 [pool-326-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:225.
21:53:19.459 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:53:27.337 [pool-332-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:27.337 [pool-332-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:27.342 [pool-332-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:225.
21:53:27.343 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #372
21:53:27.344 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:224 which is executed by 28 tests
-515562199
21:53:29.483 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #373
21:53:29.485 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:220 which is executed by 28 tests
-515562199
21:53:31.430 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #374
21:53:31.430 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:219 which is executed by 28 tests
-515562199
21:53:35.346 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #375
21:53:35.347 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:214 which is executed by 28 tests
-515562199
21:53:39.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #376
21:53:39.747 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:202 which is executed by 28 tests
-515562199
21:53:42.708 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:53:50.960 [pool-338-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:50.961 [pool-338-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:50.962 [pool-338-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:202.
21:53:50.962 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:53:58.464 [pool-344-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:58.467 [pool-344-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:53:58.468 [pool-344-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:202.
21:53:58.469 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #377
21:53:58.471 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:195 which is executed by 28 tests
-515562199
21:54:03.685 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:54:11.925 [pool-350-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:11.926 [pool-350-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:11.927 [pool-350-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:195.
21:54:11.928 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:54:27.204 [pool-356-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:27.206 [pool-356-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): nullCheckEnabled can be set to true for property definition using regular expression, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): nullCheckEnabled can be set to true for property definition using regular expression]
21:54:27.207 [pool-356-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:195.
21:54:27.208 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #378
21:54:27.209 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition:189 which is executed by 28 tests
-515562199
21:54:30.747 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #379
21:54:30.748 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$NamePattern:901 which is executed by 7 tests
-424569946
21:54:32.622 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #380
21:54:32.622 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:275 which is executed by 28 tests
21:54:32.623 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:275
21:54:32.624 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #381
21:54:32.625 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:274 which is executed by 28 tests
21:54:32.626 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:274
21:54:32.627 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #382
21:54:32.627 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:272 which is executed by 28 tests
21:54:32.628 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:272
21:54:32.629 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #383
21:54:32.630 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:30 which is executed by 63 tests
21:54:32.630 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:30
21:54:32.631 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #384
21:54:32.631 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:61 which is executed by 28 tests
21:54:32.632 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:61
21:54:32.632 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #385
21:54:32.633 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:51 which is executed by 28 tests
21:54:32.634 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:51
21:54:32.634 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #386
21:54:32.635 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:46 which is executed by 28 tests
21:54:32.636 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.BooleanPropertyState:46
21:54:32.636 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #387
21:54:32.637 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:381 which is executed by 28 tests
21:54:32.637 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:381
21:54:32.638 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #388
21:54:32.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:379 which is executed by 28 tests
21:54:32.639 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:379
21:54:32.640 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #389
21:54:32.641 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:158 which is executed by 7 tests
21:54:32.641 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:158
21:54:32.642 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #390
21:54:32.643 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:127 which is executed by 28 tests
21:54:32.643 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:127
21:54:32.644 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #391
21:54:32.644 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:126 which is executed by 28 tests
21:54:32.645 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:126
21:54:32.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #392
21:54:32.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:125 which is executed by 28 tests
21:54:32.647 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:125
21:54:32.647 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #393
21:54:32.648 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:124 which is executed by 28 tests
21:54:32.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:124
21:54:32.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #394
21:54:32.650 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:123 which is executed by 28 tests
21:54:32.651 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:123
21:54:32.651 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #395
21:54:32.652 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:118 which is executed by 28 tests
21:54:32.652 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:118
21:54:32.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #396
21:54:32.653 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:116 which is executed by 28 tests
21:54:32.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:116
21:54:32.654 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #397
21:54:32.655 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:100 which is executed by 28 tests
21:54:32.656 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:100
21:54:32.656 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #398
21:54:32.657 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:56 which is executed by 28 tests
21:54:32.657 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.commons.PathUtils:56
21:54:32.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #399
21:54:32.658 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:760 which is executed by 28 tests
-424569946
21:54:34.495 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #400
21:54:34.496 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:759 which is executed by 28 tests
-424569946
21:54:37.543 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:54:46.605 [pool-362-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:46.606 [pool-362-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:46.607 [pool-362-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:759.
21:54:46.607 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:54:56.106 [pool-368-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:56.109 [pool-368-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:54:56.110 [pool-368-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:759.
21:54:56.111 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #401
21:54:56.112 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:758 which is executed by 28 tests
-424569946
21:54:59.695 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #402
21:54:59.697 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:757 which is executed by 28 tests
-424569946
21:55:04.038 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #403
21:55:04.039 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:756 which is executed by 28 tests
-424569946
21:55:08.348 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:55:19.391 [pool-374-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:55:19.393 [pool-374-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:55:19.395 [pool-374-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:756.
21:55:19.396 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #404
21:55:19.397 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:755 which is executed by 28 tests
-424569946
21:55:23.677 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #405
21:55:23.678 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:749 which is executed by 28 tests
-424569946
21:55:27.278 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:55:38.899 [pool-380-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:55:38.900 [pool-380-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:55:38.901 [pool-380-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:749.
21:55:38.901 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:55:48.295 [pool-386-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:55:48.296 [pool-386-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:55:48.297 [pool-386-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:749.
21:55:48.298 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #406
21:55:48.299 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:707 which is executed by 7 tests
-424569946
21:55:52.115 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:56:03.269 [pool-392-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:03.271 [pool-392-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:03.271 [pool-392-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:707.
21:56:03.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #407
21:56:03.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1256 which is executed by 29 tests
-424569946
21:56:05.289 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:56:17.162 [pool-398-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:17.163 [pool-398-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:17.164 [pool-398-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1256.
21:56:17.165 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:56:28.538 [pool-404-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:28.540 [pool-404-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:28.541 [pool-404-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1256.
21:56:28.542 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #408
21:56:28.543 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1250 which is executed by 29 tests
-424569946
21:56:31.008 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:56:41.454 [pool-410-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:41.457 [pool-410-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:41.457 [pool-410-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1250.
21:56:41.458 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:56:51.120 [pool-416-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:51.122 [pool-416-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:56:51.123 [pool-416-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1250.
21:56:51.127 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #409
21:56:51.134 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1247 which is executed by 29 tests
-424569946
21:56:53.860 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #410
21:56:53.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1241 which is executed by 29 tests
-424569946
21:56:58.282 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #411
21:56:58.283 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1240 which is executed by 29 tests
-424569946
21:57:03.781 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #412
21:57:03.782 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1236 which is executed by 29 tests
-424569946
21:57:08.027 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:57:21.469 [pool-422-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:57:21.472 [pool-422-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:57:21.473 [pool-422-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1236.
21:57:21.474 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:57:31.671 [pool-428-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:57:31.674 [pool-428-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:57:31.675 [pool-428-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1236.
21:57:31.676 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #413
21:57:31.677 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1225 which is executed by 29 tests
-424569946
21:57:34.453 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #414
21:57:34.454 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1224 which is executed by 29 tests
-424569946
21:57:37.482 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #415
21:57:37.483 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1213 which is executed by 29 tests
-424569946
21:57:40.828 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:57:53.157 [pool-434-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:57:53.159 [pool-434-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:57:53.160 [pool-434-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1213.
21:57:53.161 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #416
21:57:53.165 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:383 which is executed by 29 tests
-424569946
21:57:56.089 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #417
21:57:56.090 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:293 which is executed by 29 tests
21:57:56.091 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:293
21:57:56.092 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #418
21:57:56.093 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:292 which is executed by 29 tests
21:57:56.094 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:292
21:57:56.095 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #419
21:57:56.097 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:291 which is executed by 29 tests
21:57:56.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:291
21:57:56.098 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #420
21:57:56.099 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:287 which is executed by 29 tests
21:57:56.100 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:287
21:57:56.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #421
21:57:56.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:286 which is executed by 29 tests
21:57:56.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:286
21:57:56.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #422
21:57:56.104 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.analysis.Analyzer:239 which is executed by 29 tests
21:57:56.105 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.analysis.Analyzer:239
21:57:56.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #423
21:57:56.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion:64 which is executed by 29 tests
-1103867568
21:57:58.401 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #424
21:57:58.403 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeState:84 which is executed by 29 tests
21:57:58.404 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MemoryNodeState:84
21:57:58.405 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #425
21:57:58.406 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1186 which is executed by 30 tests
-424569946
21:58:01.264 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:58:15.794 [pool-440-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:58:15.796 [pool-440-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:58:15.797 [pool-440-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1186.
21:58:15.798 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:58:30.951 [pool-446-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:58:30.955 [pool-446-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:58:30.957 [pool-446-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1186.
21:58:30.958 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #426
21:58:30.960 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1185 which is executed by 30 tests
-424569946
21:58:37.791 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:58:50.622 [pool-452-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:58:50.623 [pool-452-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:58:50.624 [pool-452-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1185.
21:58:50.625 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #427
21:58:50.626 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1086 which is executed by 30 tests
-424569946
21:58:52.939 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:59:05.735 [pool-458-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:05.736 [pool-458-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:05.737 [pool-458-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1086.
21:59:05.738 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #428
21:59:05.739 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1083 which is executed by 30 tests
-424569946
21:59:08.517 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:59:17.790 [pool-464-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:17.791 [pool-464-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:17.792 [pool-464-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1083.
21:59:17.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
21:59:31.729 [pool-470-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:31.731 [pool-470-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:31.732 [pool-470-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1083.
21:59:31.733 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #429
21:59:31.734 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1077 which is executed by 30 tests
-424569946
21:59:34.273 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #430
21:59:34.274 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1074 which is executed by 30 tests
-424569946
21:59:37.033 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
21:59:48.948 [pool-476-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:48.949 [pool-476-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
21:59:48.950 [pool-476-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1074.
21:59:48.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:00:01.471 [pool-482-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:00:01.473 [pool-482-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:00:01.473 [pool-482-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1074.
22:00:01.476 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #431
22:00:01.477 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1072 which is executed by 30 tests
-424569946
22:00:08.912 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:00:23.102 [pool-488-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:00:23.104 [pool-488-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:00:23.105 [pool-488-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1072.
22:00:23.106 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:00:37.476 [pool-494-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:00:37.479 [pool-494-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): A SPI class of type org.apache.lucene.codecs.Codec with name 'null' does not exist. You need to add the corresponding JAR file supporting this SPI to your classpath.The current classpath supports the following names: [Lucene40, Lucene41, Lucene42, Lucene45, Lucene46, oakCodec, Lucene3x], propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): A SPI class of type org.apache.lucene.codecs.Codec with name 'null' does not exist. You need to add the corresponding JAR file supporting this SPI to your classpath.The current classpath supports the following names: [Lucene40, Lucene41, Lucene42, Lucene45, Lucene46, oakCodec, Lucene3x]]
22:00:37.483 [pool-494-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1072.
22:00:37.484 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #432
22:00:37.484 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1071 which is executed by 30 tests
-424569946
22:00:42.270 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #433
22:00:42.272 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1070 which is executed by 30 tests
-424569946
22:00:46.777 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #434
22:00:46.779 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1066 which is executed by 30 tests
-424569946
22:00:50.838 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #435
22:00:50.841 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1060 which is executed by 30 tests
-424569946
22:00:54.468 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:01:05.063 [pool-500-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:01:05.065 [pool-500-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:01:05.066 [pool-500-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1060.
22:01:05.067 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #436
22:01:05.068 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1059 which is executed by 30 tests
-424569946
22:01:09.646 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:01:21.298 [pool-506-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:01:21.300 [pool-506-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:01:21.300 [pool-506-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1059.
22:01:21.301 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:01:48.933 [pool-512-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:01:48.937 [pool-512-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:01:48.937 [pool-512-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1059.
22:01:48.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #437
22:01:48.940 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1057 which is executed by 30 tests
-424569946
22:01:54.336 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #438
22:01:54.337 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:556 which is executed by 30 tests
-424569946
22:01:58.101 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #439
22:01:58.102 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:555 which is executed by 30 tests
-424569946
22:02:01.481 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #440
22:02:01.481 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:551 which is executed by 30 tests
-424569946
22:02:05.211 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #441
22:02:05.212 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:549 which is executed by 30 tests
-424569946
22:02:08.574 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #442
22:02:08.574 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:548 which is executed by 30 tests
-424569946
22:02:12.035 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:02:26.949 [pool-518-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:02:26.951 [pool-518-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:02:26.953 [pool-518-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:548.
22:02:26.954 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #443
22:02:26.955 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:547 which is executed by 30 tests
-424569946
22:02:29.346 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:02:43.157 [pool-524-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:02:43.158 [pool-524-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:02:43.159 [pool-524-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:547.
22:02:43.161 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #444
22:02:43.161 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:545 which is executed by 30 tests
-424569946
22:02:45.806 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #445
22:02:45.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:544 which is executed by 30 tests
-424569946
22:02:49.521 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #446
22:02:49.522 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:542 which is executed by 30 tests
-424569946
22:02:51.649 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:03:03.363 [pool-530-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:03.365 [pool-530-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:03.366 [pool-530-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:542.
22:03:03.369 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #447
22:03:03.371 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:541 which is executed by 30 tests
-424569946
22:03:06.375 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:03:15.192 [pool-536-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:15.194 [pool-536-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:15.195 [pool-536-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:541.
22:03:15.196 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #448
22:03:15.199 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:539 which is executed by 30 tests
-424569946
22:03:19.273 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:03:28.099 [pool-542-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:28.101 [pool-542-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:28.102 [pool-542-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:539.
22:03:28.103 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #449
22:03:28.112 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:538 which is executed by 30 tests
-424569946
22:03:31.636 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:03:45.803 [pool-548-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:45.805 [pool-548-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:45.805 [pool-548-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:538.
22:03:45.806 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #450
22:03:45.807 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:537 which is executed by 30 tests
-424569946
22:03:49.796 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:03:59.968 [pool-554-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:59.969 [pool-554-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:03:59.970 [pool-554-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:537.
22:03:59.971 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:10.765 [pool-560-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:10.766 [pool-560-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:10.766 [pool-560-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:537.
22:04:10.767 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #451
22:04:10.767 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:536 which is executed by 30 tests
-424569946
22:04:12.375 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #452
22:04:12.376 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:535 which is executed by 30 tests
-424569946
22:04:15.701 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:27.543 [pool-566-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:27.544 [pool-566-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:27.545 [pool-566-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:535.
22:04:27.545 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:04:38.948 [pool-572-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:38.949 [pool-572-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:38.950 [pool-572-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:535.
22:04:38.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #453
22:04:38.951 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:534 which is executed by 30 tests
-424569946
22:04:41.753 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:04:57.809 [pool-578-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:57.811 [pool-578-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:04:57.812 [pool-578-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:534.
22:04:57.813 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #454
22:04:57.814 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:528 which is executed by 30 tests
-424569946
22:05:04.522 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:05:17.506 [pool-584-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:05:17.507 [pool-584-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:05:17.508 [pool-584-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:528.
22:05:17.509 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:05:30.739 [pool-590-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:05:30.741 [pool-590-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:05:30.744 [pool-590-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:528.
22:05:30.744 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #455
22:05:30.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:527 which is executed by 30 tests
-424569946
22:05:34.219 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #456
22:05:34.220 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:525 which is executed by 30 tests
-424569946
22:05:37.742 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:05:49.811 [pool-596-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:05:49.813 [pool-596-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:05:49.814 [pool-596-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:525.
22:05:49.815 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #457
22:05:49.816 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:522 which is executed by 30 tests
-424569946
22:05:54.746 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:06:07.466 [pool-602-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:07.470 [pool-602-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:07.471 [pool-602-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:522.
22:06:07.472 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #458
22:06:07.473 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:449 which is executed by 30 tests
-424569946
22:06:12.120 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:06:28.122 [pool-608-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:28.126 [pool-608-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:28.133 [pool-608-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:449.
22:06:28.136 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:06:41.402 [pool-614-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:41.404 [pool-614-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:41.405 [pool-614-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:449.
22:06:41.406 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #459
22:06:41.407 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:444 which is executed by 30 tests
-424569946
22:06:43.839 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:06:55.057 [pool-620-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:55.058 [pool-620-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:06:55.059 [pool-620-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:444.
22:06:55.060 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:07:06.793 [pool-626-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:06.795 [pool-626-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:06.796 [pool-626-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:444.
22:07:06.797 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #460
22:07:06.798 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:443 which is executed by 30 tests
-424569946
22:07:09.150 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #461
22:07:09.152 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:442 which is executed by 30 tests
-424569946
22:07:11.184 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #462
22:07:11.186 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:393 which is executed by 30 tests
-424569946
22:07:13.055 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #463
22:07:13.056 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:389 which is executed by 30 tests
-424569946
22:07:14.787 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:07:24.276 [pool-632-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:24.277 [pool-632-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:24.278 [pool-632-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:389.
22:07:24.278 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #464
22:07:24.279 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:388 which is executed by 30 tests
-424569946
22:07:27.220 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #465
22:07:27.221 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:387 which is executed by 30 tests
-424569946
22:07:29.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #466
22:07:29.173 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:380 which is executed by 30 tests
-424569946
22:07:31.013 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:07:43.667 [pool-638-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:43.670 [pool-638-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:43.670 [pool-638-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:380.
22:07:43.672 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:07:56.965 [pool-644-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:56.968 [pool-644-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:07:56.969 [pool-644-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:380.
22:07:56.969 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #467
22:07:56.970 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:370 which is executed by 30 tests
-424569946
22:07:59.670 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:08:07.208 [pool-650-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
IndexDefinition.java:290: error: variable result might not have been initialized
            return result;
                   ^
IndexDefinition.java:292: error: variable result might not have been initialized
        return new org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer(result, maxFieldLength);
                                                                                    ^
22:08:07.432 [pool-650-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class IndexDefinition implements org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.AggregateMapper {
    private static final java.lang.String OAK_CHILD_ORDER = ":childOrder";

    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.class);

    static final int DEFAULT_BLOB_SIZE = (1024 * 1024) - 1024;

    static final long DEFAULT_ENTRY_COUNT = 1000;

    public static final int DEFAULT_MAX_FIELD_LENGTH = 10000;

    static final int DEFAULT_MAX_EXTRACT_LENGTH = -10;

    static final java.lang.String INDEX_VERSION = ":version";

    private static java.lang.String TYPES_ALLOW_ALL_NAME = "all";

    static final int TYPES_ALLOW_NONE = javax.jcr.PropertyType.UNDEFINED;

    static final int TYPES_ALLOW_ALL = -1;

    static final org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry NATIVE_SORT_ORDER = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry(org.apache.jackrabbit.JcrConstants.JCR_SCORE, org.apache.jackrabbit.oak.api.Type.UNDEFINED, org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry.Order.DESCENDING);

    private final boolean fullTextEnabled;

    private final org.apache.jackrabbit.oak.spi.state.NodeState definition;

    private final org.apache.jackrabbit.oak.spi.state.NodeState root;

    private final java.lang.String funcName;

    private final int blobSize;

    private final org.apache.lucene.codecs.Codec codec;

    private final long entryCount;

    private final boolean entryCountDefined;

    private final double costPerEntry;

    private final double costPerExecution;

    private final java.util.Map<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> indexRules;

    private final java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> definedRules;

    private final java.lang.String indexName;

    private final boolean testMode;

    private final boolean evaluatePathRestrictions;

    private final org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion version;

    private final java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate> aggregates;

    private final boolean indexesAllTypes;

    private final org.apache.lucene.analysis.Analyzer analyzer;

    private final java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> analyzers;

    private final boolean hasCustomTikaConfig;

    private final int maxFieldLength;

    private final int maxExtractLength;

    private final int suggesterUpdateFrequencyMinutes;

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        this(root, defn, null);
    }

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeBuilder defn) {
        this(root, defn.getBaseState(), defn, null);
    }

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeState defn, @javax.annotation.Nullable
    java.lang.String indexPath) {
        this(root, defn, null, indexPath);
    }

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeState defn, @javax.annotation.Nullable
    org.apache.jackrabbit.oak.spi.state.NodeBuilder defnb, @javax.annotation.Nullable
    java.lang.String indexPath) {
        this.root = root;
        this.version = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexFormatVersion(defn, defnb);
        this.definition = defn;
        this.indexName = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexName(defn, indexPath);
        this.blobSize = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.BLOB_SIZE, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_BLOB_SIZE);
        this.testMode = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TEST_MODE, false);
        this.aggregates = collectAggregates(defn);
        org.apache.jackrabbit.oak.spi.state.NodeState rulesState = defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_RULES);
        if (!rulesState.exists()) {
            rulesState = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.createIndexRules(defn).getNodeState();
        }
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> definedIndexRules = com.google.common.collect.Lists.newArrayList();
        this.indexRules = collectIndexRules(rulesState, definedIndexRules);
        this.definedRules = com.google.common.collect.ImmutableList.copyOf(definedIndexRules);
        this.fullTextEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasFulltextEnabledIndexRule(definedIndexRules);
        this.evaluatePathRestrictions = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EVALUATE_PATH_RESTRICTION, false);
        java.lang.String functionName = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FUNC_NAME, null);
        if (fullTextEnabled && (functionName == null)) {
            functionName = "lucene";
        }
        this.funcName = (functionName != null) ? "native*" + functionName : null;
        this.codec = createCodec();
        if (defn.hasProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ENTRY_COUNT_PROPERTY_NAME)) {
            this.entryCountDefined = true;
            this.entryCount = defn.getProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ENTRY_COUNT_PROPERTY_NAME).getValue(org.apache.jackrabbit.oak.api.Type.LONG);
        } else {
            this.entryCountDefined = false;
            this.entryCount = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_ENTRY_COUNT;
        }
        this.maxFieldLength = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.MAX_FIELD_LENGTH, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_FIELD_LENGTH);
        this.costPerEntry = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COST_PER_ENTRY, 1.0);
        this.costPerExecution = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COST_PER_EXECUTION, 1.0);
        this.indexesAllTypes = areAllTypesIndexed();
        this.analyzers = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.collectAnalyzers(defn);
        this.analyzer = createAnalyzer();
        this.hasCustomTikaConfig = getTikaConfigNode().exists();
        this.maxExtractLength = determineMaxExtractLength();
        this.suggesterUpdateFrequencyMinutes = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.SUGGEST_UPDATE_FREQUENCY_MINUTES, 60);
    }

    public boolean isFullTextEnabled() {
        return fullTextEnabled;
    }

    public java.lang.String getFunctionName() {
        return funcName;
    }

    public boolean hasFunctionDefined() {
        return funcName != null;
    }

    public int getBlobSize() {
        return blobSize;
    }

    public org.apache.lucene.codecs.Codec getCodec() {
        return codec;
    }

    public long getReindexCount() {
        if (definition.hasProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_COUNT)) {
            return definition.getProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_COUNT).getValue(org.apache.jackrabbit.oak.api.Type.LONG);
        }
        return 0;
    }

    public long getEntryCount() {
        return entryCount;
    }

    public int getSuggesterUpdateFrequencyMinutes() {
        return suggesterUpdateFrequencyMinutes;
    }

    public boolean isEntryCountDefined() {
        return entryCountDefined;
    }

    public double getCostPerEntry() {
        return costPerEntry;
    }

    public double getCostPerExecution() {
        return costPerExecution;
    }

    public long getFulltextEntryCount(long numOfDocs) {
        if (isEntryCountDefined()) {
            return java.lang.Math.min(getEntryCount(), numOfDocs);
        }
        return numOfDocs;
    }

    public org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion getVersion() {
        return version;
    }

    public boolean isOfOldFormat() {
        return !org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasIndexingRules(definition);
    }

    public boolean isTestMode() {
        return testMode;
    }

    public boolean evaluatePathRestrictions() {
        return evaluatePathRestrictions;
    }

    public boolean indexesAllTypes() {
        return indexesAllTypes;
    }

    public org.apache.lucene.analysis.Analyzer getAnalyzer() {
        return analyzer;
    }

    public boolean hasCustomTikaConfig() {
        return hasCustomTikaConfig;
    }

    public java.io.InputStream getTikaConfig() {
        return org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getBlob(getTikaConfigNode(), org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA_CONFIG).getNewStream();
    }

    public java.lang.String getIndexName() {
        return indexName;
    }

    public int getMaxExtractLength() {
        return maxExtractLength;
    }

    @java.lang.Override
    public java.lang.String toString() {
        return "Lucene Index : " + indexName;
    }

    private org.apache.lucene.analysis.Analyzer createAnalyzer() {
        org.apache.lucene.analysis.Analyzer result;
        org.apache.lucene.analysis.Analyzer defaultAnalyzer = org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANALYZER;
        if (analyzers.containsKey(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANL_DEFAULT)) {
            defaultAnalyzer = analyzers.get(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANL_DEFAULT);
        }
        if (!evaluatePathRestrictions()) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(108).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definedRules",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definedRules);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.suggesterUpdateFrequencyMinutes",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.suggesterUpdateFrequencyMinutes);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_BLOB_SIZE",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_BLOB_SIZE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxFieldLength",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxFieldLength);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NATIVE_SORT_ORDER",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NATIVE_SORT_ORDER);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexName",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexName);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexesAllTypes",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexesAllTypes);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.hasCustomTikaConfig",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.hasCustomTikaConfig);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("defaultAnalyzer",defaultAnalyzer);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.evaluatePathRestrictions",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.evaluatePathRestrictions);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzer",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzer);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definition",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definition);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.version",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.version);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCount",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCount);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCountDefined",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCountDefined);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.root",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.root);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexRules",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexRules);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.codec",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.codec);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.blobSize",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.blobSize);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzers",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzers);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerEntry",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerEntry);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerExecution",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerExecution);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxExtractLength",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxExtractLength);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_EXTRACT_LENGTH",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_EXTRACT_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_ENTRY_COUNT",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_ENTRY_COUNT);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_NONE",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_NONE);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.fullTextEnabled",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.fullTextEnabled);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.testMode",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.testMode);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.funcName",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.funcName);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.aggregates",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.aggregates);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_FIELD_LENGTH",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_FIELD_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(108).collectionEnds();
            }
            if (runtimeAngelicValue)
                result = defaultAnalyzer;

        } else {
            java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> analyzerMap = com.google.common.collect.ImmutableMap.<java.lang.String, org.apache.lucene.analysis.Analyzer>builder().put(org.apache.jackrabbit.oak.plugins.index.lucene.FieldNames.ANCESTORS, new org.apache.jackrabbit.oak.plugins.index.lucene.util.TokenizerChain(new org.apache.lucene.analysis.path.PathHierarchyTokenizerFactory(java.util.Collections.<java.lang.String, java.lang.String>emptyMap()))).build();
            result = new org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper(defaultAnalyzer, analyzerMap);
        }
        if (maxFieldLength < 0) {
            return result;
        }
        return new org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer(result, maxFieldLength);
    }

    private static java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> collectAnalyzers(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> analyzerMap = com.google.common.collect.Maps.newHashMap();
        org.apache.jackrabbit.oak.plugins.index.lucene.NodeStateAnalyzerFactory factory = new org.apache.jackrabbit.oak.plugins.index.lucene.NodeStateAnalyzerFactory(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.VERSION);
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry cne : defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANALYZERS).getChildNodeEntries()) {
            org.apache.lucene.analysis.Analyzer a = factory.createInstance(cne.getNodeState());
            analyzerMap.put(cne.getName(), a);
        }
        return com.google.common.collect.ImmutableMap.copyOf(analyzerMap);
    }

    @javax.annotation.CheckForNull
    public org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate getAggregate(java.lang.String nodeType) {
        org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate agg = aggregates.get(nodeType);
        return agg != null ? agg : null;
    }

    private java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate> collectAggregates(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate> aggregateMap = com.google.common.collect.Maps.newHashMap();
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry cne : defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGGREGATES).getChildNodeEntries()) {
            java.lang.String nodeType = cne.getName();
            int recursionLimit = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(cne.getNodeState(), org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_RECURSIVE_LIMIT, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.RECURSIVE_AGGREGATION_LIMIT_DEFAULT);
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> includes = com.google.common.collect.Lists.newArrayList();
            for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry include : cne.getNodeState().getChildNodeEntries()) {
                org.apache.jackrabbit.oak.spi.state.NodeState is = include.getNodeState();
                java.lang.String primaryType = is.getString(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_PRIMARY_TYPE);
                java.lang.String path = is.getString(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_PATH);
                boolean relativeNode = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(is, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_RELATIVE_NODE, false);
                if (path == null) {
                    org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("Aggregate pattern in {} does not have required property [{}]. {} aggregate rule would " + "be ignored", this, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_PATH, include.getName());
                    continue;
                }
                includes.add(new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.NodeInclude(this, primaryType, path, relativeNode));
            }
            aggregateMap.put(nodeType, new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate(nodeType, includes, recursionLimit));
        }
        return com.google.common.collect.ImmutableMap.copyOf(aggregateMap);
    }

    public java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> getDefinedRules() {
        return definedRules;
    }

    @javax.annotation.CheckForNull
    public org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule getApplicableIndexingRule(java.lang.String primaryNodeType) {
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> rules = null;
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> r = indexRules.get(primaryNodeType);
        if (r != null) {
            rules = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
            rules.addAll(r);
        }
        if (rules != null) {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule : rules) {
                if (rule.appliesTo(primaryNodeType)) {
                    return rule;
                }
            }
        }
        return null;
    }

    @javax.annotation.CheckForNull
    public org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule getApplicableIndexingRule(org.apache.jackrabbit.oak.api.Tree state) {
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> rules = null;
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> r = indexRules.get(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getPrimaryTypeName(state));
        if (r != null) {
            rules = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
            rules.addAll(r);
        }
        for (java.lang.String name : org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMixinTypeNames(state)) {
            r = indexRules.get(name);
            if (r != null) {
                if (rules == null) {
                    rules = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
                }
                rules.addAll(r);
            }
        }
        if (rules != null) {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule : rules) {
                if (rule.appliesTo(state)) {
                    return rule;
                }
            }
        }
        return null;
    }

    private java.util.Map<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> collectIndexRules(org.apache.jackrabbit.oak.spi.state.NodeState indexRules, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> definedIndexRules) {
        if (!indexRules.exists()) {
            return java.util.Collections.emptyMap();
        }
        if (!org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasOrderableChildren(indexRules)) {
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("IndexRule node does not have orderable children in [{}]", this);
        }
        java.util.Map<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> nt2rules = com.google.common.collect.Maps.newHashMap();
        org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager ntReg = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.createNodeTypeManager(org.apache.jackrabbit.oak.plugins.tree.TreeFactory.createReadOnlyTree(root));
        org.apache.jackrabbit.oak.api.Tree ruleTree = org.apache.jackrabbit.oak.plugins.tree.TreeFactory.createReadOnlyTree(indexRules);
        final java.util.List<java.lang.String> allNames = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getAllNodeTypes(ntReg);
        for (org.apache.jackrabbit.oak.api.Tree ruleEntry : ruleTree.getChildren()) {
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule = new org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule(ruleEntry.getName(), indexRules.getChildNode(ruleEntry.getName()));
            definedIndexRules.add(rule);
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.trace("Found rule '{}' for NodeType '{}'", rule, rule.getNodeTypeName());
            java.util.List<java.lang.String> ntNames = allNames;
            if (!rule.inherited) {
                ntNames = java.util.Collections.singletonList(rule.getNodeTypeName());
            }
            for (java.lang.String ntName : ntNames) {
                if (ntReg.isNodeType(ntName, rule.getNodeTypeName())) {
                    java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> perNtConfig = nt2rules.get(ntName);
                    if (perNtConfig == null) {
                        perNtConfig = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
                        nt2rules.put(ntName, perNtConfig);
                    }
                    org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.trace("Registering rule '{}' for name '{}'", rule, ntName);
                    perNtConfig.add(new org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule(rule, ntName));
                }
            }
        }
        for (java.util.Map.Entry<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> e : nt2rules.entrySet()) {
            e.setValue(com.google.common.collect.ImmutableList.copyOf(e.getValue()));
        }
        return com.google.common.collect.ImmutableMap.copyOf(nt2rules);
    }

    private boolean areAllTypesIndexed() {
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule ntBaseRule = getApplicableIndexingRule(org.apache.jackrabbit.JcrConstants.NT_BASE);
        return ntBaseRule != null;
    }

    public class IndexingRule {
        private final java.lang.String baseNodeType;

        private final java.lang.String nodeTypeName;

        private final java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> propConfigs;

        private final java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern> namePatterns;

        private final java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> nullCheckEnabledProperties;

        private final boolean indexesAllNodesOfMatchingType;

        final float boost;

        final boolean inherited;

        final int propertyTypes;

        final boolean fulltextEnabled;

        final boolean propertyIndexEnabled;

        final org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate aggregate;

        final org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate propAggregate;

        IndexingRule(java.lang.String nodeTypeName, org.apache.jackrabbit.oak.spi.state.NodeState config) {
            this.nodeTypeName = nodeTypeName;
            this.baseNodeType = nodeTypeName;
            this.boost = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(config, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FIELD_BOOST, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition.DEFAULT_BOOST);
            this.inherited = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(config, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.RULE_INHERITED, true);
            this.propertyTypes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getSupportedTypes(config, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_TYPES, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL);
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern> namePatterns = com.google.common.collect.Lists.newArrayList();
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> nonExistentProperties = com.google.common.collect.Lists.newArrayList();
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> propIncludes = com.google.common.collect.Lists.newArrayList();
            this.propConfigs = collectPropConfigs(config, namePatterns, propIncludes, nonExistentProperties);
            this.propAggregate = new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate(nodeTypeName, propIncludes);
            this.aggregate = combine(propAggregate, nodeTypeName);
            this.namePatterns = com.google.common.collect.ImmutableList.copyOf(namePatterns);
            this.nullCheckEnabledProperties = com.google.common.collect.ImmutableList.copyOf(nonExistentProperties);
            this.fulltextEnabled = aggregate.hasNodeAggregates() || hasAnyFullTextEnabledProperty();
            this.propertyIndexEnabled = hasAnyPropertyIndexConfigured();
            this.indexesAllNodesOfMatchingType = allMatchingNodeByTypeIndexed();
            validateRuleDefinition();
        }

        IndexingRule(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule original, java.lang.String nodeTypeName) {
            this.nodeTypeName = nodeTypeName;
            this.baseNodeType = original.getNodeTypeName();
            this.propConfigs = original.propConfigs;
            this.namePatterns = original.namePatterns;
            this.boost = original.boost;
            this.inherited = original.inherited;
            this.propertyTypes = original.propertyTypes;
            this.propertyIndexEnabled = original.propertyIndexEnabled;
            this.propAggregate = original.propAggregate;
            this.nullCheckEnabledProperties = original.nullCheckEnabledProperties;
            this.aggregate = combine(propAggregate, nodeTypeName);
            this.fulltextEnabled = aggregate.hasNodeAggregates() || original.fulltextEnabled;
            this.indexesAllNodesOfMatchingType = allMatchingNodeByTypeIndexed();
        }

        public boolean isIndexed(java.lang.String propertyName) {
            return getConfig(propertyName) != null;
        }

        public java.lang.String getNodeTypeName() {
            return nodeTypeName;
        }

        public java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> getNullCheckEnabledProperties() {
            return nullCheckEnabledProperties;
        }

        @java.lang.Override
        public java.lang.String toString() {
            java.lang.String str = "IndexRule: " + nodeTypeName;
            if (!baseNodeType.equals(nodeTypeName)) {
                str += ("(" + baseNodeType) + ")";
            }
            return str;
        }

        public boolean isAggregated(java.lang.String nodePath) {
            return aggregate.hasRelativeNodeInclude(nodePath);
        }

        public boolean appliesTo(org.apache.jackrabbit.oak.api.Tree state) {
            if (!nodeTypeName.equals(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getPrimaryTypeName(state))) {
                return false;
            }
            return true;
        }

        public boolean appliesTo(java.lang.String nodeTypeName) {
            if (!this.nodeTypeName.equals(nodeTypeName)) {
                return false;
            }
            return true;
        }

        public boolean isFulltextEnabled() {
            return fulltextEnabled;
        }

        @javax.annotation.CheckForNull
        public org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition getConfig(java.lang.String propertyName) {
            org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition config = propConfigs.get(propertyName);
            if (config != null) {
                return config;
            } else
                if (namePatterns.size() > 0) {
                    for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern np : namePatterns) {
                        if (np.matches(propertyName)) {
                            return np.getConfig();
                        }
                    }
                }

            return null;
        }

        public boolean includePropertyType(int type) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.includePropertyType(propertyTypes, type);
        }

        public org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate getAggregate() {
            return aggregate;
        }

        public boolean indexesAllNodesOfMatchingType() {
            return indexesAllNodesOfMatchingType;
        }

        public boolean isBasedOnNtBase() {
            return org.apache.jackrabbit.JcrConstants.NT_BASE.equals(baseNodeType);
        }

        private java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> collectPropConfigs(org.apache.jackrabbit.oak.spi.state.NodeState config, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern> patterns, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> propAggregate, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> nonExistentProperties) {
            java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> propDefns = com.google.common.collect.Maps.newHashMap();
            org.apache.jackrabbit.oak.spi.state.NodeState propNode = config.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
            if (!propNode.exists()) {
                return java.util.Collections.emptyMap();
            }
            if (!org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasOrderableChildren(propNode)) {
                org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("Properties node for [{}] does not have orderable " + "children in [{}]", this, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this);
            }
            org.apache.jackrabbit.oak.api.Tree propTree = org.apache.jackrabbit.oak.plugins.tree.TreeFactory.createReadOnlyTree(propNode);
            for (org.apache.jackrabbit.oak.api.Tree prop : propTree.getChildren()) {
                java.lang.String propName = prop.getName();
                org.apache.jackrabbit.oak.spi.state.NodeState propDefnNode = propNode.getChildNode(propName);
                if (propDefnNode.exists() && (!propDefns.containsKey(propName))) {
                    org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd = new org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition(this, propName, propDefnNode);
                    if (pd.isRegexp) {
                        patterns.add(new org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern(pd.name, pd));
                    } else {
                        propDefns.put(pd.name, pd);
                    }
                    if (pd.relative) {
                        propAggregate.add(new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.PropertyInclude(pd));
                    }
                    if (pd.nullCheckEnabled) {
                        nonExistentProperties.add(pd);
                    }
                }
            }
            return com.google.common.collect.ImmutableMap.copyOf(propDefns);
        }

        private boolean hasAnyFullTextEnabledProperty() {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd : propConfigs.values()) {
                if (pd.fulltextEnabled()) {
                    return true;
                }
            }
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern np : namePatterns) {
                if (np.getConfig().fulltextEnabled()) {
                    return true;
                }
            }
            return false;
        }

        private boolean hasAnyPropertyIndexConfigured() {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd : propConfigs.values()) {
                if (pd.propertyIndex) {
                    return true;
                }
            }
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern np : namePatterns) {
                if (np.getConfig().propertyIndex) {
                    return true;
                }
            }
            return false;
        }

        private boolean allMatchingNodeByTypeIndexed() {
            if (fulltextEnabled) {
                return true;
            }
            for (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd : nullCheckEnabledProperties) {
                if (!pd.relative) {
                    return true;
                }
            }
            if (getConfig(org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE) != null) {
                return true;
            }
            return false;
        }

        private org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate combine(org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate propAggregate, java.lang.String nodeTypeName) {
            org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate nodeTypeAgg = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.getAggregate(nodeTypeName);
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> includes = com.google.common.collect.Lists.newArrayList();
            includes.addAll(propAggregate.getIncludes());
            if (nodeTypeAgg != null) {
                includes.addAll(nodeTypeAgg.getIncludes());
            }
            return new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate(nodeTypeName, includes);
        }

        private void validateRuleDefinition() {
            if ((!nullCheckEnabledProperties.isEmpty()) && isBasedOnNtBase()) {
                throw new java.lang.IllegalStateException("nt:base based rule cannot have a " + "PropertyDefinition with nullCheckEnabled");
            }
        }
    }

    private static final class NamePattern {
        private final java.lang.String parentPath;

        private final java.util.regex.Pattern pattern;

        private final org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition config;

        private NamePattern(java.lang.String pattern, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition config) {
            if (org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.REGEX_ALL_PROPS.equals(pattern)) {
                this.parentPath = "";
                this.pattern = java.util.regex.Pattern.compile(pattern);
            } else {
                this.parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(pattern);
                this.pattern = java.util.regex.Pattern.compile(org.apache.jackrabbit.oak.commons.PathUtils.getName(pattern));
            }
            this.config = config;
        }

        boolean matches(java.lang.String propertyPath) {
            java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(propertyPath);
            java.lang.String propertyName = org.apache.jackrabbit.oak.commons.PathUtils.getName(propertyPath);
            if (!this.parentPath.equals(parentPath)) {
                return false;
            }
            return pattern.matcher(propertyName).matches();
        }

        org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition getConfig() {
            return config;
        }
    }

    public static org.apache.jackrabbit.oak.spi.state.NodeBuilder updateDefinition(org.apache.jackrabbit.oak.spi.state.NodeBuilder indexDefn) {
        org.apache.jackrabbit.oak.spi.state.NodeState defn = indexDefn.getBaseState();
        if (!org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasIndexingRules(defn)) {
            org.apache.jackrabbit.oak.spi.state.NodeState rulesState = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.createIndexRules(defn).getNodeState();
            indexDefn.setChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_RULES, rulesState);
            indexDefn.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexFormatVersion(defn, indexDefn).getVersion());
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.DECLARING_NODE_TYPES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_NAMES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EXCLUDE_PROPERTY_NAMES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ORDERED_PROP_NAMES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED);
            indexDefn.child(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE).remove();
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.info("Updated index definition for {}", org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexName(defn, null));
        }
        return indexDefn;
    }

    private static org.apache.jackrabbit.oak.spi.state.NodeBuilder createIndexRules(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.EMPTY_NODE.builder();
        java.util.Set<java.lang.String> declaringNodeTypes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.IndexConstants.DECLARING_NODE_TYPES);
        java.util.Set<java.lang.String> includes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_NAMES);
        java.util.Set<java.lang.String> excludes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.toLowerCase(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EXCLUDE_PROPERTY_NAMES));
        java.util.Set<java.lang.String> orderedProps = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ORDERED_PROP_NAMES);
        boolean fullTextEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED, true);
        boolean storageEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EXPERIMENTAL_STORAGE, true);
        org.apache.jackrabbit.oak.spi.state.NodeState propNodeState = defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
        if (declaringNodeTypes.isEmpty()) {
            declaringNodeTypes = java.util.Collections.singleton(org.apache.jackrabbit.JcrConstants.NT_BASE);
        }
        java.util.Set<java.lang.String> propNamesSet = com.google.common.collect.Sets.newHashSet();
        propNamesSet.addAll(includes);
        propNamesSet.addAll(excludes);
        propNamesSet.addAll(orderedProps);
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry cne : propNodeState.getChildNodeEntries()) {
            if ((!propNamesSet.contains(cne.getName())) && com.google.common.collect.Iterables.isEmpty(cne.getNodeState().getChildNodeNames())) {
                propNamesSet.add(cne.getName());
            }
        }
        java.util.List<java.lang.String> propNames = new java.util.ArrayList<java.lang.String>(propNamesSet);
        final java.lang.String includeAllProp = org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.REGEX_ALL_PROPS;
        if (fullTextEnabled && includes.isEmpty()) {
            propNames.add(includeAllProp);
        }
        for (java.lang.String typeName : declaringNodeTypes) {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder rule = builder.child(typeName);
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(rule);
            java.util.List<java.lang.String> propNodeNames = com.google.common.collect.Lists.newArrayListWithCapacity(propNamesSet.size());
            org.apache.jackrabbit.oak.spi.state.NodeBuilder propNodes = rule.child(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
            int i = 0;
            for (java.lang.String propName : propNames) {
                java.lang.String propNodeName = propName;
                if (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition.isRelativeProperty(propName) || propName.equals(includeAllProp)) {
                    propNodeName = "prop" + (i++);
                }
                propNodeNames.add(propNodeName);
                org.apache.jackrabbit.oak.spi.state.NodeBuilder prop = propNodes.child(propNodeName);
                org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(prop);
                prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NAME, propName);
                if (excludes.contains(propName)) {
                    prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_INDEX, false);
                } else
                    if (fullTextEnabled) {
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_ANALYZED, true);
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE_SCOPE_INDEX, true);
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_USE_IN_EXCERPT, storageEnabled);
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_PROPERTY_INDEX, false);
                    } else {
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_PROPERTY_INDEX, true);
                        if (orderedProps.contains(propName)) {
                            prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_ORDERED, true);
                        }
                    }

                if (propName.equals(includeAllProp)) {
                    prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_IS_REGEX, true);
                }
                org.apache.jackrabbit.oak.spi.state.NodeState propDefNode = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getPropDefnNode(defn, propName);
                if (propDefNode != null) {
                    for (org.apache.jackrabbit.oak.api.PropertyState ps : propDefNode.getProperties()) {
                        prop.setProperty(ps);
                    }
                }
            }
            org.apache.jackrabbit.oak.api.PropertyState supportedTypes = defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_TYPES);
            if (supportedTypes == null) {
                supportedTypes = org.apache.jackrabbit.oak.plugins.memory.PropertyStates.createProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_TYPES, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME);
            }
            rule.setProperty(supportedTypes);
            if (!org.apache.jackrabbit.JcrConstants.NT_BASE.equals(typeName)) {
                rule.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.RULE_INHERITED, false);
            }
            propNodes.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER, propNodeNames, org.apache.jackrabbit.oak.api.Type.NAMES);
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(propNodes);
        }
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(builder);
        builder.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER, declaringNodeTypes, org.apache.jackrabbit.oak.api.Type.NAMES);
        return builder;
    }

    private static org.apache.jackrabbit.oak.spi.state.NodeState getPropDefnNode(org.apache.jackrabbit.oak.spi.state.NodeState defn, java.lang.String propName) {
        org.apache.jackrabbit.oak.spi.state.NodeState propNode = defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
        org.apache.jackrabbit.oak.spi.state.NodeState propDefNode;
        if (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition.isRelativeProperty(propName)) {
            org.apache.jackrabbit.oak.spi.state.NodeState result = propNode;
            for (java.lang.String name : org.apache.jackrabbit.oak.commons.PathUtils.elements(propName)) {
                result = result.getChildNode(name);
            }
            propDefNode = result;
        } else {
            propDefNode = propNode.getChildNode(propName);
        }
        return propDefNode.exists() ? propDefNode : null;
    }

    private int determineMaxExtractLength() {
        int length = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(definition.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA), org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA_MAX_EXTRACT_LENGTH, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_EXTRACT_LENGTH);
        if (length < 0) {
            return (-length) * maxFieldLength;
        }
        return length;
    }

    private org.apache.jackrabbit.oak.spi.state.NodeState getTikaConfigNode() {
        return definition.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA).getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA_CONFIG);
    }

    private org.apache.lucene.codecs.Codec createCodec() {
        java.lang.String codecName = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(definition, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.CODEC_NAME, null);
        org.apache.lucene.codecs.Codec codec = null;
        if (codecName != null) {
            codec = org.apache.lucene.codecs.Codec.forName(codecName);
        } else
            if (fullTextEnabled) {
                codec = new org.apache.jackrabbit.oak.plugins.index.lucene.OakCodec();
            }

        return codec;
    }

    private static java.lang.String determineIndexName(org.apache.jackrabbit.oak.spi.state.NodeState defn, java.lang.String indexPath) {
        java.lang.String indexName = defn.getString(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NAME);
        if (indexName == null) {
            if (indexPath != null) {
                return indexPath;
            }
            return "<No 'name' property defined>";
        }
        if (indexPath != null) {
            return ((indexName + "(") + indexPath) + ")";
        }
        return indexName;
    }

    private static java.util.Set<java.lang.String> getMultiProperty(org.apache.jackrabbit.oak.spi.state.NodeState definition, java.lang.String propName) {
        org.apache.jackrabbit.oak.api.PropertyState pse = definition.getProperty(propName);
        return pse != null ? com.google.common.collect.ImmutableSet.copyOf(pse.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) : java.util.Collections.<java.lang.String>emptySet();
    }

    private static java.util.Set<java.lang.String> toLowerCase(java.util.Set<java.lang.String> values) {
        java.util.Set<java.lang.String> result = com.google.common.collect.Sets.newHashSet();
        for (java.lang.String val : values) {
            result.add(val.toLowerCase());
        }
        return com.google.common.collect.ImmutableSet.copyOf(result);
    }

    private static java.util.List<java.lang.String> getAllNodeTypes(org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager ntReg) {
        try {
            java.util.List<java.lang.String> typeNames = com.google.common.collect.Lists.newArrayList();
            javax.jcr.nodetype.NodeTypeIterator ntItr = ntReg.getAllNodeTypes();
            while (ntItr.hasNext()) {
                typeNames.add(ntItr.nextNodeType().getName());
            } 
            return typeNames;
        } catch (javax.jcr.RepositoryException e) {
            throw new java.lang.RuntimeException(e);
        }
    }

    private static org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager createNodeTypeManager(final org.apache.jackrabbit.oak.api.Tree root) {
        return new org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager() {
            @java.lang.Override
            protected org.apache.jackrabbit.oak.api.Tree getTypes() {
                return org.apache.jackrabbit.oak.util.TreeUtil.getTree(root, org.apache.jackrabbit.oak.plugins.nodetype.NodeTypeConstants.NODE_TYPES_PATH);
            }

            @javax.annotation.Nonnull
            @java.lang.Override
            protected org.apache.jackrabbit.oak.namepath.NamePathMapper getNamePathMapper() {
                return org.apache.jackrabbit.oak.namepath.NamePathMapper.DEFAULT;
            }
        };
    }

    private static java.lang.String getPrimaryTypeName(org.apache.jackrabbit.oak.api.Tree state) {
        java.lang.String primaryType = org.apache.jackrabbit.oak.util.TreeUtil.getPrimaryTypeName(state);
        return primaryType != null ? primaryType : "nt:base";
    }

    private static java.lang.Iterable<java.lang.String> getMixinTypeNames(org.apache.jackrabbit.oak.api.Tree tree) {
        org.apache.jackrabbit.oak.api.PropertyState property = tree.getProperty(org.apache.jackrabbit.JcrConstants.JCR_MIMETYPE);
        return property != null ? property.getValue(org.apache.jackrabbit.oak.api.Type.NAMES) : java.util.Collections.<java.lang.String>emptyList();
    }

    private static boolean hasOrderableChildren(org.apache.jackrabbit.oak.spi.state.NodeState state) {
        return state.hasProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER);
    }

    static int getSupportedTypes(org.apache.jackrabbit.oak.spi.state.NodeState defn, java.lang.String typePropertyName, int defaultVal) {
        org.apache.jackrabbit.oak.api.PropertyState pst = defn.getProperty(typePropertyName);
        if (pst != null) {
            int types = 0;
            for (java.lang.String inc : pst.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) {
                if (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME.equals(inc)) {
                    return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL;
                }
                try {
                    types |= 1 << javax.jcr.PropertyType.valueFromName(inc);
                } catch (java.lang.IllegalArgumentException e) {
                    org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("Unknown property type: " + inc);
                }
            }
            return types;
        }
        return defaultVal;
    }

    static boolean includePropertyType(int includedPropertyTypes, int type) {
        if (includedPropertyTypes == org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL) {
            return true;
        }
        if (includedPropertyTypes == org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_NONE) {
            return false;
        }
        return (includedPropertyTypes & (1 << type)) != 0;
    }

    private static boolean hasFulltextEnabledIndexRule(java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> rules) {
        for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule : rules) {
            if (rule.fulltextEnabled) {
                return true;
            }
        }
        return false;
    }

    private static void markAsNtUnstructured(org.apache.jackrabbit.oak.spi.state.NodeBuilder nb) {
        nb.setProperty(org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE, org.apache.jackrabbit.JcrConstants.NT_UNSTRUCTURED, org.apache.jackrabbit.oak.api.Type.NAME);
    }

    private static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineIndexFormatVersion(org.apache.jackrabbit.oak.spi.state.NodeState defn, org.apache.jackrabbit.oak.spi.state.NodeBuilder defnb) {
        if ((defnb != null) && (!defnb.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_DATA_CHILD_NAME).exists())) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defnb);
        }
        if (defn.hasProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE)) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE));
        }
        if (defn.hasProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION)) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION));
        }
        if (!defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_DATA_CHILD_NAME).exists()) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defn);
        }
        boolean fullTextEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED, true);
        return fullTextEnabled ? org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.V1 : org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.V2;
    }

    static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineVersionForFreshIndex(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED), defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE), defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION));
    }

    static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineVersionForFreshIndex(org.apache.jackrabbit.oak.spi.state.NodeBuilder defnb) {
        return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defnb.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED), defnb.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE), defnb.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION));
    }

    private static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineVersionForFreshIndex(org.apache.jackrabbit.oak.api.PropertyState fulltext, org.apache.jackrabbit.oak.api.PropertyState compat, org.apache.jackrabbit.oak.api.PropertyState version) {
        if (compat != null) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(compat);
        }
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion defaultToUse = org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.getDefault();
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion existing = (version != null) ? org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(version) : null;
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion result = defaultToUse;
        if (existing != null) {
            result = org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.max(result, existing);
        }
        if ((fulltext != null) && (!fulltext.getValue(org.apache.jackrabbit.oak.api.Type.BOOLEAN))) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.max(result, org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.V2);
        }
        return result;
    }

    private static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion versionFrom(org.apache.jackrabbit.oak.api.PropertyState ps) {
        return org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.getVersion(com.google.common.primitives.Ints.checkedCast(ps.getValue(org.apache.jackrabbit.oak.api.Type.LONG)));
    }

    private static boolean hasIndexingRules(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        return defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_RULES).exists();
    }
}
22:08:07.447 [pool-1-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
22:08:07.448 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #468
22:08:07.449 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:369 which is executed by 30 tests
-424569946
22:08:10.396 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:08:17.604 [pool-652-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
IndexDefinition.java:288: error: variable result might not have been initialized
            return result;
                   ^
IndexDefinition.java:290: error: variable result might not have been initialized
        return new org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer(result, maxFieldLength);
                                                                                    ^
22:08:17.881 [pool-652-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
class IndexDefinition implements org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.AggregateMapper {
    private static final java.lang.String OAK_CHILD_ORDER = ":childOrder";

    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.class);

    static final int DEFAULT_BLOB_SIZE = (1024 * 1024) - 1024;

    static final long DEFAULT_ENTRY_COUNT = 1000;

    public static final int DEFAULT_MAX_FIELD_LENGTH = 10000;

    static final int DEFAULT_MAX_EXTRACT_LENGTH = -10;

    static final java.lang.String INDEX_VERSION = ":version";

    private static java.lang.String TYPES_ALLOW_ALL_NAME = "all";

    static final int TYPES_ALLOW_NONE = javax.jcr.PropertyType.UNDEFINED;

    static final int TYPES_ALLOW_ALL = -1;

    static final org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry NATIVE_SORT_ORDER = new org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry(org.apache.jackrabbit.JcrConstants.JCR_SCORE, org.apache.jackrabbit.oak.api.Type.UNDEFINED, org.apache.jackrabbit.oak.spi.query.QueryIndex.OrderEntry.Order.DESCENDING);

    private final boolean fullTextEnabled;

    private final org.apache.jackrabbit.oak.spi.state.NodeState definition;

    private final org.apache.jackrabbit.oak.spi.state.NodeState root;

    private final java.lang.String funcName;

    private final int blobSize;

    private final org.apache.lucene.codecs.Codec codec;

    private final long entryCount;

    private final boolean entryCountDefined;

    private final double costPerEntry;

    private final double costPerExecution;

    private final java.util.Map<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> indexRules;

    private final java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> definedRules;

    private final java.lang.String indexName;

    private final boolean testMode;

    private final boolean evaluatePathRestrictions;

    private final org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion version;

    private final java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate> aggregates;

    private final boolean indexesAllTypes;

    private final org.apache.lucene.analysis.Analyzer analyzer;

    private final java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> analyzers;

    private final boolean hasCustomTikaConfig;

    private final int maxFieldLength;

    private final int maxExtractLength;

    private final int suggesterUpdateFrequencyMinutes;

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        this(root, defn, null);
    }

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeBuilder defn) {
        this(root, defn.getBaseState(), defn, null);
    }

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeState defn, @javax.annotation.Nullable
    java.lang.String indexPath) {
        this(root, defn, null, indexPath);
    }

    public IndexDefinition(org.apache.jackrabbit.oak.spi.state.NodeState root, org.apache.jackrabbit.oak.spi.state.NodeState defn, @javax.annotation.Nullable
    org.apache.jackrabbit.oak.spi.state.NodeBuilder defnb, @javax.annotation.Nullable
    java.lang.String indexPath) {
        this.root = root;
        this.version = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexFormatVersion(defn, defnb);
        this.definition = defn;
        this.indexName = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexName(defn, indexPath);
        this.blobSize = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.BLOB_SIZE, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_BLOB_SIZE);
        this.testMode = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TEST_MODE, false);
        this.aggregates = collectAggregates(defn);
        org.apache.jackrabbit.oak.spi.state.NodeState rulesState = defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_RULES);
        if (!rulesState.exists()) {
            rulesState = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.createIndexRules(defn).getNodeState();
        }
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> definedIndexRules = com.google.common.collect.Lists.newArrayList();
        this.indexRules = collectIndexRules(rulesState, definedIndexRules);
        this.definedRules = com.google.common.collect.ImmutableList.copyOf(definedIndexRules);
        this.fullTextEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasFulltextEnabledIndexRule(definedIndexRules);
        this.evaluatePathRestrictions = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EVALUATE_PATH_RESTRICTION, false);
        java.lang.String functionName = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FUNC_NAME, null);
        if (fullTextEnabled && (functionName == null)) {
            functionName = "lucene";
        }
        this.funcName = (functionName != null) ? "native*" + functionName : null;
        this.codec = createCodec();
        if (defn.hasProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ENTRY_COUNT_PROPERTY_NAME)) {
            this.entryCountDefined = true;
            this.entryCount = defn.getProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.ENTRY_COUNT_PROPERTY_NAME).getValue(org.apache.jackrabbit.oak.api.Type.LONG);
        } else {
            this.entryCountDefined = false;
            this.entryCount = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_ENTRY_COUNT;
        }
        this.maxFieldLength = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.MAX_FIELD_LENGTH, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_FIELD_LENGTH);
        this.costPerEntry = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COST_PER_ENTRY, 1.0);
        this.costPerExecution = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COST_PER_EXECUTION, 1.0);
        this.indexesAllTypes = areAllTypesIndexed();
        this.analyzers = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.collectAnalyzers(defn);
        this.analyzer = createAnalyzer();
        this.hasCustomTikaConfig = getTikaConfigNode().exists();
        this.maxExtractLength = determineMaxExtractLength();
        this.suggesterUpdateFrequencyMinutes = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.SUGGEST_UPDATE_FREQUENCY_MINUTES, 60);
    }

    public boolean isFullTextEnabled() {
        return fullTextEnabled;
    }

    public java.lang.String getFunctionName() {
        return funcName;
    }

    public boolean hasFunctionDefined() {
        return funcName != null;
    }

    public int getBlobSize() {
        return blobSize;
    }

    public org.apache.lucene.codecs.Codec getCodec() {
        return codec;
    }

    public long getReindexCount() {
        if (definition.hasProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_COUNT)) {
            return definition.getProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.REINDEX_COUNT).getValue(org.apache.jackrabbit.oak.api.Type.LONG);
        }
        return 0;
    }

    public long getEntryCount() {
        return entryCount;
    }

    public int getSuggesterUpdateFrequencyMinutes() {
        return suggesterUpdateFrequencyMinutes;
    }

    public boolean isEntryCountDefined() {
        return entryCountDefined;
    }

    public double getCostPerEntry() {
        return costPerEntry;
    }

    public double getCostPerExecution() {
        return costPerExecution;
    }

    public long getFulltextEntryCount(long numOfDocs) {
        if (isEntryCountDefined()) {
            return java.lang.Math.min(getEntryCount(), numOfDocs);
        }
        return numOfDocs;
    }

    public org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion getVersion() {
        return version;
    }

    public boolean isOfOldFormat() {
        return !org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasIndexingRules(definition);
    }

    public boolean isTestMode() {
        return testMode;
    }

    public boolean evaluatePathRestrictions() {
        return evaluatePathRestrictions;
    }

    public boolean indexesAllTypes() {
        return indexesAllTypes;
    }

    public org.apache.lucene.analysis.Analyzer getAnalyzer() {
        return analyzer;
    }

    public boolean hasCustomTikaConfig() {
        return hasCustomTikaConfig;
    }

    public java.io.InputStream getTikaConfig() {
        return org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getBlob(getTikaConfigNode(), org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA_CONFIG).getNewStream();
    }

    public java.lang.String getIndexName() {
        return indexName;
    }

    public int getMaxExtractLength() {
        return maxExtractLength;
    }

    @java.lang.Override
    public java.lang.String toString() {
        return "Lucene Index : " + indexName;
    }

    private org.apache.lucene.analysis.Analyzer createAnalyzer() {
        org.apache.lucene.analysis.Analyzer result;
        org.apache.lucene.analysis.Analyzer defaultAnalyzer = org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANALYZER;
        if (analyzers.containsKey(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANL_DEFAULT)) {
            defaultAnalyzer = analyzers.get(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANL_DEFAULT);
        }
        boolean spoonDefaultValue = false;
        try {
            spoonDefaultValue = true;
        } catch (java.lang.Exception __NopolProcessorException) {
        }
        boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
        if (fr.inria.lille.commons.trace.RuntimeValues.instance(109).isEnabled()) {
            fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectionStarts();
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definedRules",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definedRules);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.suggesterUpdateFrequencyMinutes",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.suggesterUpdateFrequencyMinutes);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_BLOB_SIZE",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_BLOB_SIZE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxFieldLength",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxFieldLength);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NATIVE_SORT_ORDER",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NATIVE_SORT_ORDER);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexName",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexName);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexesAllTypes",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexesAllTypes);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.hasCustomTikaConfig",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.hasCustomTikaConfig);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("defaultAnalyzer",defaultAnalyzer);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.evaluatePathRestrictions",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.evaluatePathRestrictions);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzer",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzer);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definition",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.definition);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.version",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.version);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCount",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCount);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCountDefined",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.entryCountDefined);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.root",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.root);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexRules",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.indexRules);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.codec",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.codec);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.blobSize",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.blobSize);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzers",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.analyzers);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerEntry",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerEntry);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerExecution",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.costPerExecution);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxExtractLength",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.maxExtractLength);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_EXTRACT_LENGTH",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_EXTRACT_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_ENTRY_COUNT",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_ENTRY_COUNT);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_NONE",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_NONE);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.fullTextEnabled",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.fullTextEnabled);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.testMode",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.testMode);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.funcName",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.funcName);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.aggregates",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.aggregates);} catch (Exception ex1) {ex1.printStackTrace();};
            try{fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectInput("org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_FIELD_LENGTH",org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_FIELD_LENGTH);} catch (Exception ex1) {ex1.printStackTrace();};
            fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectOutput(runtimeAngelicValue);
            fr.inria.lille.commons.trace.RuntimeValues.instance(109).collectionEnds();
        }
        if (runtimeAngelicValue) if (!evaluatePathRestrictions()) {
            result = defaultAnalyzer;
        } else {
            java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> analyzerMap = com.google.common.collect.ImmutableMap.<java.lang.String, org.apache.lucene.analysis.Analyzer>builder().put(org.apache.jackrabbit.oak.plugins.index.lucene.FieldNames.ANCESTORS, new org.apache.jackrabbit.oak.plugins.index.lucene.util.TokenizerChain(new org.apache.lucene.analysis.path.PathHierarchyTokenizerFactory(java.util.Collections.<java.lang.String, java.lang.String>emptyMap()))).build();
            result = new org.apache.lucene.analysis.miscellaneous.PerFieldAnalyzerWrapper(defaultAnalyzer, analyzerMap);
        }
        if (maxFieldLength < 0) {
            return result;
        }
        return new org.apache.lucene.analysis.miscellaneous.LimitTokenCountAnalyzer(result, maxFieldLength);
    }

    private static java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> collectAnalyzers(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        java.util.Map<java.lang.String, org.apache.lucene.analysis.Analyzer> analyzerMap = com.google.common.collect.Maps.newHashMap();
        org.apache.jackrabbit.oak.plugins.index.lucene.NodeStateAnalyzerFactory factory = new org.apache.jackrabbit.oak.plugins.index.lucene.NodeStateAnalyzerFactory(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.VERSION);
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry cne : defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ANALYZERS).getChildNodeEntries()) {
            org.apache.lucene.analysis.Analyzer a = factory.createInstance(cne.getNodeState());
            analyzerMap.put(cne.getName(), a);
        }
        return com.google.common.collect.ImmutableMap.copyOf(analyzerMap);
    }

    @javax.annotation.CheckForNull
    public org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate getAggregate(java.lang.String nodeType) {
        org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate agg = aggregates.get(nodeType);
        return agg != null ? agg : null;
    }

    private java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate> collectAggregates(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate> aggregateMap = com.google.common.collect.Maps.newHashMap();
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry cne : defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGGREGATES).getChildNodeEntries()) {
            java.lang.String nodeType = cne.getName();
            int recursionLimit = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(cne.getNodeState(), org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_RECURSIVE_LIMIT, org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.RECURSIVE_AGGREGATION_LIMIT_DEFAULT);
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> includes = com.google.common.collect.Lists.newArrayList();
            for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry include : cne.getNodeState().getChildNodeEntries()) {
                org.apache.jackrabbit.oak.spi.state.NodeState is = include.getNodeState();
                java.lang.String primaryType = is.getString(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_PRIMARY_TYPE);
                java.lang.String path = is.getString(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_PATH);
                boolean relativeNode = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(is, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_RELATIVE_NODE, false);
                if (path == null) {
                    org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("Aggregate pattern in {} does not have required property [{}]. {} aggregate rule would " + "be ignored", this, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.AGG_PATH, include.getName());
                    continue;
                }
                includes.add(new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.NodeInclude(this, primaryType, path, relativeNode));
            }
            aggregateMap.put(nodeType, new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate(nodeType, includes, recursionLimit));
        }
        return com.google.common.collect.ImmutableMap.copyOf(aggregateMap);
    }

    public java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> getDefinedRules() {
        return definedRules;
    }

    @javax.annotation.CheckForNull
    public org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule getApplicableIndexingRule(java.lang.String primaryNodeType) {
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> rules = null;
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> r = indexRules.get(primaryNodeType);
        if (r != null) {
            rules = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
            rules.addAll(r);
        }
        if (rules != null) {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule : rules) {
                if (rule.appliesTo(primaryNodeType)) {
                    return rule;
                }
            }
        }
        return null;
    }

    @javax.annotation.CheckForNull
    public org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule getApplicableIndexingRule(org.apache.jackrabbit.oak.api.Tree state) {
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> rules = null;
        java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> r = indexRules.get(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getPrimaryTypeName(state));
        if (r != null) {
            rules = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
            rules.addAll(r);
        }
        for (java.lang.String name : org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMixinTypeNames(state)) {
            r = indexRules.get(name);
            if (r != null) {
                if (rules == null) {
                    rules = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
                }
                rules.addAll(r);
            }
        }
        if (rules != null) {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule : rules) {
                if (rule.appliesTo(state)) {
                    return rule;
                }
            }
        }
        return null;
    }

    private java.util.Map<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> collectIndexRules(org.apache.jackrabbit.oak.spi.state.NodeState indexRules, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> definedIndexRules) {
        if (!indexRules.exists()) {
            return java.util.Collections.emptyMap();
        }
        if (!org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasOrderableChildren(indexRules)) {
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("IndexRule node does not have orderable children in [{}]", this);
        }
        java.util.Map<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> nt2rules = com.google.common.collect.Maps.newHashMap();
        org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager ntReg = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.createNodeTypeManager(org.apache.jackrabbit.oak.plugins.tree.TreeFactory.createReadOnlyTree(root));
        org.apache.jackrabbit.oak.api.Tree ruleTree = org.apache.jackrabbit.oak.plugins.tree.TreeFactory.createReadOnlyTree(indexRules);
        final java.util.List<java.lang.String> allNames = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getAllNodeTypes(ntReg);
        for (org.apache.jackrabbit.oak.api.Tree ruleEntry : ruleTree.getChildren()) {
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule = new org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule(ruleEntry.getName(), indexRules.getChildNode(ruleEntry.getName()));
            definedIndexRules.add(rule);
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.trace("Found rule '{}' for NodeType '{}'", rule, rule.getNodeTypeName());
            java.util.List<java.lang.String> ntNames = allNames;
            if (!rule.inherited) {
                ntNames = java.util.Collections.singletonList(rule.getNodeTypeName());
            }
            for (java.lang.String ntName : ntNames) {
                if (ntReg.isNodeType(ntName, rule.getNodeTypeName())) {
                    java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> perNtConfig = nt2rules.get(ntName);
                    if (perNtConfig == null) {
                        perNtConfig = new java.util.ArrayList<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>();
                        nt2rules.put(ntName, perNtConfig);
                    }
                    org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.trace("Registering rule '{}' for name '{}'", rule, ntName);
                    perNtConfig.add(new org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule(rule, ntName));
                }
            }
        }
        for (java.util.Map.Entry<java.lang.String, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule>> e : nt2rules.entrySet()) {
            e.setValue(com.google.common.collect.ImmutableList.copyOf(e.getValue()));
        }
        return com.google.common.collect.ImmutableMap.copyOf(nt2rules);
    }

    private boolean areAllTypesIndexed() {
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule ntBaseRule = getApplicableIndexingRule(org.apache.jackrabbit.JcrConstants.NT_BASE);
        return ntBaseRule != null;
    }

    public class IndexingRule {
        private final java.lang.String baseNodeType;

        private final java.lang.String nodeTypeName;

        private final java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> propConfigs;

        private final java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern> namePatterns;

        private final java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> nullCheckEnabledProperties;

        private final boolean indexesAllNodesOfMatchingType;

        final float boost;

        final boolean inherited;

        final int propertyTypes;

        final boolean fulltextEnabled;

        final boolean propertyIndexEnabled;

        final org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate aggregate;

        final org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate propAggregate;

        IndexingRule(java.lang.String nodeTypeName, org.apache.jackrabbit.oak.spi.state.NodeState config) {
            this.nodeTypeName = nodeTypeName;
            this.baseNodeType = nodeTypeName;
            this.boost = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(config, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FIELD_BOOST, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition.DEFAULT_BOOST);
            this.inherited = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(config, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.RULE_INHERITED, true);
            this.propertyTypes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getSupportedTypes(config, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_TYPES, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL);
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern> namePatterns = com.google.common.collect.Lists.newArrayList();
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> nonExistentProperties = com.google.common.collect.Lists.newArrayList();
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> propIncludes = com.google.common.collect.Lists.newArrayList();
            this.propConfigs = collectPropConfigs(config, namePatterns, propIncludes, nonExistentProperties);
            this.propAggregate = new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate(nodeTypeName, propIncludes);
            this.aggregate = combine(propAggregate, nodeTypeName);
            this.namePatterns = com.google.common.collect.ImmutableList.copyOf(namePatterns);
            this.nullCheckEnabledProperties = com.google.common.collect.ImmutableList.copyOf(nonExistentProperties);
            this.fulltextEnabled = aggregate.hasNodeAggregates() || hasAnyFullTextEnabledProperty();
            this.propertyIndexEnabled = hasAnyPropertyIndexConfigured();
            this.indexesAllNodesOfMatchingType = allMatchingNodeByTypeIndexed();
            validateRuleDefinition();
        }

        IndexingRule(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule original, java.lang.String nodeTypeName) {
            this.nodeTypeName = nodeTypeName;
            this.baseNodeType = original.getNodeTypeName();
            this.propConfigs = original.propConfigs;
            this.namePatterns = original.namePatterns;
            this.boost = original.boost;
            this.inherited = original.inherited;
            this.propertyTypes = original.propertyTypes;
            this.propertyIndexEnabled = original.propertyIndexEnabled;
            this.propAggregate = original.propAggregate;
            this.nullCheckEnabledProperties = original.nullCheckEnabledProperties;
            this.aggregate = combine(propAggregate, nodeTypeName);
            this.fulltextEnabled = aggregate.hasNodeAggregates() || original.fulltextEnabled;
            this.indexesAllNodesOfMatchingType = allMatchingNodeByTypeIndexed();
        }

        public boolean isIndexed(java.lang.String propertyName) {
            return getConfig(propertyName) != null;
        }

        public java.lang.String getNodeTypeName() {
            return nodeTypeName;
        }

        public java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> getNullCheckEnabledProperties() {
            return nullCheckEnabledProperties;
        }

        @java.lang.Override
        public java.lang.String toString() {
            java.lang.String str = "IndexRule: " + nodeTypeName;
            if (!baseNodeType.equals(nodeTypeName)) {
                str += ("(" + baseNodeType) + ")";
            }
            return str;
        }

        public boolean isAggregated(java.lang.String nodePath) {
            return aggregate.hasRelativeNodeInclude(nodePath);
        }

        public boolean appliesTo(org.apache.jackrabbit.oak.api.Tree state) {
            if (!nodeTypeName.equals(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getPrimaryTypeName(state))) {
                return false;
            }
            return true;
        }

        public boolean appliesTo(java.lang.String nodeTypeName) {
            if (!this.nodeTypeName.equals(nodeTypeName)) {
                return false;
            }
            return true;
        }

        public boolean isFulltextEnabled() {
            return fulltextEnabled;
        }

        @javax.annotation.CheckForNull
        public org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition getConfig(java.lang.String propertyName) {
            org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition config = propConfigs.get(propertyName);
            if (config != null) {
                return config;
            } else
                if (namePatterns.size() > 0) {
                    for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern np : namePatterns) {
                        if (np.matches(propertyName)) {
                            return np.getConfig();
                        }
                    }
                }

            return null;
        }

        public boolean includePropertyType(int type) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.includePropertyType(propertyTypes, type);
        }

        public org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate getAggregate() {
            return aggregate;
        }

        public boolean indexesAllNodesOfMatchingType() {
            return indexesAllNodesOfMatchingType;
        }

        public boolean isBasedOnNtBase() {
            return org.apache.jackrabbit.JcrConstants.NT_BASE.equals(baseNodeType);
        }

        private java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> collectPropConfigs(org.apache.jackrabbit.oak.spi.state.NodeState config, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern> patterns, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> propAggregate, java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> nonExistentProperties) {
            java.util.Map<java.lang.String, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition> propDefns = com.google.common.collect.Maps.newHashMap();
            org.apache.jackrabbit.oak.spi.state.NodeState propNode = config.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
            if (!propNode.exists()) {
                return java.util.Collections.emptyMap();
            }
            if (!org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasOrderableChildren(propNode)) {
                org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("Properties node for [{}] does not have orderable " + "children in [{}]", this, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this);
            }
            org.apache.jackrabbit.oak.api.Tree propTree = org.apache.jackrabbit.oak.plugins.tree.TreeFactory.createReadOnlyTree(propNode);
            for (org.apache.jackrabbit.oak.api.Tree prop : propTree.getChildren()) {
                java.lang.String propName = prop.getName();
                org.apache.jackrabbit.oak.spi.state.NodeState propDefnNode = propNode.getChildNode(propName);
                if (propDefnNode.exists() && (!propDefns.containsKey(propName))) {
                    org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd = new org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition(this, propName, propDefnNode);
                    if (pd.isRegexp) {
                        patterns.add(new org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern(pd.name, pd));
                    } else {
                        propDefns.put(pd.name, pd);
                    }
                    if (pd.relative) {
                        propAggregate.add(new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.PropertyInclude(pd));
                    }
                    if (pd.nullCheckEnabled) {
                        nonExistentProperties.add(pd);
                    }
                }
            }
            return com.google.common.collect.ImmutableMap.copyOf(propDefns);
        }

        private boolean hasAnyFullTextEnabledProperty() {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd : propConfigs.values()) {
                if (pd.fulltextEnabled()) {
                    return true;
                }
            }
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern np : namePatterns) {
                if (np.getConfig().fulltextEnabled()) {
                    return true;
                }
            }
            return false;
        }

        private boolean hasAnyPropertyIndexConfigured() {
            for (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd : propConfigs.values()) {
                if (pd.propertyIndex) {
                    return true;
                }
            }
            for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.NamePattern np : namePatterns) {
                if (np.getConfig().propertyIndex) {
                    return true;
                }
            }
            return false;
        }

        private boolean allMatchingNodeByTypeIndexed() {
            if (fulltextEnabled) {
                return true;
            }
            for (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition pd : nullCheckEnabledProperties) {
                if (!pd.relative) {
                    return true;
                }
            }
            if (getConfig(org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE) != null) {
                return true;
            }
            return false;
        }

        private org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate combine(org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate propAggregate, java.lang.String nodeTypeName) {
            org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate nodeTypeAgg = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.this.getAggregate(nodeTypeName);
            java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate.Include> includes = com.google.common.collect.Lists.newArrayList();
            includes.addAll(propAggregate.getIncludes());
            if (nodeTypeAgg != null) {
                includes.addAll(nodeTypeAgg.getIncludes());
            }
            return new org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate(nodeTypeName, includes);
        }

        private void validateRuleDefinition() {
            if ((!nullCheckEnabledProperties.isEmpty()) && isBasedOnNtBase()) {
                throw new java.lang.IllegalStateException("nt:base based rule cannot have a " + "PropertyDefinition with nullCheckEnabled");
            }
        }
    }

    private static final class NamePattern {
        private final java.lang.String parentPath;

        private final java.util.regex.Pattern pattern;

        private final org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition config;

        private NamePattern(java.lang.String pattern, org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition config) {
            if (org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.REGEX_ALL_PROPS.equals(pattern)) {
                this.parentPath = "";
                this.pattern = java.util.regex.Pattern.compile(pattern);
            } else {
                this.parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(pattern);
                this.pattern = java.util.regex.Pattern.compile(org.apache.jackrabbit.oak.commons.PathUtils.getName(pattern));
            }
            this.config = config;
        }

        boolean matches(java.lang.String propertyPath) {
            java.lang.String parentPath = org.apache.jackrabbit.oak.commons.PathUtils.getParentPath(propertyPath);
            java.lang.String propertyName = org.apache.jackrabbit.oak.commons.PathUtils.getName(propertyPath);
            if (!this.parentPath.equals(parentPath)) {
                return false;
            }
            return pattern.matcher(propertyName).matches();
        }

        org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition getConfig() {
            return config;
        }
    }

    public static org.apache.jackrabbit.oak.spi.state.NodeBuilder updateDefinition(org.apache.jackrabbit.oak.spi.state.NodeBuilder indexDefn) {
        org.apache.jackrabbit.oak.spi.state.NodeState defn = indexDefn.getBaseState();
        if (!org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.hasIndexingRules(defn)) {
            org.apache.jackrabbit.oak.spi.state.NodeState rulesState = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.createIndexRules(defn).getNodeState();
            indexDefn.setChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_RULES, rulesState);
            indexDefn.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexFormatVersion(defn, indexDefn).getVersion());
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.IndexConstants.DECLARING_NODE_TYPES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_NAMES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EXCLUDE_PROPERTY_NAMES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ORDERED_PROP_NAMES);
            indexDefn.removeProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED);
            indexDefn.child(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE).remove();
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.info("Updated index definition for {}", org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineIndexName(defn, null));
        }
        return indexDefn;
    }

    private static org.apache.jackrabbit.oak.spi.state.NodeBuilder createIndexRules(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        org.apache.jackrabbit.oak.spi.state.NodeBuilder builder = org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState.EMPTY_NODE.builder();
        java.util.Set<java.lang.String> declaringNodeTypes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.IndexConstants.DECLARING_NODE_TYPES);
        java.util.Set<java.lang.String> includes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_NAMES);
        java.util.Set<java.lang.String> excludes = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.toLowerCase(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EXCLUDE_PROPERTY_NAMES));
        java.util.Set<java.lang.String> orderedProps = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getMultiProperty(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.ORDERED_PROP_NAMES);
        boolean fullTextEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED, true);
        boolean storageEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.EXPERIMENTAL_STORAGE, true);
        org.apache.jackrabbit.oak.spi.state.NodeState propNodeState = defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
        if (declaringNodeTypes.isEmpty()) {
            declaringNodeTypes = java.util.Collections.singleton(org.apache.jackrabbit.JcrConstants.NT_BASE);
        }
        java.util.Set<java.lang.String> propNamesSet = com.google.common.collect.Sets.newHashSet();
        propNamesSet.addAll(includes);
        propNamesSet.addAll(excludes);
        propNamesSet.addAll(orderedProps);
        for (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry cne : propNodeState.getChildNodeEntries()) {
            if ((!propNamesSet.contains(cne.getName())) && com.google.common.collect.Iterables.isEmpty(cne.getNodeState().getChildNodeNames())) {
                propNamesSet.add(cne.getName());
            }
        }
        java.util.List<java.lang.String> propNames = new java.util.ArrayList<java.lang.String>(propNamesSet);
        final java.lang.String includeAllProp = org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.REGEX_ALL_PROPS;
        if (fullTextEnabled && includes.isEmpty()) {
            propNames.add(includeAllProp);
        }
        for (java.lang.String typeName : declaringNodeTypes) {
            org.apache.jackrabbit.oak.spi.state.NodeBuilder rule = builder.child(typeName);
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(rule);
            java.util.List<java.lang.String> propNodeNames = com.google.common.collect.Lists.newArrayListWithCapacity(propNamesSet.size());
            org.apache.jackrabbit.oak.spi.state.NodeBuilder propNodes = rule.child(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
            int i = 0;
            for (java.lang.String propName : propNames) {
                java.lang.String propNodeName = propName;
                if (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition.isRelativeProperty(propName) || propName.equals(includeAllProp)) {
                    propNodeName = "prop" + (i++);
                }
                propNodeNames.add(propNodeName);
                org.apache.jackrabbit.oak.spi.state.NodeBuilder prop = propNodes.child(propNodeName);
                org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(prop);
                prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NAME, propName);
                if (excludes.contains(propName)) {
                    prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_INDEX, false);
                } else
                    if (fullTextEnabled) {
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_ANALYZED, true);
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE_SCOPE_INDEX, true);
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_USE_IN_EXCERPT, storageEnabled);
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_PROPERTY_INDEX, false);
                    } else {
                        prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_PROPERTY_INDEX, true);
                        if (orderedProps.contains(propName)) {
                            prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_ORDERED, true);
                        }
                    }

                if (propName.equals(includeAllProp)) {
                    prop.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_IS_REGEX, true);
                }
                org.apache.jackrabbit.oak.spi.state.NodeState propDefNode = org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.getPropDefnNode(defn, propName);
                if (propDefNode != null) {
                    for (org.apache.jackrabbit.oak.api.PropertyState ps : propDefNode.getProperties()) {
                        prop.setProperty(ps);
                    }
                }
            }
            org.apache.jackrabbit.oak.api.PropertyState supportedTypes = defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_TYPES);
            if (supportedTypes == null) {
                supportedTypes = org.apache.jackrabbit.oak.plugins.memory.PropertyStates.createProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INCLUDE_PROPERTY_TYPES, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME);
            }
            rule.setProperty(supportedTypes);
            if (!org.apache.jackrabbit.JcrConstants.NT_BASE.equals(typeName)) {
                rule.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.RULE_INHERITED, false);
            }
            propNodes.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER, propNodeNames, org.apache.jackrabbit.oak.api.Type.NAMES);
            org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(propNodes);
        }
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.markAsNtUnstructured(builder);
        builder.setProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER, declaringNodeTypes, org.apache.jackrabbit.oak.api.Type.NAMES);
        return builder;
    }

    private static org.apache.jackrabbit.oak.spi.state.NodeState getPropDefnNode(org.apache.jackrabbit.oak.spi.state.NodeState defn, java.lang.String propName) {
        org.apache.jackrabbit.oak.spi.state.NodeState propNode = defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NODE);
        org.apache.jackrabbit.oak.spi.state.NodeState propDefNode;
        if (org.apache.jackrabbit.oak.plugins.index.lucene.PropertyDefinition.isRelativeProperty(propName)) {
            org.apache.jackrabbit.oak.spi.state.NodeState result = propNode;
            for (java.lang.String name : org.apache.jackrabbit.oak.commons.PathUtils.elements(propName)) {
                result = result.getChildNode(name);
            }
            propDefNode = result;
        } else {
            propDefNode = propNode.getChildNode(propName);
        }
        return propDefNode.exists() ? propDefNode : null;
    }

    private int determineMaxExtractLength() {
        int length = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(definition.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA), org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA_MAX_EXTRACT_LENGTH, org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.DEFAULT_MAX_EXTRACT_LENGTH);
        if (length < 0) {
            return (-length) * maxFieldLength;
        }
        return length;
    }

    private org.apache.jackrabbit.oak.spi.state.NodeState getTikaConfigNode() {
        return definition.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA).getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.TIKA_CONFIG);
    }

    private org.apache.lucene.codecs.Codec createCodec() {
        java.lang.String codecName = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(definition, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.CODEC_NAME, null);
        org.apache.lucene.codecs.Codec codec = null;
        if (codecName != null) {
            codec = org.apache.lucene.codecs.Codec.forName(codecName);
        } else
            if (fullTextEnabled) {
                codec = new org.apache.jackrabbit.oak.plugins.index.lucene.OakCodec();
            }

        return codec;
    }

    private static java.lang.String determineIndexName(org.apache.jackrabbit.oak.spi.state.NodeState defn, java.lang.String indexPath) {
        java.lang.String indexName = defn.getString(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.PROP_NAME);
        if (indexName == null) {
            if (indexPath != null) {
                return indexPath;
            }
            return "<No 'name' property defined>";
        }
        if (indexPath != null) {
            return ((indexName + "(") + indexPath) + ")";
        }
        return indexName;
    }

    private static java.util.Set<java.lang.String> getMultiProperty(org.apache.jackrabbit.oak.spi.state.NodeState definition, java.lang.String propName) {
        org.apache.jackrabbit.oak.api.PropertyState pse = definition.getProperty(propName);
        return pse != null ? com.google.common.collect.ImmutableSet.copyOf(pse.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) : java.util.Collections.<java.lang.String>emptySet();
    }

    private static java.util.Set<java.lang.String> toLowerCase(java.util.Set<java.lang.String> values) {
        java.util.Set<java.lang.String> result = com.google.common.collect.Sets.newHashSet();
        for (java.lang.String val : values) {
            result.add(val.toLowerCase());
        }
        return com.google.common.collect.ImmutableSet.copyOf(result);
    }

    private static java.util.List<java.lang.String> getAllNodeTypes(org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager ntReg) {
        try {
            java.util.List<java.lang.String> typeNames = com.google.common.collect.Lists.newArrayList();
            javax.jcr.nodetype.NodeTypeIterator ntItr = ntReg.getAllNodeTypes();
            while (ntItr.hasNext()) {
                typeNames.add(ntItr.nextNodeType().getName());
            } 
            return typeNames;
        } catch (javax.jcr.RepositoryException e) {
            throw new java.lang.RuntimeException(e);
        }
    }

    private static org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager createNodeTypeManager(final org.apache.jackrabbit.oak.api.Tree root) {
        return new org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager() {
            @java.lang.Override
            protected org.apache.jackrabbit.oak.api.Tree getTypes() {
                return org.apache.jackrabbit.oak.util.TreeUtil.getTree(root, org.apache.jackrabbit.oak.plugins.nodetype.NodeTypeConstants.NODE_TYPES_PATH);
            }

            @javax.annotation.Nonnull
            @java.lang.Override
            protected org.apache.jackrabbit.oak.namepath.NamePathMapper getNamePathMapper() {
                return org.apache.jackrabbit.oak.namepath.NamePathMapper.DEFAULT;
            }
        };
    }

    private static java.lang.String getPrimaryTypeName(org.apache.jackrabbit.oak.api.Tree state) {
        java.lang.String primaryType = org.apache.jackrabbit.oak.util.TreeUtil.getPrimaryTypeName(state);
        return primaryType != null ? primaryType : "nt:base";
    }

    private static java.lang.Iterable<java.lang.String> getMixinTypeNames(org.apache.jackrabbit.oak.api.Tree tree) {
        org.apache.jackrabbit.oak.api.PropertyState property = tree.getProperty(org.apache.jackrabbit.JcrConstants.JCR_MIMETYPE);
        return property != null ? property.getValue(org.apache.jackrabbit.oak.api.Type.NAMES) : java.util.Collections.<java.lang.String>emptyList();
    }

    private static boolean hasOrderableChildren(org.apache.jackrabbit.oak.spi.state.NodeState state) {
        return state.hasProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.OAK_CHILD_ORDER);
    }

    static int getSupportedTypes(org.apache.jackrabbit.oak.spi.state.NodeState defn, java.lang.String typePropertyName, int defaultVal) {
        org.apache.jackrabbit.oak.api.PropertyState pst = defn.getProperty(typePropertyName);
        if (pst != null) {
            int types = 0;
            for (java.lang.String inc : pst.getValue(org.apache.jackrabbit.oak.api.Type.STRINGS)) {
                if (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL_NAME.equals(inc)) {
                    return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL;
                }
                try {
                    types |= 1 << javax.jcr.PropertyType.valueFromName(inc);
                } catch (java.lang.IllegalArgumentException e) {
                    org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.log.warn("Unknown property type: " + inc);
                }
            }
            return types;
        }
        return defaultVal;
    }

    static boolean includePropertyType(int includedPropertyTypes, int type) {
        if (includedPropertyTypes == org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_ALL) {
            return true;
        }
        if (includedPropertyTypes == org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.TYPES_ALLOW_NONE) {
            return false;
        }
        return (includedPropertyTypes & (1 << type)) != 0;
    }

    private static boolean hasFulltextEnabledIndexRule(java.util.List<org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule> rules) {
        for (org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.IndexingRule rule : rules) {
            if (rule.fulltextEnabled) {
                return true;
            }
        }
        return false;
    }

    private static void markAsNtUnstructured(org.apache.jackrabbit.oak.spi.state.NodeBuilder nb) {
        nb.setProperty(org.apache.jackrabbit.JcrConstants.JCR_PRIMARYTYPE, org.apache.jackrabbit.JcrConstants.NT_UNSTRUCTURED, org.apache.jackrabbit.oak.api.Type.NAME);
    }

    private static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineIndexFormatVersion(org.apache.jackrabbit.oak.spi.state.NodeState defn, org.apache.jackrabbit.oak.spi.state.NodeBuilder defnb) {
        if ((defnb != null) && (!defnb.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_DATA_CHILD_NAME).exists())) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defnb);
        }
        if (defn.hasProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE)) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE));
        }
        if (defn.hasProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION)) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION));
        }
        if (!defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_DATA_CHILD_NAME).exists()) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defn);
        }
        boolean fullTextEnabled = org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil.getOptionalValue(defn, org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED, true);
        return fullTextEnabled ? org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.V1 : org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.V2;
    }

    static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineVersionForFreshIndex(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED), defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE), defn.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION));
    }

    static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineVersionForFreshIndex(org.apache.jackrabbit.oak.spi.state.NodeBuilder defnb) {
        return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.determineVersionForFreshIndex(defnb.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.FULL_TEXT_ENABLED), defnb.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.COMPAT_MODE), defnb.getProperty(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.INDEX_VERSION));
    }

    private static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion determineVersionForFreshIndex(org.apache.jackrabbit.oak.api.PropertyState fulltext, org.apache.jackrabbit.oak.api.PropertyState compat, org.apache.jackrabbit.oak.api.PropertyState version) {
        if (compat != null) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(compat);
        }
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion defaultToUse = org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.getDefault();
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion existing = (version != null) ? org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition.versionFrom(version) : null;
        org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion result = defaultToUse;
        if (existing != null) {
            result = org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.max(result, existing);
        }
        if ((fulltext != null) && (!fulltext.getValue(org.apache.jackrabbit.oak.api.Type.BOOLEAN))) {
            return org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.max(result, org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.V2);
        }
        return result;
    }

    private static org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion versionFrom(org.apache.jackrabbit.oak.api.PropertyState ps) {
        return org.apache.jackrabbit.oak.plugins.index.lucene.IndexFormatVersion.getVersion(com.google.common.primitives.Ints.checkedCast(ps.getValue(org.apache.jackrabbit.oak.api.Type.LONG)));
    }

    private static boolean hasIndexingRules(org.apache.jackrabbit.oak.spi.state.NodeState defn) {
        return defn.getChildNode(org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexConstants.INDEX_RULES).exists();
    }
}
22:08:17.883 [pool-1-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
22:08:17.884 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:08:29.354 [pool-654-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:08:29.355 [pool-654-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:08:29.355 [pool-654-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:369.
22:08:29.356 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #469
22:08:29.357 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:366 which is executed by 30 tests
-424569946
22:08:32.198 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:08:44.045 [pool-660-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:08:44.048 [pool-660-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:08:44.050 [pool-660-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:366.
22:08:44.053 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:09:02.447 [pool-666-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:09:02.449 [pool-666-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:09:02.449 [pool-666-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:366.
22:09:02.451 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #470
22:09:02.457 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:365 which is executed by 30 tests
-424569946
22:09:04.610 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #471
22:09:04.611 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:329 which is executed by 30 tests
-424569946
22:09:06.866 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #472
22:09:06.867 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:454 which is executed by 30 tests
22:09:06.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:454
22:09:06.870 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #473
22:09:06.871 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:453 which is executed by 30 tests
22:09:06.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:453
22:09:06.874 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #474
22:09:06.875 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:426 which is executed by 30 tests
22:09:06.876 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:426
22:09:06.877 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #475
22:09:06.878 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState:130 which is executed by 30 tests
22:09:06.879 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState:130
22:09:06.879 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #476
22:09:06.880 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState:59 which is executed by 30 tests
22:09:06.881 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.EmptyNodeState:59
22:09:06.882 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #477
22:09:06.883 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil:55 which is executed by 30 tests
-1469951355
22:09:08.911 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #478
22:09:08.913 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil:54 which is executed by 30 tests
-1469951355
22:09:10.839 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #479
22:09:10.840 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil:45 which is executed by 30 tests
-1469951355
22:09:12.489 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #480
22:09:12.490 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.util.ConfigUtil:44 which is executed by 30 tests
-1469951355
22:09:14.046 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #481
22:09:14.046 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:298 which is executed by 30 tests
22:09:14.047 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:298
22:09:14.048 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #482
22:09:14.048 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:283 which is executed by 30 tests
22:09:14.049 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:283
22:09:14.050 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #483
22:09:14.052 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:282 which is executed by 30 tests
22:09:14.053 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.nodetype.ReadOnlyNodeTypeManager:282
22:09:14.054 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #484
22:09:14.054 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:850 which is executed by 30 tests
-424569946
22:09:16.223 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #485
22:09:16.224 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:641 which is executed by 30 tests
-424569946
22:09:18.512 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #486
22:09:18.513 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.StringPropertyState:52 which is executed by 30 tests
22:09:18.513 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.StringPropertyState:52
22:09:18.514 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #487
22:09:18.515 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:86 which is executed by 30 tests
22:09:18.516 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.spi.state.AbstractNodeState:86
22:09:18.516 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #488
22:09:18.517 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1212 which is executed by 31 tests
-424569946
22:09:20.570 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:09:43.821 [pool-672-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:09:43.823 [pool-672-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:09:43.825 [pool-672-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1212.
22:09:43.841 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:09:59.192 [pool-678-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:09:59.194 [pool-678-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:09:59.195 [pool-678-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1212.
22:09:59.196 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #489
22:09:59.197 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1207 which is executed by 31 tests
-424569946
22:10:02.436 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:10:14.671 [pool-684-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:10:14.673 [pool-684-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:10:14.673 [pool-684-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1207.
22:10:14.674 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:10:32.262 [pool-690-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:10:32.264 [pool-690-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:10:32.265 [pool-690-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1207.
22:10:32.266 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #490
22:10:32.267 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:401 which is executed by 31 tests
-424569946
22:10:35.380 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #491
22:10:35.381 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:400 which is executed by 31 tests
-424569946
22:10:37.551 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #492
22:10:37.552 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:425 which is executed by 31 tests
22:10:37.553 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:425
22:10:37.554 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #493
22:10:37.554 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:424 which is executed by 31 tests
22:10:37.555 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:424
22:10:37.555 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #494
22:10:37.557 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.Logger:421 which is executed by 31 tests
22:10:37.557 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.Logger:421
22:10:37.558 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #495
22:10:37.559 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:156 which is executed by 31 tests
-2115822176
22:10:40.121 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #496
22:10:40.122 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:152 which is executed by 31 tests
-2115822176
22:10:42.791 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #497
22:10:42.792 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:144 which is executed by 31 tests
-2115822176
22:10:45.007 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:10:59.350 [pool-696-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:10:59.352 [pool-696-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:10:59.353 [pool-696-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:144.
22:10:59.354 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #498
22:10:59.356 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:143 which is executed by 31 tests
-2115822176
22:11:03.380 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #499
22:11:03.381 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:106 which is executed by 31 tests
-2115822176
22:11:06.285 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #500
22:11:06.285 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.Aggregate:78 which is executed by 31 tests
-2115822176
22:11:08.168 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #501
22:11:08.169 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:326 which is executed by 31 tests
22:11:08.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.ModifiedNodeState:326
22:11:08.170 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #502
22:11:08.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiPropertyState:161 which is executed by 31 tests
22:11:08.171 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiPropertyState:161
22:11:08.172 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #503
22:11:08.172 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiPropertyState:160 which is executed by 31 tests
22:11:08.173 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiPropertyState:160
22:11:08.174 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #504
22:11:08.175 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiPropertyState:159 which is executed by 31 tests
22:11:08.175 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiPropertyState:159
22:11:08.177 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #505
22:11:08.178 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiGenericPropertyState:34 which is executed by 31 tests
22:11:08.178 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiGenericPropertyState:34
22:11:08.179 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #506
22:11:08.180 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiGenericPropertyState:119 which is executed by 31 tests
22:11:08.180 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.MultiGenericPropertyState:119
22:11:08.181 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #507
22:11:08.182 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:846 which is executed by 31 tests
-424569946
22:11:11.795 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:11:26.588 [pool-702-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:11:26.590 [pool-702-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:11:26.591 [pool-702-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:846.
22:11:26.592 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:11:38.976 [pool-708-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:11:38.979 [pool-708-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): nt:base based rule cannot have a PropertyDefinition with nullCheckEnabled, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): nt:base based rule cannot have a PropertyDefinition with nullCheckEnabled]
22:11:38.979 [pool-708-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:846.
22:11:38.980 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #508
22:11:38.982 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:842 which is executed by 31 tests
-424569946
22:11:44.001 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #509
22:11:44.001 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:839 which is executed by 31 tests
-424569946
22:11:46.148 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:11:57.632 [pool-714-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:11:57.633 [pool-714-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:11:57.634 [pool-714-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:839.
22:11:57.636 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:12:12.344 [pool-720-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:12.344 [pool-720-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:12.345 [pool-720-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:839.
22:12:12.346 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #510
22:12:12.347 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:838 which is executed by 31 tests
-424569946
22:12:17.309 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:12:29.777 [pool-726-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:29.789 [pool-726-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:29.790 [pool-726-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:838.
22:12:29.791 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #511
22:12:29.793 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:837 which is executed by 31 tests
-424569946
22:12:31.993 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #512
22:12:31.994 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:836 which is executed by 31 tests
-424569946
22:12:34.153 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #513
22:12:34.154 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:812 which is executed by 31 tests
-424569946
22:12:36.798 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:12:47.554 [pool-732-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:47.555 [pool-732-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:47.556 [pool-732-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:812.
22:12:47.556 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:12:58.658 [pool-738-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:58.659 [pool-738-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:12:58.660 [pool-738-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:812.
22:12:58.661 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #514
22:12:58.662 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:795 which is executed by 31 tests
-424569946
22:13:01.873 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:13:17.536 [pool-744-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:13:17.537 [pool-744-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:13:17.538 [pool-744-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:795.
22:13:17.540 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #515
22:13:17.540 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:780 which is executed by 31 tests
-424569946
22:13:19.623 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:13:35.247 [pool-750-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:13:35.249 [pool-750-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:13:35.250 [pool-750-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$IndexingRule:780.
22:13:35.250 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #516
22:13:35.251 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:270 which is executed by 31 tests
22:13:35.252 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:270
22:13:35.253 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #517
22:13:35.256 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation ch.qos.logback.classic.LoggerContext:269 which is executed by 31 tests
22:13:35.257 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation ch.qos.logback.classic.LoggerContext:269
22:13:35.259 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #518
22:13:35.261 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.TestUtil:120 which is executed by 8 tests
-1082100779
22:13:37.070 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #519
22:13:37.071 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.TestUtil:119 which is executed by 8 tests
-1082100779
22:13:38.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #520
22:13:38.810 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.TestUtil:118 which is executed by 8 tests
-1082100779
22:13:40.485 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:13:52.196 [pool-756-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:13:52.198 [pool-756-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:13:52.198 [pool-756-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.TestUtil:118.
22:13:52.201 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #521
22:13:52.202 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.TestUtil:117 which is executed by 8 tests
-1082100779
22:13:54.422 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:14:04.284 [pool-762-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:04.286 [pool-762-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:04.287 [pool-762-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.TestUtil:117.
22:14:04.289 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #522
22:14:04.290 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:269 which is executed by 8 tests
22:14:04.291 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.PropertyStates:269
22:14:04.291 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #523
22:14:04.292 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$NamePattern:898 which is executed by 8 tests
-424569946
22:14:07.141 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:14:18.859 [pool-768-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:18.860 [pool-768-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:18.861 [pool-768-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$NamePattern:898.
22:14:18.862 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:14:28.127 [pool-774-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:28.129 [pool-774-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:28.130 [pool-774-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$NamePattern:898.
22:14:28.131 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #524
22:14:28.132 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$NamePattern:897 which is executed by 8 tests
-424569946
22:14:30.727 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #525
22:14:30.729 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition$NamePattern:896 which is executed by 8 tests
-424569946
22:14:33.285 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #526
22:14:33.287 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.GenericPropertyState:35 which is executed by 71 tests
22:14:33.288 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.GenericPropertyState:35
22:14:33.292 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #527
22:14:33.294 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.GenericPropertyState:129 which is executed by 32 tests
22:14:33.295 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.GenericPropertyState:129
22:14:33.296 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #528
22:14:33.297 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.memory.GenericPropertyState:119 which is executed by 32 tests
22:14:33.297 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.jackrabbit.oak.plugins.memory.GenericPropertyState:119
22:14:33.299 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #529
22:14:33.299 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:108 which is executed by 32 tests
22:14:33.300 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:108
22:14:33.301 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #530
22:14:33.303 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:107 which is executed by 32 tests
22:14:33.304 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:107
22:14:33.304 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #531
22:14:33.305 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:103 which is executed by 32 tests
22:14:33.305 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:103
22:14:33.306 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #532
22:14:33.307 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:97 which is executed by 32 tests
22:14:33.312 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:97
22:14:33.313 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #533
22:14:33.313 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:93 which is executed by 32 tests
22:14:33.314 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:93
22:14:33.315 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #534
22:14:33.315 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:92 which is executed by 32 tests
22:14:33.316 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:92
22:14:33.317 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #535
22:14:33.318 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:91 which is executed by 32 tests
22:14:33.318 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:91
22:14:33.320 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #536
22:14:33.320 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.lucene.util.NamedSPILoader:88 which is executed by 32 tests
22:14:33.321 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation org.apache.lucene.util.NamedSPILoader:88
22:14:33.322 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #537
22:14:33.322 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1203 which is executed by 32 tests
-424569946
22:14:36.185 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:14:47.492 [pool-780-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:47.494 [pool-780-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:47.495 [pool-780-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1203.
22:14:47.495 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:14:59.072 [pool-786-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:59.073 [pool-786-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:14:59.073 [pool-786-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1203.
22:14:59.074 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #538
22:14:59.075 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1198 which is executed by 32 tests
-424569946
22:15:02.073 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:15:12.268 [pool-792-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:12.269 [pool-792-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:12.270 [pool-792-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1198.
22:15:12.270 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:15:24.311 [pool-798-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:24.313 [pool-798-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:24.314 [pool-798-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1198.
22:15:24.316 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #539
22:15:24.316 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1169 which is executed by 32 tests
-424569946
22:15:26.601 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #540
22:15:26.602 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1154 which is executed by 32 tests
-424569946
22:15:28.754 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
22:15:40.393 [pool-804-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:40.395 [pool-804-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:40.395 [pool-804-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1154.
22:15:40.396 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
22:15:50.182 [pool-810-thread-1] DEBUG tests.output - Failing tests with false: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:50.183 [pool-810-thread-1] DEBUG tests.output - Failing tests with true: 
[formatUpdate(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null, propertyConfigCaseInsensitive(org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinitionTest): null]
22:15:50.183 [pool-810-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1154.
22:15:50.185 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #541
22:15:50.186 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1153 which is executed by 32 tests
-424569946
22:15:54.463 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #542
22:15:54.464 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1149 which is executed by 32 tests
-424569946
22:15:56.492 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #543
22:15:56.493 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1122 which is executed by 32 tests
-424569946
22:15:58.526 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #544
22:15:58.527 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1115 which is executed by 32 tests
-424569946
22:16:00.592 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #545
22:16:00.593 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation org.apache.jackrabbit.oak.plugins.index.lucene.IndexDefinition:1113 which is executed by 32 tests
-424569946
22:16:03.009 [pool-1-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
