1 InsertBefore /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java/org/apache/wicket/util/lang/Objects.java 258
Faulty:
throw new IllegalArgumentException("invalid comparison: " + v1.getClass().getName() + " and "+ v2.getClass().getName());
Seed:
primitiveDefaults.put(Float.TYPE,0.0f);
**************************************************
2 Replace /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java/org/apache/wicket/util/lang/Objects.java 446
Faulty:
return t1;
Seed:
primitiveDefaults.put(Integer.TYPE,0);
**************************************************
3 Delete /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java/org/apache/wicket/util/lang/Objects.java 608
Faulty:
if ((object1 != null) && object1.getClass().isArray()) {
  if ((object2 != null) && object2.getClass().isArray() && (object2.getClass() == object1.getClass())) {
    result=(Array.getLength(object1) == Array.getLength(object2));
    if (result) {
      for (int i=0, icount=Array.getLength(object1); result && (i < icount); i++) {
        result=isEqual(Array.get(object1,i),Array.get(object2,i));
      }
    }
  }
}
 else {
  result=(object1 != null) && (object2 != null) && ((compareWithConversion(object1,object2) == 0) || object1.equals(object2));
}
Seed:
primitiveDefaults.put(BigDecimal.class,new BigDecimal(0.0));
**************************************************
4 Replace /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java/org/apache/wicket/util/lang/Objects.java 627
Faulty:
result=(object1 != null) && (object2 != null) && ((compareWithConversion(object1,object2) == 0) || object1.equals(object2));
Seed:
primitiveDefaults.put(Double.TYPE,0.0);
**************************************************
5 Replace /apiarty/data/WICKET-5359/wicket/wicket-util/src/main/java/org/apache/wicket/util/lang/Objects.java 515
Faulty:
if (c == Double.class) {
  return DOUBLE;
}
Seed:
primitiveDefaults.put(Short.TYPE,(short)0);
**************************************************
Evaluations: 116
EstimatedTime: 152873
